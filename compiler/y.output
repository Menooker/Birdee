State 249 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: initial_declaration
    2                 | translation_unit definition_or_statement

    3 initial_declaration: /* empty */
    4                    | require_list rename_list
    5                    | require_list
    6                    | rename_list
    7                    | initial_declaration lib_function

    8 require_list: require_declaration
    9             | require_list require_declaration

   10 require_declaration: REQUIRE package_name CR

   11 package_name: IDENTIFIER
   12             | package_name DOT IDENTIFIER

   13 rename_list: rename_declaration
   14            | rename_list rename_declaration

   15 rename_declaration: RENAME package_name IDENTIFIER CR

   16 definition_or_statement: function_definition
   17                        | class_definition
   18                        | statement
   19                        | delegate_definition
   20                        | enum_definition
   21                        | const_definition

   22 basic_type_specifier: VOID_T
   23                     | BOOLEAN_T
   24                     | INT_T
   25                     | DOUBLE_T
   26                     | STRING_T
   27                     | VARIENT_T
   28                     | NATIVE_POINTER_T
   29                     | DELEGATE

   30 identifier_type_specifier: IDENTIFIER

   31 array_type_specifier: basic_type_specifier LB RB
   32                     | IDENTIFIER LB RB
   33                     | array_type_specifier LB RB

   34 template_type_specifier: IDENTIFIER LT type_list GT

   35 type_specifier: basic_type_specifier
   36               | array_type_specifier
   37               | identifier_type_specifier
   38               | template_type_specifier

   39 type_list: type_specifier
   40          | type_list COMMA type_specifier

   41 $@1: /* empty */

   42 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list END

   43 lib_function_declaration_list: /* empty */
   44                              | lib_function_declaration_list function_declaration
   45                              | lib_function_declaration_list class_definition

   46 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   47                     | DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR
   48                     | DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   49                     | DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause CR

   50 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   51                    | FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock
   52                    | BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock
   53                    | BSUB IDENTIFIER LP apostrophe RP throws_clause myblock
   54                    | function_declaration

   55 parameter_list: IDENTIFIER AS type_specifier
   56               | parameter_list COMMA IDENTIFIER AS type_specifier

   57 argument_list: assignment_expression
   58              | argument_list COMMA assignment_expression

   59 statement_list: statement
   60               | statement_list statement

   61 expression: assignment_expression
   62           | expression COMMA assignment_expression

   63 assignment_expression: logical_or_expression
   64                      | primary_expression assignment_operator assignment_expression

   65 assignment_operator: ASSIGN_T
   66                    | ADD_ASSIGN_T
   67                    | SUB_ASSIGN_T
   68                    | MUL_ASSIGN_T
   69                    | DIV_ASSIGN_T
   70                    | MOD_ASSIGN_T

   71 logical_or_expression: logical_and_expression
   72                      | logical_or_expression LOGICAL_OR logical_and_expression

   73 logical_and_expression: equality_expression
   74                       | logical_and_expression LOGICAL_AND equality_expression

   75 equality_expression: relational_expression
   76                    | equality_expression EQ relational_expression
   77                    | equality_expression NE relational_expression

   78 relational_expression: additive_expression
   79                      | relational_expression GT additive_expression
   80                      | relational_expression GE additive_expression
   81                      | relational_expression LT additive_expression
   82                      | relational_expression LE additive_expression

   83 additive_expression: multiplicative_expression
   84                    | additive_expression ADD multiplicative_expression
   85                    | additive_expression SUB multiplicative_expression

   86 multiplicative_expression: unary_expression
   87                          | multiplicative_expression MUL unary_expression
   88                          | multiplicative_expression DIV unary_expression
   89                          | multiplicative_expression MOD unary_expression
   90                          | multiplicative_expression BIT_AND unary_expression
   91                          | multiplicative_expression BIT_OR unary_expression
   92                          | multiplicative_expression BIT_XOR unary_expression

   93 unary_expression: postfix_expression
   94                 | SUB unary_expression
   95                 | EXCLAMATION unary_expression
   96                 | BIT_NOT unary_expression

   97 postfix_expression: primary_expression
   98                   | primary_expression INCREMENT
   99                   | primary_expression DECREMENT
  100                   | primary_expression INSTANCEOF type_specifier

  101 primary_expression: primary_no_new_array
  102                   | array_creation
  103                   | IDENTIFIER
  104                   | AUTOVAR

  105 primary_no_new_array: primary_no_new_array LB expression RB
  106                     | IDENTIFIER LB expression RB
  107                     | primary_expression DOT IDENTIFIER
  108                     | primary_expression LP argument_list RP
  109                     | primary_expression LP RP
  110                     | LP expression RP
  111                     | primary_expression DOWN_CAST_BEGIN type_specifier DOWN_CAST_END
  112                     | INT_LITERAL
  113                     | DOUBLE_LITERAL
  114                     | STRING_LITERAL
  115                     | REGEXP_LITERAL
  116                     | TRUE_T
  117                     | FALSE_T
  118                     | NULL_T
  119                     | array_literal
  120                     | THIS_T
  121                     | SUPER_T
  122                     | NEW DELEGATE LP RP
  123                     | NEW IDENTIFIER LP RP
  124                     | NEW IDENTIFIER LP argument_list RP
  125                     | NEW IDENTIFIER DOT IDENTIFIER LP RP
  126                     | NEW IDENTIFIER DOT IDENTIFIER LP argument_list RP

  127 array_literal: LC expression_list RC
  128              | LC expression_list COMMA RC

  129 array_creation: NEW basic_type_specifier dimension_expression_list
  130               | NEW basic_type_specifier dimension_expression_list dimension_list
  131               | NEW identifier_type_specifier dimension_expression_list
  132               | NEW identifier_type_specifier dimension_expression_list dimension_list

  133 dimension_expression_list: dimension_expression
  134                          | dimension_expression_list dimension_expression

  135 dimension_expression: LB expression RB

  136 dimension_list: LB RB
  137               | dimension_list LB RB

  138 expression_list: /* empty */
  139                | assignment_expression
  140                | expression_list COMMA assignment_expression

  141 statement: expression CR
  142          | if_statement
  143          | switch_statement
  144          | while_statement
  145          | for_statement
  146          | do_while_statement
  147          | foreach_statement
  148          | return_statement
  149          | break_statement
  150          | continue_statement
  151          | try_statement
  152          | throw_statement
  153          | declaration_statement
  154          | CR

  155 if_statement: IF expression THEN myblock
  156             | IF expression THEN myblock ELSE myblock
  157             | IF expression THEN myblock elsif_list
  158             | IF expression THEN myblock elsif_list ELSE myblock

  159 elsif_list: elsif
  160           | elsif_list elsif

  161 elsif: ELSIF expression THEN myblock

  162 label_opt: /* empty */
  163          | IDENTIFIER COLON

  164 switch_statement: SWITCH expression CR case_list default_opt

  165 case_list: one_case
  166          | case_list one_case

  167 one_case: CASE case_expression_list myblock

  168 default_opt: /* empty */
  169            | DEFAULT_T myblock

  170 case_expression_list: assignment_expression
  171                     | expression_list COMMA assignment_expression

  172 while_statement: label_opt WHILE expression myblock

  173 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock

  174 do_while_statement: label_opt DO_T block WHILE LP expression RP CR

  175 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP block

  176 expression_opt: /* empty */
  177               | expression

  178 return_statement: RETURN_T expression_opt CR

  179 identifier_opt: /* empty */
  180               | IDENTIFIER

  181 break_statement: BREAK identifier_opt CR

  182 continue_statement: CONTINUE identifier_opt CR

  183 try_statement: TRY myblock catch_list FINALLY myblock
  184              | TRY myblock FINALLY block
  185              | TRY myblock catch_list

  186 catch_list: catch_clause
  187           | catch_list catch_clause

  188 @2: /* empty */

  189 catch_clause: CATCH @2 type_specifier IDENTIFIER myblock

  190 throw_statement: THROW expression CR
  191                | THROW CR

  192 declaration_statement: DIM IDENTIFIER AS type_specifier CR
  193                      | DIM IDENTIFIER AS type_specifier ASSIGN_T expression CR
  194                      | FINAL IDENTIFIER AS type_specifier CR
  195                      | FINAL IDENTIFIER AS type_specifier ASSIGN_T expression CR

  196 @3: /* empty */

  197 block: LC @3 statement_list RC
  198      | LC RC

  199 template_list: LT extends_list GT
  200              | /* empty */

  201 $@4: /* empty */

  202 class_definition: class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list END

  203 $@5: /* empty */

  204 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END

  205 $@6: /* empty */

  206 class_definition: class_or_interface IDENTIFIER template_list extends CR $@6 END

  207 $@7: /* empty */

  208 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 END

  209 class_or_member_modifier_list: class_or_member_modifier
  210                              | class_or_member_modifier_list class_or_member_modifier

  211 class_or_member_modifier: access_modifier
  212                         | VIRTUAL_T
  213                         | OVERRIDE_T
  214                         | ABSTRACT_T

  215 class_or_interface: CLASS_T
  216                   | INTERFACE_T

  217 extends: /* empty */
  218        | COLON extends_list

  219 extends_list: IDENTIFIER
  220             | extends_list COMMA IDENTIFIER

  221 member_declaration_list: member_declaration
  222                        | member_declaration_list member_declaration

  223 member_declaration: method_member
  224                   | field_member

  225 method_member: method_function_definition
  226              | class_or_member_modifier_list method_function_definition
  227              | constructor_definition
  228              | class_or_member_modifier_list constructor_definition

  229 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock
  230                           | FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause myblock
  231                           | DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  232                           | DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR
  233                           | BSUB IDENTIFIER LP parameter_list RP throws_clause myblock
  234                           | BSUB IDENTIFIER LP RP throws_clause myblock
  235                           | DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause CR
  236                           | DECLARE BSUB IDENTIFIER LP RP throws_clause CR

  237 apostrophe: /* empty */
  238           | COMMA APOSTROPHE

  239 throws_clause: /* empty */
  240              | THROWS exception_list

  241 exception_list: IDENTIFIER
  242               | exception_list COMMA IDENTIFIER

  243 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause myblock
  244                       | CONSTRUCTOR IDENTIFIER LP RP throws_clause myblock
  245                       | DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR
  246                       | DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause CR

  247 access_modifier: PUBLIC_T
  248                | PRIVATE_T

  249 initializer_opt: /* empty */
  250                | ASSIGN_T expression

  251 field_member: DIM IDENTIFIER AS type_specifier initializer_opt CR
  252             | class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR
  253             | FINAL IDENTIFIER AS type_specifier initializer_opt CR
  254             | class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt CR
  255             | FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR

  256 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  257                    | DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

  258 enum_definition: ENUM IDENTIFIER LC enumerator_list RC
  259                | ENUM IDENTIFIER LC enumerator_list COMMA RC

  260 enumerator_list: IDENTIFIER
  261                | enumerator_list COMMA IDENTIFIER

  262 const_definition: CONST IDENTIFIER ASSIGN_T expression CR
  263                 | CONST type_specifier IDENTIFIER CR

  264 unsafe: /* empty */
  265       | UNSAFE CR
  266       | SAFE CR

  267 @8: /* empty */

  268 myblock: CR unsafe @8 statement_list END
  269        | CR END


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 112
DOUBLE_LITERAL (259) 113
STRING_LITERAL (260) 114
REGEXP_LITERAL (261) 115
IDENTIFIER (262) 11 12 15 30 32 34 42 46 47 48 49 50 51 52 53 55 56
    103 106 107 123 124 125 126 163 175 180 189 192 193 194 195 202
    204 206 208 219 220 229 230 231 232 233 234 235 236 241 242 243
    244 245 246 251 252 253 254 255 256 257 258 259 260 261 262 263
AUTOVAR (263) 104
IF (264) 155 156 157 158
ELSE (265) 156 158
ELSIF (266) 161
SWITCH (267) 164
CASE (268) 167
DEFAULT_T (269) 169
WHILE (270) 172 174
DO_T (271) 174
FOR (272) 173
FOREACH (273) 175
RETURN_T (274) 178
BREAK (275) 181
CONTINUE (276) 182
NULL_T (277) 118
LP (278) 46 47 48 49 50 51 52 53 108 109 110 122 123 124 125 126 174
    175 229 230 231 232 233 234 235 236 243 244 245 246 256 257
RP (279) 46 47 48 49 50 51 52 53 108 109 110 122 123 124 125 126 174
    175 229 230 231 232 233 234 235 236 243 244 245 246 256 257
LC (280) 127 128 197 198 258 259
RC (281) 127 128 197 198 258 259
LB (282) 31 32 33 105 106 135 136 137
RB (283) 31 32 33 105 106 135 136 137
SEMICOLON (284) 173
COLON (285) 163 175 218
COMMA (286) 40 56 58 62 128 140 171 220 238 242 259 261
ASSIGN_T (287) 65 193 195 250 262
LOGICAL_AND (288) 74
LOGICAL_OR (289) 72
EQ (290) 76
NE (291) 77
GT (292) 34 79 199
GE (293) 80
LT (294) 34 81 199
LE (295) 82
ADD (296) 84
SUB (297) 85 94
MUL (298) 87
DIV (299) 88
MOD (300) 89
BIT_AND (301) 90
BIT_OR (302) 91
BIT_XOR (303) 92
BIT_NOT (304) 96
TRUE_T (305) 116
FALSE_T (306) 117
EXCLAMATION (307) 95
DOT (308) 12 107 125 126
ADD_ASSIGN_T (309) 66
SUB_ASSIGN_T (310) 67
MUL_ASSIGN_T (311) 68
DIV_ASSIGN_T (312) 69
MOD_ASSIGN_T (313) 70
INCREMENT (314) 98
DECREMENT (315) 99
TRY (316) 183 184 185
CATCH (317) 189
FINALLY (318) 183 184
THROW (319) 190 191
THROWS (320) 240
VOID_T (321) 22
BOOLEAN_T (322) 23
INT_T (323) 24
DOUBLE_T (324) 25
STRING_T (325) 26
VARIENT_T (326) 27
NATIVE_POINTER_T (327) 28
NEW (328) 122 123 124 125 126 129 130 131 132
REQUIRE (329) 10
RENAME (330) 15
CLASS_T (331) 215
INTERFACE_T (332) 216
PUBLIC_T (333) 247
PRIVATE_T (334) 248
VIRTUAL_T (335) 212
OVERRIDE_T (336) 213
ABSTRACT_T (337) 214
THIS_T (338) 120
SUPER_T (339) 121
CONSTRUCTOR (340) 243 244 245 246
INSTANCEOF (341) 100
DOWN_CAST_BEGIN (342) 111
DOWN_CAST_END (343) 111
DELEGATE (344) 29 122 256 257
FINAL (345) 194 195 253 254 255
ENUM (346) 258 259
CONST (347) 262 263
FUNCTION (348) 46 47 50 51 229 230 231 232
AS (349) 46 47 50 51 55 56 192 193 194 195 229 230 231 232 251 252
    253 254 255 256 257
THEN (350) 155 156 157 158 161
DIM (351) 192 193 251
END (352) 42 202 204 206 208 268 269
CR (353) 10 15 42 46 47 48 49 141 154 164 174 178 181 182 190 191 192
    193 194 195 202 204 206 208 231 232 235 236 245 246 251 252 253
    254 255 256 257 262 263 265 266 268 269
DECLARE (354) 46 47 48 49 231 232 235 236 245 246
BSUB (355) 48 49 52 53 233 234 235 236
APOSTROPHE (356) 238
LIB (357) 42
UNSAFE (358) 265
SAFE (359) 266


Nonterminals, with rules where they appear

$accept (105)
    on left: 0
translation_unit (106)
    on left: 1 2, on right: 0 2
initial_declaration (107)
    on left: 3 4 5 6 7, on right: 1 7
require_list (108)
    on left: 8 9, on right: 4 5 9
require_declaration (109)
    on left: 10, on right: 8 9
package_name (110)
    on left: 11 12, on right: 10 12 15
rename_list (111)
    on left: 13 14, on right: 4 6 14
rename_declaration (112)
    on left: 15, on right: 13 14
definition_or_statement (113)
    on left: 16 17 18 19 20 21, on right: 2
basic_type_specifier (114)
    on left: 22 23 24 25 26 27 28 29, on right: 31 35 129 130
identifier_type_specifier (115)
    on left: 30, on right: 37 131 132
array_type_specifier (116)
    on left: 31 32 33, on right: 33 36
template_type_specifier (117)
    on left: 34, on right: 38
type_specifier (118)
    on left: 35 36 37 38, on right: 39 40 46 47 50 51 55 56 100 111
    189 192 193 194 195 229 230 231 232 251 252 253 254 255 256 257
    263
type_list (119)
    on left: 39 40, on right: 34 40
lib_function (120)
    on left: 42, on right: 7
$@1 (121)
    on left: 41, on right: 42
lib_function_declaration_list (122)
    on left: 43 44 45, on right: 42 44 45
function_declaration (123)
    on left: 46 47 48 49, on right: 44 54
function_definition (124)
    on left: 50 51 52 53 54, on right: 16
parameter_list (125)
    on left: 55 56, on right: 46 48 50 52 56 229 231 233 235 243 245
    256
argument_list (126)
    on left: 57 58, on right: 58 108 124 126
statement_list (127)
    on left: 59 60, on right: 60 197 268
expression (128)
    on left: 61 62, on right: 62 105 106 110 135 141 155 156 157 158
    161 164 172 174 175 177 190 193 195 250 262
assignment_expression (129)
    on left: 63 64, on right: 57 58 61 62 64 139 140 170 171
assignment_operator (130)
    on left: 65 66 67 68 69 70, on right: 64
logical_or_expression (131)
    on left: 71 72, on right: 63 72
logical_and_expression (132)
    on left: 73 74, on right: 71 72 74
equality_expression (133)
    on left: 75 76 77, on right: 73 74 76 77
relational_expression (134)
    on left: 78 79 80 81 82, on right: 75 76 77 79 80 81 82
additive_expression (135)
    on left: 83 84 85, on right: 78 79 80 81 82 84 85
multiplicative_expression (136)
    on left: 86 87 88 89 90 91 92, on right: 83 84 85 87 88 89 90 91
    92
unary_expression (137)
    on left: 93 94 95 96, on right: 86 87 88 89 90 91 92 94 95 96
postfix_expression (138)
    on left: 97 98 99 100, on right: 93
primary_expression (139)
    on left: 101 102 103 104, on right: 64 97 98 99 100 107 108 109
    111
primary_no_new_array (140)
    on left: 105 106 107 108 109 110 111 112 113 114 115 116 117 118
    119 120 121 122 123 124 125 126, on right: 101 105
array_literal (141)
    on left: 127 128, on right: 119
array_creation (142)
    on left: 129 130 131 132, on right: 102
dimension_expression_list (143)
    on left: 133 134, on right: 129 130 131 132 134
dimension_expression (144)
    on left: 135, on right: 133 134
dimension_list (145)
    on left: 136 137, on right: 130 132 137
expression_list (146)
    on left: 138 139 140, on right: 127 128 140 171
statement (147)
    on left: 141 142 143 144 145 146 147 148 149 150 151 152 153 154,
    on right: 18 59 60
if_statement (148)
    on left: 155 156 157 158, on right: 142
elsif_list (149)
    on left: 159 160, on right: 157 158 160
elsif (150)
    on left: 161, on right: 159 160
label_opt (151)
    on left: 162 163, on right: 172 173 174 175
switch_statement (152)
    on left: 164, on right: 143
case_list (153)
    on left: 165 166, on right: 164 166
one_case (154)
    on left: 167, on right: 165 166
default_opt (155)
    on left: 168 169, on right: 164
case_expression_list (156)
    on left: 170 171, on right: 167
while_statement (157)
    on left: 172, on right: 144
for_statement (158)
    on left: 173, on right: 145
do_while_statement (159)
    on left: 174, on right: 146
foreach_statement (160)
    on left: 175, on right: 147
expression_opt (161)
    on left: 176 177, on right: 173 178
return_statement (162)
    on left: 178, on right: 148
identifier_opt (163)
    on left: 179 180, on right: 181 182
break_statement (164)
    on left: 181, on right: 149
continue_statement (165)
    on left: 182, on right: 150
try_statement (166)
    on left: 183 184 185, on right: 151
catch_list (167)
    on left: 186 187, on right: 183 185 187
catch_clause (168)
    on left: 189, on right: 186 187
@2 (169)
    on left: 188, on right: 189
throw_statement (170)
    on left: 190 191, on right: 152
declaration_statement (171)
    on left: 192 193 194 195, on right: 153
block (172)
    on left: 197 198, on right: 174 175 184
@3 (173)
    on left: 196, on right: 197
template_list (174)
    on left: 199 200, on right: 202 204 206 208
class_definition (175)
    on left: 202 204 206 208, on right: 17 45
$@4 (176)
    on left: 201, on right: 202
$@5 (177)
    on left: 203, on right: 204
$@6 (178)
    on left: 205, on right: 206
$@7 (179)
    on left: 207, on right: 208
class_or_member_modifier_list (180)
    on left: 209 210, on right: 204 208 210 226 228 252 254 255
class_or_member_modifier (181)
    on left: 211 212 213 214, on right: 209 210
class_or_interface (182)
    on left: 215 216, on right: 202 204 206 208
extends (183)
    on left: 217 218, on right: 202 204 206 208
extends_list (184)
    on left: 219 220, on right: 199 218 220
member_declaration_list (185)
    on left: 221 222, on right: 202 204 222
member_declaration (186)
    on left: 223 224, on right: 221 222
method_member (187)
    on left: 225 226 227 228, on right: 223
method_function_definition (188)
    on left: 229 230 231 232 233 234 235 236, on right: 225 226
apostrophe (189)
    on left: 237 238, on right: 46 47 48 49 50 51 52 53 256 257
throws_clause (190)
    on left: 239 240, on right: 46 47 48 49 50 51 52 53 229 230 231
    232 233 234 235 236 243 244 245 246 256 257
exception_list (191)
    on left: 241 242, on right: 240 242
constructor_definition (192)
    on left: 243 244 245 246, on right: 227 228
access_modifier (193)
    on left: 247 248, on right: 211
initializer_opt (194)
    on left: 249 250, on right: 251 252 253 254 255
field_member (195)
    on left: 251 252 253 254 255, on right: 224
delegate_definition (196)
    on left: 256 257, on right: 19
enum_definition (197)
    on left: 258 259, on right: 20
enumerator_list (198)
    on left: 260 261, on right: 258 259 261
const_definition (199)
    on left: 262 263, on right: 21
unsafe (200)
    on left: 264 265 266, on right: 268
myblock (201)
    on left: 268 269, on right: 50 51 52 53 155 156 157 158 161 167
    169 172 173 183 184 185 189 229 230 233 234 243 244
@8 (202)
    on left: 267, on right: 268


state 0

    0 $accept: . translation_unit $end

    REQUIRE  shift, and go to state 1
    RENAME   shift, and go to state 2

    $default  reduce using rule 3 (initial_declaration)

    translation_unit     go to state 3
    initial_declaration  go to state 4
    require_list         go to state 5
    require_declaration  go to state 6
    rename_list          go to state 7
    rename_declaration   go to state 8


state 1

   10 require_declaration: REQUIRE . package_name CR

    IDENTIFIER  shift, and go to state 9

    package_name  go to state 10


state 2

   15 rename_declaration: RENAME . package_name IDENTIFIER CR

    IDENTIFIER  shift, and go to state 9

    package_name  go to state 11


state 3

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . definition_or_statement

    $end            shift, and go to state 12
    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    CLASS_T         shift, and go to state 35
    INTERFACE_T     shift, and go to state 36
    PUBLIC_T        shift, and go to state 37
    PRIVATE_T       shift, and go to state 38
    VIRTUAL_T       shift, and go to state 39
    OVERRIDE_T      shift, and go to state 40
    ABSTRACT_T      shift, and go to state 41
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43
    DELEGATE        shift, and go to state 44
    FINAL           shift, and go to state 45
    ENUM            shift, and go to state 46
    CONST           shift, and go to state 47
    FUNCTION        shift, and go to state 48
    DIM             shift, and go to state 49
    CR              shift, and go to state 50
    DECLARE         shift, and go to state 51
    BSUB            shift, and go to state 52

    $default  reduce using rule 162 (label_opt)

    definition_or_statement        go to state 53
    function_declaration           go to state 54
    function_definition            go to state 55
    expression                     go to state 56
    assignment_expression          go to state 57
    logical_or_expression          go to state 58
    logical_and_expression         go to state 59
    equality_expression            go to state 60
    relational_expression          go to state 61
    additive_expression            go to state 62
    multiplicative_expression      go to state 63
    unary_expression               go to state 64
    postfix_expression             go to state 65
    primary_expression             go to state 66
    primary_no_new_array           go to state 67
    array_literal                  go to state 68
    array_creation                 go to state 69
    statement                      go to state 70
    if_statement                   go to state 71
    label_opt                      go to state 72
    switch_statement               go to state 73
    while_statement                go to state 74
    for_statement                  go to state 75
    do_while_statement             go to state 76
    foreach_statement              go to state 77
    return_statement               go to state 78
    break_statement                go to state 79
    continue_statement             go to state 80
    try_statement                  go to state 81
    throw_statement                go to state 82
    declaration_statement          go to state 83
    class_definition               go to state 84
    class_or_member_modifier_list  go to state 85
    class_or_member_modifier       go to state 86
    class_or_interface             go to state 87
    access_modifier                go to state 88
    delegate_definition            go to state 89
    enum_definition                go to state 90
    const_definition               go to state 91


state 4

    1 translation_unit: initial_declaration .
    7 initial_declaration: initial_declaration . lib_function

    LIB  shift, and go to state 92

    $default  reduce using rule 1 (translation_unit)

    lib_function  go to state 93


state 5

    4 initial_declaration: require_list . rename_list
    5                    | require_list .
    9 require_list: require_list . require_declaration

    REQUIRE  shift, and go to state 1
    RENAME   shift, and go to state 2

    $default  reduce using rule 5 (initial_declaration)

    require_declaration  go to state 94
    rename_list          go to state 95
    rename_declaration   go to state 8


state 6

    8 require_list: require_declaration .

    $default  reduce using rule 8 (require_list)


state 7

    6 initial_declaration: rename_list .
   14 rename_list: rename_list . rename_declaration

    RENAME  shift, and go to state 2

    $default  reduce using rule 6 (initial_declaration)

    rename_declaration  go to state 96


state 8

   13 rename_list: rename_declaration .

    $default  reduce using rule 13 (rename_list)


state 9

   11 package_name: IDENTIFIER .

    $default  reduce using rule 11 (package_name)


state 10

   10 require_declaration: REQUIRE package_name . CR
   12 package_name: package_name . DOT IDENTIFIER

    DOT  shift, and go to state 97
    CR   shift, and go to state 98


state 11

   12 package_name: package_name . DOT IDENTIFIER
   15 rename_declaration: RENAME package_name . IDENTIFIER CR

    IDENTIFIER  shift, and go to state 99
    DOT         shift, and go to state 97


state 12

    0 $accept: translation_unit $end .

    $default  accept


state 13

  112 primary_no_new_array: INT_LITERAL .

    $default  reduce using rule 112 (primary_no_new_array)


state 14

  113 primary_no_new_array: DOUBLE_LITERAL .

    $default  reduce using rule 113 (primary_no_new_array)


state 15

  114 primary_no_new_array: STRING_LITERAL .

    $default  reduce using rule 114 (primary_no_new_array)


state 16

  115 primary_no_new_array: REGEXP_LITERAL .

    $default  reduce using rule 115 (primary_no_new_array)


state 17

  103 primary_expression: IDENTIFIER .
  106 primary_no_new_array: IDENTIFIER . LB expression RB
  163 label_opt: IDENTIFIER . COLON

    LB     shift, and go to state 100
    COLON  shift, and go to state 101

    $default  reduce using rule 103 (primary_expression)


state 18

  104 primary_expression: AUTOVAR .

    $default  reduce using rule 104 (primary_expression)


state 19

  155 if_statement: IF . expression THEN myblock
  156             | IF . expression THEN myblock ELSE myblock
  157             | IF . expression THEN myblock elsif_list
  158             | IF . expression THEN myblock elsif_list ELSE myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    expression                 go to state 103
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 20

  164 switch_statement: SWITCH . expression CR case_list default_opt

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    expression                 go to state 104
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 21

  178 return_statement: RETURN_T . expression_opt CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    $default  reduce using rule 176 (expression_opt)

    expression                 go to state 105
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69
    expression_opt             go to state 106


state 22

  181 break_statement: BREAK . identifier_opt CR

    IDENTIFIER  shift, and go to state 107

    $default  reduce using rule 179 (identifier_opt)

    identifier_opt  go to state 108


state 23

  182 continue_statement: CONTINUE . identifier_opt CR

    IDENTIFIER  shift, and go to state 107

    $default  reduce using rule 179 (identifier_opt)

    identifier_opt  go to state 109


state 24

  118 primary_no_new_array: NULL_T .

    $default  reduce using rule 118 (primary_no_new_array)


state 25

  110 primary_no_new_array: LP . expression RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    expression                 go to state 110
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 26

  127 array_literal: LC . expression_list RC
  128              | LC . expression_list COMMA RC

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    $default  reduce using rule 138 (expression_list)

    assignment_expression      go to state 111
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69
    expression_list            go to state 112


state 27

   94 unary_expression: SUB . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    unary_expression      go to state 113
    postfix_expression    go to state 65
    primary_expression    go to state 114
    primary_no_new_array  go to state 67
    array_literal         go to state 68
    array_creation        go to state 69


state 28

   96 unary_expression: BIT_NOT . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    unary_expression      go to state 115
    postfix_expression    go to state 65
    primary_expression    go to state 114
    primary_no_new_array  go to state 67
    array_literal         go to state 68
    array_creation        go to state 69


state 29

  116 primary_no_new_array: TRUE_T .

    $default  reduce using rule 116 (primary_no_new_array)


state 30

  117 primary_no_new_array: FALSE_T .

    $default  reduce using rule 117 (primary_no_new_array)


state 31

   95 unary_expression: EXCLAMATION . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    unary_expression      go to state 116
    postfix_expression    go to state 65
    primary_expression    go to state 114
    primary_no_new_array  go to state 67
    array_literal         go to state 68
    array_creation        go to state 69


state 32

  183 try_statement: TRY . myblock catch_list FINALLY myblock
  184              | TRY . myblock FINALLY block
  185              | TRY . myblock catch_list

    CR  shift, and go to state 117

    myblock  go to state 118


state 33

  190 throw_statement: THROW . expression CR
  191                | THROW . CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43
    CR              shift, and go to state 119

    expression                 go to state 120
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 34

  122 primary_no_new_array: NEW . DELEGATE LP RP
  123                     | NEW . IDENTIFIER LP RP
  124                     | NEW . IDENTIFIER LP argument_list RP
  125                     | NEW . IDENTIFIER DOT IDENTIFIER LP RP
  126                     | NEW . IDENTIFIER DOT IDENTIFIER LP argument_list RP
  129 array_creation: NEW . basic_type_specifier dimension_expression_list
  130               | NEW . basic_type_specifier dimension_expression_list dimension_list
  131               | NEW . identifier_type_specifier dimension_expression_list
  132               | NEW . identifier_type_specifier dimension_expression_list dimension_list

    IDENTIFIER        shift, and go to state 121
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 129

    basic_type_specifier       go to state 130
    identifier_type_specifier  go to state 131


state 35

  215 class_or_interface: CLASS_T .

    $default  reduce using rule 215 (class_or_interface)


state 36

  216 class_or_interface: INTERFACE_T .

    $default  reduce using rule 216 (class_or_interface)


state 37

  247 access_modifier: PUBLIC_T .

    $default  reduce using rule 247 (access_modifier)


state 38

  248 access_modifier: PRIVATE_T .

    $default  reduce using rule 248 (access_modifier)


state 39

  212 class_or_member_modifier: VIRTUAL_T .

    $default  reduce using rule 212 (class_or_member_modifier)


state 40

  213 class_or_member_modifier: OVERRIDE_T .

    $default  reduce using rule 213 (class_or_member_modifier)


state 41

  214 class_or_member_modifier: ABSTRACT_T .

    $default  reduce using rule 214 (class_or_member_modifier)


state 42

  120 primary_no_new_array: THIS_T .

    $default  reduce using rule 120 (primary_no_new_array)


state 43

  121 primary_no_new_array: SUPER_T .

    $default  reduce using rule 121 (primary_no_new_array)


state 44

  256 delegate_definition: DELEGATE . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  257                    | DELEGATE . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 132


state 45

  194 declaration_statement: FINAL . IDENTIFIER AS type_specifier CR
  195                      | FINAL . IDENTIFIER AS type_specifier ASSIGN_T expression CR

    IDENTIFIER  shift, and go to state 133


state 46

  258 enum_definition: ENUM . IDENTIFIER LC enumerator_list RC
  259                | ENUM . IDENTIFIER LC enumerator_list COMMA RC

    IDENTIFIER  shift, and go to state 134


state 47

  262 const_definition: CONST . IDENTIFIER ASSIGN_T expression CR
  263                 | CONST . type_specifier IDENTIFIER CR

    IDENTIFIER        shift, and go to state 135
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 141


state 48

   50 function_definition: FUNCTION . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   51                    | FUNCTION . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 142


state 49

  192 declaration_statement: DIM . IDENTIFIER AS type_specifier CR
  193                      | DIM . IDENTIFIER AS type_specifier ASSIGN_T expression CR

    IDENTIFIER  shift, and go to state 143


state 50

  154 statement: CR .

    $default  reduce using rule 154 (statement)


state 51

   46 function_declaration: DECLARE . FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   47                     | DECLARE . FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR
   48                     | DECLARE . BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   49                     | DECLARE . BSUB IDENTIFIER LP apostrophe RP throws_clause CR

    FUNCTION  shift, and go to state 144
    BSUB      shift, and go to state 145


state 52

   52 function_definition: BSUB . IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock
   53                    | BSUB . IDENTIFIER LP apostrophe RP throws_clause myblock

    IDENTIFIER  shift, and go to state 146


state 53

    2 translation_unit: translation_unit definition_or_statement .

    $default  reduce using rule 2 (translation_unit)


state 54

   54 function_definition: function_declaration .

    $default  reduce using rule 54 (function_definition)


state 55

   16 definition_or_statement: function_definition .

    $default  reduce using rule 16 (definition_or_statement)


state 56

   62 expression: expression . COMMA assignment_expression
  141 statement: expression . CR

    COMMA  shift, and go to state 147
    CR     shift, and go to state 148


state 57

   61 expression: assignment_expression .

    $default  reduce using rule 61 (expression)


state 58

   63 assignment_expression: logical_or_expression .
   72 logical_or_expression: logical_or_expression . LOGICAL_OR logical_and_expression

    LOGICAL_OR  shift, and go to state 149

    $default  reduce using rule 63 (assignment_expression)


state 59

   71 logical_or_expression: logical_and_expression .
   74 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 150

    $default  reduce using rule 71 (logical_or_expression)


state 60

   73 logical_and_expression: equality_expression .
   76 equality_expression: equality_expression . EQ relational_expression
   77                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 151
    NE  shift, and go to state 152

    $default  reduce using rule 73 (logical_and_expression)


state 61

   75 equality_expression: relational_expression .
   79 relational_expression: relational_expression . GT additive_expression
   80                      | relational_expression . GE additive_expression
   81                      | relational_expression . LT additive_expression
   82                      | relational_expression . LE additive_expression

    GT  shift, and go to state 153
    GE  shift, and go to state 154
    LT  shift, and go to state 155
    LE  shift, and go to state 156

    $default  reduce using rule 75 (equality_expression)


state 62

   78 relational_expression: additive_expression .
   84 additive_expression: additive_expression . ADD multiplicative_expression
   85                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 157
    SUB  shift, and go to state 158

    $default  reduce using rule 78 (relational_expression)


state 63

   83 additive_expression: multiplicative_expression .
   87 multiplicative_expression: multiplicative_expression . MUL unary_expression
   88                          | multiplicative_expression . DIV unary_expression
   89                          | multiplicative_expression . MOD unary_expression
   90                          | multiplicative_expression . BIT_AND unary_expression
   91                          | multiplicative_expression . BIT_OR unary_expression
   92                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 159
    DIV      shift, and go to state 160
    MOD      shift, and go to state 161
    BIT_AND  shift, and go to state 162
    BIT_OR   shift, and go to state 163
    BIT_XOR  shift, and go to state 164

    $default  reduce using rule 83 (additive_expression)


state 64

   86 multiplicative_expression: unary_expression .

    $default  reduce using rule 86 (multiplicative_expression)


state 65

   93 unary_expression: postfix_expression .

    $default  reduce using rule 93 (unary_expression)


state 66

   64 assignment_expression: primary_expression . assignment_operator assignment_expression
   97 postfix_expression: primary_expression .
   98                   | primary_expression . INCREMENT
   99                   | primary_expression . DECREMENT
  100                   | primary_expression . INSTANCEOF type_specifier
  107 primary_no_new_array: primary_expression . DOT IDENTIFIER
  108                     | primary_expression . LP argument_list RP
  109                     | primary_expression . LP RP
  111                     | primary_expression . DOWN_CAST_BEGIN type_specifier DOWN_CAST_END

    LP               shift, and go to state 165
    ASSIGN_T         shift, and go to state 166
    DOT              shift, and go to state 167
    ADD_ASSIGN_T     shift, and go to state 168
    SUB_ASSIGN_T     shift, and go to state 169
    MUL_ASSIGN_T     shift, and go to state 170
    DIV_ASSIGN_T     shift, and go to state 171
    MOD_ASSIGN_T     shift, and go to state 172
    INCREMENT        shift, and go to state 173
    DECREMENT        shift, and go to state 174
    INSTANCEOF       shift, and go to state 175
    DOWN_CAST_BEGIN  shift, and go to state 176

    $default  reduce using rule 97 (postfix_expression)

    assignment_operator  go to state 177


state 67

  101 primary_expression: primary_no_new_array .
  105 primary_no_new_array: primary_no_new_array . LB expression RB

    LB  shift, and go to state 178

    $default  reduce using rule 101 (primary_expression)


state 68

  119 primary_no_new_array: array_literal .

    $default  reduce using rule 119 (primary_no_new_array)


state 69

  102 primary_expression: array_creation .

    $default  reduce using rule 102 (primary_expression)


state 70

   18 definition_or_statement: statement .

    $default  reduce using rule 18 (definition_or_statement)


state 71

  142 statement: if_statement .

    $default  reduce using rule 142 (statement)


state 72

  172 while_statement: label_opt . WHILE expression myblock
  173 for_statement: label_opt . FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock
  174 do_while_statement: label_opt . DO_T block WHILE LP expression RP CR
  175 foreach_statement: label_opt . FOREACH LP IDENTIFIER COLON expression RP block

    WHILE    shift, and go to state 179
    DO_T     shift, and go to state 180
    FOR      shift, and go to state 181
    FOREACH  shift, and go to state 182


state 73

  143 statement: switch_statement .

    $default  reduce using rule 143 (statement)


state 74

  144 statement: while_statement .

    $default  reduce using rule 144 (statement)


state 75

  145 statement: for_statement .

    $default  reduce using rule 145 (statement)


state 76

  146 statement: do_while_statement .

    $default  reduce using rule 146 (statement)


state 77

  147 statement: foreach_statement .

    $default  reduce using rule 147 (statement)


state 78

  148 statement: return_statement .

    $default  reduce using rule 148 (statement)


state 79

  149 statement: break_statement .

    $default  reduce using rule 149 (statement)


state 80

  150 statement: continue_statement .

    $default  reduce using rule 150 (statement)


state 81

  151 statement: try_statement .

    $default  reduce using rule 151 (statement)


state 82

  152 statement: throw_statement .

    $default  reduce using rule 152 (statement)


state 83

  153 statement: declaration_statement .

    $default  reduce using rule 153 (statement)


state 84

   17 definition_or_statement: class_definition .

    $default  reduce using rule 17 (definition_or_statement)


state 85

  204 class_definition: class_or_member_modifier_list . class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END
  208                 | class_or_member_modifier_list . class_or_interface IDENTIFIER template_list extends CR $@7 END
  210 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier

    CLASS_T      shift, and go to state 35
    INTERFACE_T  shift, and go to state 36
    PUBLIC_T     shift, and go to state 37
    PRIVATE_T    shift, and go to state 38
    VIRTUAL_T    shift, and go to state 39
    OVERRIDE_T   shift, and go to state 40
    ABSTRACT_T   shift, and go to state 41

    class_or_member_modifier  go to state 183
    class_or_interface        go to state 184
    access_modifier           go to state 88


state 86

  209 class_or_member_modifier_list: class_or_member_modifier .

    $default  reduce using rule 209 (class_or_member_modifier_list)


state 87

  202 class_definition: class_or_interface . IDENTIFIER template_list extends CR $@4 member_declaration_list END
  206                 | class_or_interface . IDENTIFIER template_list extends CR $@6 END

    IDENTIFIER  shift, and go to state 185


state 88

  211 class_or_member_modifier: access_modifier .

    $default  reduce using rule 211 (class_or_member_modifier)


state 89

   19 definition_or_statement: delegate_definition .

    $default  reduce using rule 19 (definition_or_statement)


state 90

   20 definition_or_statement: enum_definition .

    $default  reduce using rule 20 (definition_or_statement)


state 91

   21 definition_or_statement: const_definition .

    $default  reduce using rule 21 (definition_or_statement)


state 92

   42 lib_function: LIB . IDENTIFIER $@1 CR lib_function_declaration_list END

    IDENTIFIER  shift, and go to state 186


state 93

    7 initial_declaration: initial_declaration lib_function .

    $default  reduce using rule 7 (initial_declaration)


state 94

    9 require_list: require_list require_declaration .

    $default  reduce using rule 9 (require_list)


state 95

    4 initial_declaration: require_list rename_list .
   14 rename_list: rename_list . rename_declaration

    RENAME  shift, and go to state 2

    $default  reduce using rule 4 (initial_declaration)

    rename_declaration  go to state 96


state 96

   14 rename_list: rename_list rename_declaration .

    $default  reduce using rule 14 (rename_list)


state 97

   12 package_name: package_name DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 187


state 98

   10 require_declaration: REQUIRE package_name CR .

    $default  reduce using rule 10 (require_declaration)


state 99

   15 rename_declaration: RENAME package_name IDENTIFIER . CR

    CR  shift, and go to state 188


state 100

  106 primary_no_new_array: IDENTIFIER LB . expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    expression                 go to state 189
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 101

  163 label_opt: IDENTIFIER COLON .

    $default  reduce using rule 163 (label_opt)


state 102

  103 primary_expression: IDENTIFIER .
  106 primary_no_new_array: IDENTIFIER . LB expression RB

    LB  shift, and go to state 100

    $default  reduce using rule 103 (primary_expression)


state 103

   62 expression: expression . COMMA assignment_expression
  155 if_statement: IF expression . THEN myblock
  156             | IF expression . THEN myblock ELSE myblock
  157             | IF expression . THEN myblock elsif_list
  158             | IF expression . THEN myblock elsif_list ELSE myblock

    COMMA  shift, and go to state 147
    THEN   shift, and go to state 190


state 104

   62 expression: expression . COMMA assignment_expression
  164 switch_statement: SWITCH expression . CR case_list default_opt

    COMMA  shift, and go to state 147
    CR     shift, and go to state 191


state 105

   62 expression: expression . COMMA assignment_expression
  177 expression_opt: expression .

    COMMA  shift, and go to state 147

    $default  reduce using rule 177 (expression_opt)


state 106

  178 return_statement: RETURN_T expression_opt . CR

    CR  shift, and go to state 192


state 107

  180 identifier_opt: IDENTIFIER .

    $default  reduce using rule 180 (identifier_opt)


state 108

  181 break_statement: BREAK identifier_opt . CR

    CR  shift, and go to state 193


state 109

  182 continue_statement: CONTINUE identifier_opt . CR

    CR  shift, and go to state 194


state 110

   62 expression: expression . COMMA assignment_expression
  110 primary_no_new_array: LP expression . RP

    RP     shift, and go to state 195
    COMMA  shift, and go to state 147


state 111

  139 expression_list: assignment_expression .

    $default  reduce using rule 139 (expression_list)


state 112

  127 array_literal: LC expression_list . RC
  128              | LC expression_list . COMMA RC
  140 expression_list: expression_list . COMMA assignment_expression

    RC     shift, and go to state 196
    COMMA  shift, and go to state 197


state 113

   94 unary_expression: SUB unary_expression .

    $default  reduce using rule 94 (unary_expression)


state 114

   97 postfix_expression: primary_expression .
   98                   | primary_expression . INCREMENT
   99                   | primary_expression . DECREMENT
  100                   | primary_expression . INSTANCEOF type_specifier
  107 primary_no_new_array: primary_expression . DOT IDENTIFIER
  108                     | primary_expression . LP argument_list RP
  109                     | primary_expression . LP RP
  111                     | primary_expression . DOWN_CAST_BEGIN type_specifier DOWN_CAST_END

    LP               shift, and go to state 165
    DOT              shift, and go to state 167
    INCREMENT        shift, and go to state 173
    DECREMENT        shift, and go to state 174
    INSTANCEOF       shift, and go to state 175
    DOWN_CAST_BEGIN  shift, and go to state 176

    $default  reduce using rule 97 (postfix_expression)


state 115

   96 unary_expression: BIT_NOT unary_expression .

    $default  reduce using rule 96 (unary_expression)


state 116

   95 unary_expression: EXCLAMATION unary_expression .

    $default  reduce using rule 95 (unary_expression)


state 117

  268 myblock: CR . unsafe @8 statement_list END
  269        | CR . END

    END     shift, and go to state 198
    UNSAFE  shift, and go to state 199
    SAFE    shift, and go to state 200

    $default  reduce using rule 264 (unsafe)

    unsafe  go to state 201


state 118

  183 try_statement: TRY myblock . catch_list FINALLY myblock
  184              | TRY myblock . FINALLY block
  185              | TRY myblock . catch_list

    CATCH    shift, and go to state 202
    FINALLY  shift, and go to state 203

    catch_list    go to state 204
    catch_clause  go to state 205


state 119

  191 throw_statement: THROW CR .

    $default  reduce using rule 191 (throw_statement)


state 120

   62 expression: expression . COMMA assignment_expression
  190 throw_statement: THROW expression . CR

    COMMA  shift, and go to state 147
    CR     shift, and go to state 206


state 121

   30 identifier_type_specifier: IDENTIFIER .
  123 primary_no_new_array: NEW IDENTIFIER . LP RP
  124                     | NEW IDENTIFIER . LP argument_list RP
  125                     | NEW IDENTIFIER . DOT IDENTIFIER LP RP
  126                     | NEW IDENTIFIER . DOT IDENTIFIER LP argument_list RP

    LP   shift, and go to state 207
    DOT  shift, and go to state 208

    $default  reduce using rule 30 (identifier_type_specifier)


state 122

   22 basic_type_specifier: VOID_T .

    $default  reduce using rule 22 (basic_type_specifier)


state 123

   23 basic_type_specifier: BOOLEAN_T .

    $default  reduce using rule 23 (basic_type_specifier)


state 124

   24 basic_type_specifier: INT_T .

    $default  reduce using rule 24 (basic_type_specifier)


state 125

   25 basic_type_specifier: DOUBLE_T .

    $default  reduce using rule 25 (basic_type_specifier)


state 126

   26 basic_type_specifier: STRING_T .

    $default  reduce using rule 26 (basic_type_specifier)


state 127

   27 basic_type_specifier: VARIENT_T .

    $default  reduce using rule 27 (basic_type_specifier)


state 128

   28 basic_type_specifier: NATIVE_POINTER_T .

    $default  reduce using rule 28 (basic_type_specifier)


state 129

   29 basic_type_specifier: DELEGATE .
  122 primary_no_new_array: NEW DELEGATE . LP RP

    LP  shift, and go to state 209

    $default  reduce using rule 29 (basic_type_specifier)


state 130

  129 array_creation: NEW basic_type_specifier . dimension_expression_list
  130               | NEW basic_type_specifier . dimension_expression_list dimension_list

    LB  shift, and go to state 210

    dimension_expression_list  go to state 211
    dimension_expression       go to state 212


state 131

  131 array_creation: NEW identifier_type_specifier . dimension_expression_list
  132               | NEW identifier_type_specifier . dimension_expression_list dimension_list

    LB  shift, and go to state 210

    dimension_expression_list  go to state 213
    dimension_expression       go to state 212


state 132

  256 delegate_definition: DELEGATE IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  257                    | DELEGATE IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause CR

    LP  shift, and go to state 214


state 133

  194 declaration_statement: FINAL IDENTIFIER . AS type_specifier CR
  195                      | FINAL IDENTIFIER . AS type_specifier ASSIGN_T expression CR

    AS  shift, and go to state 215


state 134

  258 enum_definition: ENUM IDENTIFIER . LC enumerator_list RC
  259                | ENUM IDENTIFIER . LC enumerator_list COMMA RC

    LC  shift, and go to state 216


state 135

   30 identifier_type_specifier: IDENTIFIER .
   32 array_type_specifier: IDENTIFIER . LB RB
   34 template_type_specifier: IDENTIFIER . LT type_list GT
  262 const_definition: CONST IDENTIFIER . ASSIGN_T expression CR

    LB        shift, and go to state 217
    ASSIGN_T  shift, and go to state 218
    LT        shift, and go to state 219

    $default  reduce using rule 30 (identifier_type_specifier)


state 136

   29 basic_type_specifier: DELEGATE .

    $default  reduce using rule 29 (basic_type_specifier)


state 137

   31 array_type_specifier: basic_type_specifier . LB RB
   35 type_specifier: basic_type_specifier .

    LB  shift, and go to state 220

    $default  reduce using rule 35 (type_specifier)


state 138

   37 type_specifier: identifier_type_specifier .

    $default  reduce using rule 37 (type_specifier)


state 139

   33 array_type_specifier: array_type_specifier . LB RB
   36 type_specifier: array_type_specifier .

    LB  shift, and go to state 221

    $default  reduce using rule 36 (type_specifier)


state 140

   38 type_specifier: template_type_specifier .

    $default  reduce using rule 38 (type_specifier)


state 141

  263 const_definition: CONST type_specifier . IDENTIFIER CR

    IDENTIFIER  shift, and go to state 222


state 142

   50 function_definition: FUNCTION IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   51                    | FUNCTION IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause myblock

    LP  shift, and go to state 223


state 143

  192 declaration_statement: DIM IDENTIFIER . AS type_specifier CR
  193                      | DIM IDENTIFIER . AS type_specifier ASSIGN_T expression CR

    AS  shift, and go to state 224


state 144

   46 function_declaration: DECLARE FUNCTION . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   47                     | DECLARE FUNCTION . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 225


state 145

   48 function_declaration: DECLARE BSUB . IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   49                     | DECLARE BSUB . IDENTIFIER LP apostrophe RP throws_clause CR

    IDENTIFIER  shift, and go to state 226


state 146

   52 function_definition: BSUB IDENTIFIER . LP parameter_list apostrophe RP throws_clause myblock
   53                    | BSUB IDENTIFIER . LP apostrophe RP throws_clause myblock

    LP  shift, and go to state 227


state 147

   62 expression: expression COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    assignment_expression      go to state 228
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 148

  141 statement: expression CR .

    $default  reduce using rule 141 (statement)


state 149

   72 logical_or_expression: logical_or_expression LOGICAL_OR . logical_and_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    logical_and_expression     go to state 229
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 114
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 150

   74 logical_and_expression: logical_and_expression LOGICAL_AND . equality_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    equality_expression        go to state 230
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 114
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 151

   76 equality_expression: equality_expression EQ . relational_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    relational_expression      go to state 231
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 114
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 152

   77 equality_expression: equality_expression NE . relational_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    relational_expression      go to state 232
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 114
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 153

   79 relational_expression: relational_expression GT . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    additive_expression        go to state 233
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 114
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 154

   80 relational_expression: relational_expression GE . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    additive_expression        go to state 234
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 114
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 155

   81 relational_expression: relational_expression LT . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    additive_expression        go to state 235
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 114
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 156

   82 relational_expression: relational_expression LE . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    additive_expression        go to state 236
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 114
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 157

   84 additive_expression: additive_expression ADD . multiplicative_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    multiplicative_expression  go to state 237
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 114
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 158

   85 additive_expression: additive_expression SUB . multiplicative_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    multiplicative_expression  go to state 238
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 114
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 159

   87 multiplicative_expression: multiplicative_expression MUL . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    unary_expression      go to state 239
    postfix_expression    go to state 65
    primary_expression    go to state 114
    primary_no_new_array  go to state 67
    array_literal         go to state 68
    array_creation        go to state 69


state 160

   88 multiplicative_expression: multiplicative_expression DIV . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    unary_expression      go to state 240
    postfix_expression    go to state 65
    primary_expression    go to state 114
    primary_no_new_array  go to state 67
    array_literal         go to state 68
    array_creation        go to state 69


state 161

   89 multiplicative_expression: multiplicative_expression MOD . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    unary_expression      go to state 241
    postfix_expression    go to state 65
    primary_expression    go to state 114
    primary_no_new_array  go to state 67
    array_literal         go to state 68
    array_creation        go to state 69


state 162

   90 multiplicative_expression: multiplicative_expression BIT_AND . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    unary_expression      go to state 242
    postfix_expression    go to state 65
    primary_expression    go to state 114
    primary_no_new_array  go to state 67
    array_literal         go to state 68
    array_creation        go to state 69


state 163

   91 multiplicative_expression: multiplicative_expression BIT_OR . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    unary_expression      go to state 243
    postfix_expression    go to state 65
    primary_expression    go to state 114
    primary_no_new_array  go to state 67
    array_literal         go to state 68
    array_creation        go to state 69


state 164

   92 multiplicative_expression: multiplicative_expression BIT_XOR . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    unary_expression      go to state 244
    postfix_expression    go to state 65
    primary_expression    go to state 114
    primary_no_new_array  go to state 67
    array_literal         go to state 68
    array_creation        go to state 69


state 165

  108 primary_no_new_array: primary_expression LP . argument_list RP
  109                     | primary_expression LP . RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    RP              shift, and go to state 245
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    argument_list              go to state 246
    assignment_expression      go to state 247
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 166

   65 assignment_operator: ASSIGN_T .

    $default  reduce using rule 65 (assignment_operator)


state 167

  107 primary_no_new_array: primary_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 248


state 168

   66 assignment_operator: ADD_ASSIGN_T .

    $default  reduce using rule 66 (assignment_operator)


state 169

   67 assignment_operator: SUB_ASSIGN_T .

    $default  reduce using rule 67 (assignment_operator)


state 170

   68 assignment_operator: MUL_ASSIGN_T .

    $default  reduce using rule 68 (assignment_operator)


state 171

   69 assignment_operator: DIV_ASSIGN_T .

    $default  reduce using rule 69 (assignment_operator)


state 172

   70 assignment_operator: MOD_ASSIGN_T .

    $default  reduce using rule 70 (assignment_operator)


state 173

   98 postfix_expression: primary_expression INCREMENT .

    $default  reduce using rule 98 (postfix_expression)


state 174

   99 postfix_expression: primary_expression DECREMENT .

    $default  reduce using rule 99 (postfix_expression)


state 175

  100 postfix_expression: primary_expression INSTANCEOF . type_specifier

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 250


state 176

  111 primary_no_new_array: primary_expression DOWN_CAST_BEGIN . type_specifier DOWN_CAST_END

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 251


state 177

   64 assignment_expression: primary_expression assignment_operator . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    assignment_expression      go to state 252
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 178

  105 primary_no_new_array: primary_no_new_array LB . expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    expression                 go to state 253
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 179

  172 while_statement: label_opt WHILE . expression myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    expression                 go to state 254
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 180

  174 do_while_statement: label_opt DO_T . block WHILE LP expression RP CR

    LC  shift, and go to state 255

    block  go to state 256


state 181

  173 for_statement: label_opt FOR . expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    $default  reduce using rule 176 (expression_opt)

    expression                 go to state 105
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69
    expression_opt             go to state 257


state 182

  175 foreach_statement: label_opt FOREACH . LP IDENTIFIER COLON expression RP block

    LP  shift, and go to state 258


state 183

  210 class_or_member_modifier_list: class_or_member_modifier_list class_or_member_modifier .

    $default  reduce using rule 210 (class_or_member_modifier_list)


state 184

  204 class_definition: class_or_member_modifier_list class_or_interface . IDENTIFIER template_list extends CR $@5 member_declaration_list END
  208                 | class_or_member_modifier_list class_or_interface . IDENTIFIER template_list extends CR $@7 END

    IDENTIFIER  shift, and go to state 259


state 185

  202 class_definition: class_or_interface IDENTIFIER . template_list extends CR $@4 member_declaration_list END
  206                 | class_or_interface IDENTIFIER . template_list extends CR $@6 END

    LT  shift, and go to state 260

    $default  reduce using rule 200 (template_list)

    template_list  go to state 261


state 186

   42 lib_function: LIB IDENTIFIER . $@1 CR lib_function_declaration_list END

    $default  reduce using rule 41 ($@1)

    $@1  go to state 262


state 187

   12 package_name: package_name DOT IDENTIFIER .

    $default  reduce using rule 12 (package_name)


state 188

   15 rename_declaration: RENAME package_name IDENTIFIER CR .

    $default  reduce using rule 15 (rename_declaration)


state 189

   62 expression: expression . COMMA assignment_expression
  106 primary_no_new_array: IDENTIFIER LB expression . RB

    RB     shift, and go to state 263
    COMMA  shift, and go to state 147


state 190

  155 if_statement: IF expression THEN . myblock
  156             | IF expression THEN . myblock ELSE myblock
  157             | IF expression THEN . myblock elsif_list
  158             | IF expression THEN . myblock elsif_list ELSE myblock

    CR  shift, and go to state 117

    myblock  go to state 264


state 191

  164 switch_statement: SWITCH expression CR . case_list default_opt

    CASE  shift, and go to state 265

    case_list  go to state 266
    one_case   go to state 267


state 192

  178 return_statement: RETURN_T expression_opt CR .

    $default  reduce using rule 178 (return_statement)


state 193

  181 break_statement: BREAK identifier_opt CR .

    $default  reduce using rule 181 (break_statement)


state 194

  182 continue_statement: CONTINUE identifier_opt CR .

    $default  reduce using rule 182 (continue_statement)


state 195

  110 primary_no_new_array: LP expression RP .

    $default  reduce using rule 110 (primary_no_new_array)


state 196

  127 array_literal: LC expression_list RC .

    $default  reduce using rule 127 (array_literal)


state 197

  128 array_literal: LC expression_list COMMA . RC
  140 expression_list: expression_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    RC              shift, and go to state 268
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    assignment_expression      go to state 269
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 198

  269 myblock: CR END .

    $default  reduce using rule 269 (myblock)


state 199

  265 unsafe: UNSAFE . CR

    CR  shift, and go to state 270


state 200

  266 unsafe: SAFE . CR

    CR  shift, and go to state 271


state 201

  268 myblock: CR unsafe . @8 statement_list END

    $default  reduce using rule 267 (@8)

    @8  go to state 272


state 202

  189 catch_clause: CATCH . @2 type_specifier IDENTIFIER myblock

    $default  reduce using rule 188 (@2)

    @2  go to state 273


state 203

  184 try_statement: TRY myblock FINALLY . block

    LC  shift, and go to state 255

    block  go to state 274


state 204

  183 try_statement: TRY myblock catch_list . FINALLY myblock
  185              | TRY myblock catch_list .
  187 catch_list: catch_list . catch_clause

    CATCH    shift, and go to state 202
    FINALLY  shift, and go to state 275

    $default  reduce using rule 185 (try_statement)

    catch_clause  go to state 276


state 205

  186 catch_list: catch_clause .

    $default  reduce using rule 186 (catch_list)


state 206

  190 throw_statement: THROW expression CR .

    $default  reduce using rule 190 (throw_statement)


state 207

  123 primary_no_new_array: NEW IDENTIFIER LP . RP
  124                     | NEW IDENTIFIER LP . argument_list RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    RP              shift, and go to state 277
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    argument_list              go to state 278
    assignment_expression      go to state 247
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 208

  125 primary_no_new_array: NEW IDENTIFIER DOT . IDENTIFIER LP RP
  126                     | NEW IDENTIFIER DOT . IDENTIFIER LP argument_list RP

    IDENTIFIER  shift, and go to state 279


state 209

  122 primary_no_new_array: NEW DELEGATE LP . RP

    RP  shift, and go to state 280


state 210

  135 dimension_expression: LB . expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    expression                 go to state 281
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 211

  129 array_creation: NEW basic_type_specifier dimension_expression_list .
  130               | NEW basic_type_specifier dimension_expression_list . dimension_list
  134 dimension_expression_list: dimension_expression_list . dimension_expression

    LB  shift, and go to state 282

    $default  reduce using rule 129 (array_creation)

    dimension_expression  go to state 283
    dimension_list        go to state 284


state 212

  133 dimension_expression_list: dimension_expression .

    $default  reduce using rule 133 (dimension_expression_list)


state 213

  131 array_creation: NEW identifier_type_specifier dimension_expression_list .
  132               | NEW identifier_type_specifier dimension_expression_list . dimension_list
  134 dimension_expression_list: dimension_expression_list . dimension_expression

    LB  shift, and go to state 282

    $default  reduce using rule 131 (array_creation)

    dimension_expression  go to state 283
    dimension_list        go to state 285


state 214

  256 delegate_definition: DELEGATE IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause CR
  257                    | DELEGATE IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 286
    COMMA       shift, and go to state 287

    $default  reduce using rule 237 (apostrophe)

    parameter_list  go to state 288
    apostrophe      go to state 289


state 215

  194 declaration_statement: FINAL IDENTIFIER AS . type_specifier CR
  195                      | FINAL IDENTIFIER AS . type_specifier ASSIGN_T expression CR

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 290


state 216

  258 enum_definition: ENUM IDENTIFIER LC . enumerator_list RC
  259                | ENUM IDENTIFIER LC . enumerator_list COMMA RC

    IDENTIFIER  shift, and go to state 291

    enumerator_list  go to state 292


state 217

   32 array_type_specifier: IDENTIFIER LB . RB

    RB  shift, and go to state 293


state 218

  262 const_definition: CONST IDENTIFIER ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    expression                 go to state 294
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 219

   34 template_type_specifier: IDENTIFIER LT . type_list GT

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 295
    type_list                  go to state 296


state 220

   31 array_type_specifier: basic_type_specifier LB . RB

    RB  shift, and go to state 297


state 221

   33 array_type_specifier: array_type_specifier LB . RB

    RB  shift, and go to state 298


state 222

  263 const_definition: CONST type_specifier IDENTIFIER . CR

    CR  shift, and go to state 299


state 223

   50 function_definition: FUNCTION IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause myblock
   51                    | FUNCTION IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 286
    COMMA       shift, and go to state 287

    $default  reduce using rule 237 (apostrophe)

    parameter_list  go to state 300
    apostrophe      go to state 301


state 224

  192 declaration_statement: DIM IDENTIFIER AS . type_specifier CR
  193                      | DIM IDENTIFIER AS . type_specifier ASSIGN_T expression CR

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 302


state 225

   46 function_declaration: DECLARE FUNCTION IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   47                     | DECLARE FUNCTION IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause CR

    LP  shift, and go to state 303


state 226

   48 function_declaration: DECLARE BSUB IDENTIFIER . LP parameter_list apostrophe RP throws_clause CR
   49                     | DECLARE BSUB IDENTIFIER . LP apostrophe RP throws_clause CR

    LP  shift, and go to state 304


state 227

   52 function_definition: BSUB IDENTIFIER LP . parameter_list apostrophe RP throws_clause myblock
   53                    | BSUB IDENTIFIER LP . apostrophe RP throws_clause myblock

    IDENTIFIER  shift, and go to state 286
    COMMA       shift, and go to state 287

    $default  reduce using rule 237 (apostrophe)

    parameter_list  go to state 305
    apostrophe      go to state 306


state 228

   62 expression: expression COMMA assignment_expression .

    $default  reduce using rule 62 (expression)


state 229

   72 logical_or_expression: logical_or_expression LOGICAL_OR logical_and_expression .
   74 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 150

    $default  reduce using rule 72 (logical_or_expression)


state 230

   74 logical_and_expression: logical_and_expression LOGICAL_AND equality_expression .
   76 equality_expression: equality_expression . EQ relational_expression
   77                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 151
    NE  shift, and go to state 152

    $default  reduce using rule 74 (logical_and_expression)


state 231

   76 equality_expression: equality_expression EQ relational_expression .
   79 relational_expression: relational_expression . GT additive_expression
   80                      | relational_expression . GE additive_expression
   81                      | relational_expression . LT additive_expression
   82                      | relational_expression . LE additive_expression

    GT  shift, and go to state 153
    GE  shift, and go to state 154
    LT  shift, and go to state 155
    LE  shift, and go to state 156

    $default  reduce using rule 76 (equality_expression)


state 232

   77 equality_expression: equality_expression NE relational_expression .
   79 relational_expression: relational_expression . GT additive_expression
   80                      | relational_expression . GE additive_expression
   81                      | relational_expression . LT additive_expression
   82                      | relational_expression . LE additive_expression

    GT  shift, and go to state 153
    GE  shift, and go to state 154
    LT  shift, and go to state 155
    LE  shift, and go to state 156

    $default  reduce using rule 77 (equality_expression)


state 233

   79 relational_expression: relational_expression GT additive_expression .
   84 additive_expression: additive_expression . ADD multiplicative_expression
   85                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 157
    SUB  shift, and go to state 158

    $default  reduce using rule 79 (relational_expression)


state 234

   80 relational_expression: relational_expression GE additive_expression .
   84 additive_expression: additive_expression . ADD multiplicative_expression
   85                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 157
    SUB  shift, and go to state 158

    $default  reduce using rule 80 (relational_expression)


state 235

   81 relational_expression: relational_expression LT additive_expression .
   84 additive_expression: additive_expression . ADD multiplicative_expression
   85                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 157
    SUB  shift, and go to state 158

    $default  reduce using rule 81 (relational_expression)


state 236

   82 relational_expression: relational_expression LE additive_expression .
   84 additive_expression: additive_expression . ADD multiplicative_expression
   85                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 157
    SUB  shift, and go to state 158

    $default  reduce using rule 82 (relational_expression)


state 237

   84 additive_expression: additive_expression ADD multiplicative_expression .
   87 multiplicative_expression: multiplicative_expression . MUL unary_expression
   88                          | multiplicative_expression . DIV unary_expression
   89                          | multiplicative_expression . MOD unary_expression
   90                          | multiplicative_expression . BIT_AND unary_expression
   91                          | multiplicative_expression . BIT_OR unary_expression
   92                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 159
    DIV      shift, and go to state 160
    MOD      shift, and go to state 161
    BIT_AND  shift, and go to state 162
    BIT_OR   shift, and go to state 163
    BIT_XOR  shift, and go to state 164

    $default  reduce using rule 84 (additive_expression)


state 238

   85 additive_expression: additive_expression SUB multiplicative_expression .
   87 multiplicative_expression: multiplicative_expression . MUL unary_expression
   88                          | multiplicative_expression . DIV unary_expression
   89                          | multiplicative_expression . MOD unary_expression
   90                          | multiplicative_expression . BIT_AND unary_expression
   91                          | multiplicative_expression . BIT_OR unary_expression
   92                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 159
    DIV      shift, and go to state 160
    MOD      shift, and go to state 161
    BIT_AND  shift, and go to state 162
    BIT_OR   shift, and go to state 163
    BIT_XOR  shift, and go to state 164

    $default  reduce using rule 85 (additive_expression)


state 239

   87 multiplicative_expression: multiplicative_expression MUL unary_expression .

    $default  reduce using rule 87 (multiplicative_expression)


state 240

   88 multiplicative_expression: multiplicative_expression DIV unary_expression .

    $default  reduce using rule 88 (multiplicative_expression)


state 241

   89 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 89 (multiplicative_expression)


state 242

   90 multiplicative_expression: multiplicative_expression BIT_AND unary_expression .

    $default  reduce using rule 90 (multiplicative_expression)


state 243

   91 multiplicative_expression: multiplicative_expression BIT_OR unary_expression .

    $default  reduce using rule 91 (multiplicative_expression)


state 244

   92 multiplicative_expression: multiplicative_expression BIT_XOR unary_expression .

    $default  reduce using rule 92 (multiplicative_expression)


state 245

  109 primary_no_new_array: primary_expression LP RP .

    $default  reduce using rule 109 (primary_no_new_array)


state 246

   58 argument_list: argument_list . COMMA assignment_expression
  108 primary_no_new_array: primary_expression LP argument_list . RP

    RP     shift, and go to state 307
    COMMA  shift, and go to state 308


state 247

   57 argument_list: assignment_expression .

    $default  reduce using rule 57 (argument_list)


state 248

  107 primary_no_new_array: primary_expression DOT IDENTIFIER .

    $default  reduce using rule 107 (primary_no_new_array)


state 249

   30 identifier_type_specifier: IDENTIFIER .
   32 array_type_specifier: IDENTIFIER . LB RB
   34 template_type_specifier: IDENTIFIER . LT type_list GT

    LB  shift, and go to state 217
    LT  shift, and go to state 219

    LT        [reduce using rule 30 (identifier_type_specifier)]
    $default  reduce using rule 30 (identifier_type_specifier)


state 250

  100 postfix_expression: primary_expression INSTANCEOF type_specifier .

    $default  reduce using rule 100 (postfix_expression)


state 251

  111 primary_no_new_array: primary_expression DOWN_CAST_BEGIN type_specifier . DOWN_CAST_END

    DOWN_CAST_END  shift, and go to state 309


state 252

   64 assignment_expression: primary_expression assignment_operator assignment_expression .

    $default  reduce using rule 64 (assignment_expression)


state 253

   62 expression: expression . COMMA assignment_expression
  105 primary_no_new_array: primary_no_new_array LB expression . RB

    RB     shift, and go to state 310
    COMMA  shift, and go to state 147


state 254

   62 expression: expression . COMMA assignment_expression
  172 while_statement: label_opt WHILE expression . myblock

    COMMA  shift, and go to state 147
    CR     shift, and go to state 117

    myblock  go to state 311


state 255

  197 block: LC . @3 statement_list RC
  198      | LC . RC

    RC  shift, and go to state 312

    $default  reduce using rule 196 (@3)

    @3  go to state 313


state 256

  174 do_while_statement: label_opt DO_T block . WHILE LP expression RP CR

    WHILE  shift, and go to state 314


state 257

  173 for_statement: label_opt FOR expression_opt . SEMICOLON expression_opt SEMICOLON expression_opt myblock

    SEMICOLON  shift, and go to state 315


state 258

  175 foreach_statement: label_opt FOREACH LP . IDENTIFIER COLON expression RP block

    IDENTIFIER  shift, and go to state 316


state 259

  204 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER . template_list extends CR $@5 member_declaration_list END
  208                 | class_or_member_modifier_list class_or_interface IDENTIFIER . template_list extends CR $@7 END

    LT  shift, and go to state 260

    $default  reduce using rule 200 (template_list)

    template_list  go to state 317


state 260

  199 template_list: LT . extends_list GT

    IDENTIFIER  shift, and go to state 318

    extends_list  go to state 319


state 261

  202 class_definition: class_or_interface IDENTIFIER template_list . extends CR $@4 member_declaration_list END
  206                 | class_or_interface IDENTIFIER template_list . extends CR $@6 END

    COLON  shift, and go to state 320

    $default  reduce using rule 217 (extends)

    extends  go to state 321


state 262

   42 lib_function: LIB IDENTIFIER $@1 . CR lib_function_declaration_list END

    CR  shift, and go to state 322


state 263

  106 primary_no_new_array: IDENTIFIER LB expression RB .

    $default  reduce using rule 106 (primary_no_new_array)


state 264

  155 if_statement: IF expression THEN myblock .
  156             | IF expression THEN myblock . ELSE myblock
  157             | IF expression THEN myblock . elsif_list
  158             | IF expression THEN myblock . elsif_list ELSE myblock

    ELSE   shift, and go to state 323
    ELSIF  shift, and go to state 324

    $default  reduce using rule 155 (if_statement)

    elsif_list  go to state 325
    elsif       go to state 326


state 265

  167 one_case: CASE . case_expression_list myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    $default  reduce using rule 138 (expression_list)

    assignment_expression      go to state 327
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69
    expression_list            go to state 328
    case_expression_list       go to state 329


state 266

  164 switch_statement: SWITCH expression CR case_list . default_opt
  166 case_list: case_list . one_case

    CASE       shift, and go to state 265
    DEFAULT_T  shift, and go to state 330

    $default  reduce using rule 168 (default_opt)

    one_case     go to state 331
    default_opt  go to state 332


state 267

  165 case_list: one_case .

    $default  reduce using rule 165 (case_list)


state 268

  128 array_literal: LC expression_list COMMA RC .

    $default  reduce using rule 128 (array_literal)


state 269

  140 expression_list: expression_list COMMA assignment_expression .

    $default  reduce using rule 140 (expression_list)


state 270

  265 unsafe: UNSAFE CR .

    $default  reduce using rule 265 (unsafe)


state 271

  266 unsafe: SAFE CR .

    $default  reduce using rule 266 (unsafe)


state 272

  268 myblock: CR unsafe @8 . statement_list END

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43
    FINAL           shift, and go to state 45
    DIM             shift, and go to state 49
    CR              shift, and go to state 50

    $default  reduce using rule 162 (label_opt)

    statement_list             go to state 333
    expression                 go to state 56
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69
    statement                  go to state 334
    if_statement               go to state 71
    label_opt                  go to state 72
    switch_statement           go to state 73
    while_statement            go to state 74
    for_statement              go to state 75
    do_while_statement         go to state 76
    foreach_statement          go to state 77
    return_statement           go to state 78
    break_statement            go to state 79
    continue_statement         go to state 80
    try_statement              go to state 81
    throw_statement            go to state 82
    declaration_statement      go to state 83


state 273

  189 catch_clause: CATCH @2 . type_specifier IDENTIFIER myblock

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 335


state 274

  184 try_statement: TRY myblock FINALLY block .

    $default  reduce using rule 184 (try_statement)


state 275

  183 try_statement: TRY myblock catch_list FINALLY . myblock

    CR  shift, and go to state 117

    myblock  go to state 336


state 276

  187 catch_list: catch_list catch_clause .

    $default  reduce using rule 187 (catch_list)


state 277

  123 primary_no_new_array: NEW IDENTIFIER LP RP .

    $default  reduce using rule 123 (primary_no_new_array)


state 278

   58 argument_list: argument_list . COMMA assignment_expression
  124 primary_no_new_array: NEW IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 337
    COMMA  shift, and go to state 308


state 279

  125 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER . LP RP
  126                     | NEW IDENTIFIER DOT IDENTIFIER . LP argument_list RP

    LP  shift, and go to state 338


state 280

  122 primary_no_new_array: NEW DELEGATE LP RP .

    $default  reduce using rule 122 (primary_no_new_array)


state 281

   62 expression: expression . COMMA assignment_expression
  135 dimension_expression: LB expression . RB

    RB     shift, and go to state 339
    COMMA  shift, and go to state 147


state 282

  135 dimension_expression: LB . expression RB
  136 dimension_list: LB . RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    RB              shift, and go to state 340
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    expression                 go to state 281
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 283

  134 dimension_expression_list: dimension_expression_list dimension_expression .

    $default  reduce using rule 134 (dimension_expression_list)


state 284

  130 array_creation: NEW basic_type_specifier dimension_expression_list dimension_list .
  137 dimension_list: dimension_list . LB RB

    LB  shift, and go to state 341

    $default  reduce using rule 130 (array_creation)


state 285

  132 array_creation: NEW identifier_type_specifier dimension_expression_list dimension_list .
  137 dimension_list: dimension_list . LB RB

    LB  shift, and go to state 341

    $default  reduce using rule 132 (array_creation)


state 286

   55 parameter_list: IDENTIFIER . AS type_specifier

    AS  shift, and go to state 342


state 287

  238 apostrophe: COMMA . APOSTROPHE

    APOSTROPHE  shift, and go to state 343


state 288

   56 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  256 delegate_definition: DELEGATE IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause CR

    COMMA  shift, and go to state 344

    $default  reduce using rule 237 (apostrophe)

    apostrophe  go to state 345


state 289

  257 delegate_definition: DELEGATE IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 346


state 290

  194 declaration_statement: FINAL IDENTIFIER AS type_specifier . CR
  195                      | FINAL IDENTIFIER AS type_specifier . ASSIGN_T expression CR

    ASSIGN_T  shift, and go to state 347
    CR        shift, and go to state 348


state 291

  260 enumerator_list: IDENTIFIER .

    $default  reduce using rule 260 (enumerator_list)


state 292

  258 enum_definition: ENUM IDENTIFIER LC enumerator_list . RC
  259                | ENUM IDENTIFIER LC enumerator_list . COMMA RC
  261 enumerator_list: enumerator_list . COMMA IDENTIFIER

    RC     shift, and go to state 349
    COMMA  shift, and go to state 350


state 293

   32 array_type_specifier: IDENTIFIER LB RB .

    $default  reduce using rule 32 (array_type_specifier)


state 294

   62 expression: expression . COMMA assignment_expression
  262 const_definition: CONST IDENTIFIER ASSIGN_T expression . CR

    COMMA  shift, and go to state 147
    CR     shift, and go to state 351


state 295

   39 type_list: type_specifier .

    $default  reduce using rule 39 (type_list)


state 296

   34 template_type_specifier: IDENTIFIER LT type_list . GT
   40 type_list: type_list . COMMA type_specifier

    COMMA  shift, and go to state 352
    GT     shift, and go to state 353


state 297

   31 array_type_specifier: basic_type_specifier LB RB .

    $default  reduce using rule 31 (array_type_specifier)


state 298

   33 array_type_specifier: array_type_specifier LB RB .

    $default  reduce using rule 33 (array_type_specifier)


state 299

  263 const_definition: CONST type_specifier IDENTIFIER CR .

    $default  reduce using rule 263 (const_definition)


state 300

   50 function_definition: FUNCTION IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause myblock
   56 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 344

    $default  reduce using rule 237 (apostrophe)

    apostrophe  go to state 354


state 301

   51 function_definition: FUNCTION IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause myblock

    RP  shift, and go to state 355


state 302

  192 declaration_statement: DIM IDENTIFIER AS type_specifier . CR
  193                      | DIM IDENTIFIER AS type_specifier . ASSIGN_T expression CR

    ASSIGN_T  shift, and go to state 356
    CR        shift, and go to state 357


state 303

   46 function_declaration: DECLARE FUNCTION IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause CR
   47                     | DECLARE FUNCTION IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 286
    COMMA       shift, and go to state 287

    $default  reduce using rule 237 (apostrophe)

    parameter_list  go to state 358
    apostrophe      go to state 359


state 304

   48 function_declaration: DECLARE BSUB IDENTIFIER LP . parameter_list apostrophe RP throws_clause CR
   49                     | DECLARE BSUB IDENTIFIER LP . apostrophe RP throws_clause CR

    IDENTIFIER  shift, and go to state 286
    COMMA       shift, and go to state 287

    $default  reduce using rule 237 (apostrophe)

    parameter_list  go to state 360
    apostrophe      go to state 361


state 305

   52 function_definition: BSUB IDENTIFIER LP parameter_list . apostrophe RP throws_clause myblock
   56 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 344

    $default  reduce using rule 237 (apostrophe)

    apostrophe  go to state 362


state 306

   53 function_definition: BSUB IDENTIFIER LP apostrophe . RP throws_clause myblock

    RP  shift, and go to state 363


state 307

  108 primary_no_new_array: primary_expression LP argument_list RP .

    $default  reduce using rule 108 (primary_no_new_array)


state 308

   58 argument_list: argument_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    assignment_expression      go to state 364
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 309

  111 primary_no_new_array: primary_expression DOWN_CAST_BEGIN type_specifier DOWN_CAST_END .

    $default  reduce using rule 111 (primary_no_new_array)


state 310

  105 primary_no_new_array: primary_no_new_array LB expression RB .

    $default  reduce using rule 105 (primary_no_new_array)


state 311

  172 while_statement: label_opt WHILE expression myblock .

    $default  reduce using rule 172 (while_statement)


state 312

  198 block: LC RC .

    $default  reduce using rule 198 (block)


state 313

  197 block: LC @3 . statement_list RC

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43
    FINAL           shift, and go to state 45
    DIM             shift, and go to state 49
    CR              shift, and go to state 50

    $default  reduce using rule 162 (label_opt)

    statement_list             go to state 365
    expression                 go to state 56
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69
    statement                  go to state 334
    if_statement               go to state 71
    label_opt                  go to state 72
    switch_statement           go to state 73
    while_statement            go to state 74
    for_statement              go to state 75
    do_while_statement         go to state 76
    foreach_statement          go to state 77
    return_statement           go to state 78
    break_statement            go to state 79
    continue_statement         go to state 80
    try_statement              go to state 81
    throw_statement            go to state 82
    declaration_statement      go to state 83


state 314

  174 do_while_statement: label_opt DO_T block WHILE . LP expression RP CR

    LP  shift, and go to state 366


state 315

  173 for_statement: label_opt FOR expression_opt SEMICOLON . expression_opt SEMICOLON expression_opt myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    $default  reduce using rule 176 (expression_opt)

    expression                 go to state 105
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69
    expression_opt             go to state 367


state 316

  175 foreach_statement: label_opt FOREACH LP IDENTIFIER . COLON expression RP block

    COLON  shift, and go to state 368


state 317

  204 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER template_list . extends CR $@5 member_declaration_list END
  208                 | class_or_member_modifier_list class_or_interface IDENTIFIER template_list . extends CR $@7 END

    COLON  shift, and go to state 320

    $default  reduce using rule 217 (extends)

    extends  go to state 369


state 318

  219 extends_list: IDENTIFIER .

    $default  reduce using rule 219 (extends_list)


state 319

  199 template_list: LT extends_list . GT
  220 extends_list: extends_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 370
    GT     shift, and go to state 371


state 320

  218 extends: COLON . extends_list

    IDENTIFIER  shift, and go to state 318

    extends_list  go to state 372


state 321

  202 class_definition: class_or_interface IDENTIFIER template_list extends . CR $@4 member_declaration_list END
  206                 | class_or_interface IDENTIFIER template_list extends . CR $@6 END

    CR  shift, and go to state 373


state 322

   42 lib_function: LIB IDENTIFIER $@1 CR . lib_function_declaration_list END

    $default  reduce using rule 43 (lib_function_declaration_list)

    lib_function_declaration_list  go to state 374


state 323

  156 if_statement: IF expression THEN myblock ELSE . myblock

    CR  shift, and go to state 117

    myblock  go to state 375


state 324

  161 elsif: ELSIF . expression THEN myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    expression                 go to state 376
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 325

  157 if_statement: IF expression THEN myblock elsif_list .
  158             | IF expression THEN myblock elsif_list . ELSE myblock
  160 elsif_list: elsif_list . elsif

    ELSE   shift, and go to state 377
    ELSIF  shift, and go to state 324

    $default  reduce using rule 157 (if_statement)

    elsif  go to state 378


state 326

  159 elsif_list: elsif .

    $default  reduce using rule 159 (elsif_list)


state 327

  139 expression_list: assignment_expression .
  170 case_expression_list: assignment_expression .

    CR        reduce using rule 170 (case_expression_list)
    $default  reduce using rule 139 (expression_list)


state 328

  140 expression_list: expression_list . COMMA assignment_expression
  171 case_expression_list: expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 379


state 329

  167 one_case: CASE case_expression_list . myblock

    CR  shift, and go to state 117

    myblock  go to state 380


state 330

  169 default_opt: DEFAULT_T . myblock

    CR  shift, and go to state 117

    myblock  go to state 381


state 331

  166 case_list: case_list one_case .

    $default  reduce using rule 166 (case_list)


state 332

  164 switch_statement: SWITCH expression CR case_list default_opt .

    $default  reduce using rule 164 (switch_statement)


state 333

   60 statement_list: statement_list . statement
  268 myblock: CR unsafe @8 statement_list . END

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43
    FINAL           shift, and go to state 45
    DIM             shift, and go to state 49
    END             shift, and go to state 382
    CR              shift, and go to state 50

    $default  reduce using rule 162 (label_opt)

    expression                 go to state 56
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69
    statement                  go to state 383
    if_statement               go to state 71
    label_opt                  go to state 72
    switch_statement           go to state 73
    while_statement            go to state 74
    for_statement              go to state 75
    do_while_statement         go to state 76
    foreach_statement          go to state 77
    return_statement           go to state 78
    break_statement            go to state 79
    continue_statement         go to state 80
    try_statement              go to state 81
    throw_statement            go to state 82
    declaration_statement      go to state 83


state 334

   59 statement_list: statement .

    $default  reduce using rule 59 (statement_list)


state 335

  189 catch_clause: CATCH @2 type_specifier . IDENTIFIER myblock

    IDENTIFIER  shift, and go to state 384


state 336

  183 try_statement: TRY myblock catch_list FINALLY myblock .

    $default  reduce using rule 183 (try_statement)


state 337

  124 primary_no_new_array: NEW IDENTIFIER LP argument_list RP .

    $default  reduce using rule 124 (primary_no_new_array)


state 338

  125 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP . RP
  126                     | NEW IDENTIFIER DOT IDENTIFIER LP . argument_list RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    RP              shift, and go to state 385
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    argument_list              go to state 386
    assignment_expression      go to state 247
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 339

  135 dimension_expression: LB expression RB .

    $default  reduce using rule 135 (dimension_expression)


state 340

  136 dimension_list: LB RB .

    $default  reduce using rule 136 (dimension_list)


state 341

  137 dimension_list: dimension_list LB . RB

    RB  shift, and go to state 387


state 342

   55 parameter_list: IDENTIFIER AS . type_specifier

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 388


state 343

  238 apostrophe: COMMA APOSTROPHE .

    $default  reduce using rule 238 (apostrophe)


state 344

   56 parameter_list: parameter_list COMMA . IDENTIFIER AS type_specifier
  238 apostrophe: COMMA . APOSTROPHE

    IDENTIFIER  shift, and go to state 389
    APOSTROPHE  shift, and go to state 343


state 345

  256 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 390


state 346

  257 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 391


state 347

  195 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    expression                 go to state 392
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 348

  194 declaration_statement: FINAL IDENTIFIER AS type_specifier CR .

    $default  reduce using rule 194 (declaration_statement)


state 349

  258 enum_definition: ENUM IDENTIFIER LC enumerator_list RC .

    $default  reduce using rule 258 (enum_definition)


state 350

  259 enum_definition: ENUM IDENTIFIER LC enumerator_list COMMA . RC
  261 enumerator_list: enumerator_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 393
    RC          shift, and go to state 394


state 351

  262 const_definition: CONST IDENTIFIER ASSIGN_T expression CR .

    $default  reduce using rule 262 (const_definition)


state 352

   40 type_list: type_list COMMA . type_specifier

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 395


state 353

   34 template_type_specifier: IDENTIFIER LT type_list GT .

    $default  reduce using rule 34 (template_type_specifier)


state 354

   50 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause myblock

    RP  shift, and go to state 396


state 355

   51 function_definition: FUNCTION IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 397


state 356

  193 declaration_statement: DIM IDENTIFIER AS type_specifier ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    expression                 go to state 398
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 357

  192 declaration_statement: DIM IDENTIFIER AS type_specifier CR .

    $default  reduce using rule 192 (declaration_statement)


state 358

   46 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause CR
   56 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 344

    $default  reduce using rule 237 (apostrophe)

    apostrophe  go to state 399


state 359

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 400


state 360

   48 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list . apostrophe RP throws_clause CR
   56 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 344

    $default  reduce using rule 237 (apostrophe)

    apostrophe  go to state 401


state 361

   49 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe . RP throws_clause CR

    RP  shift, and go to state 402


state 362

   52 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe . RP throws_clause myblock

    RP  shift, and go to state 403


state 363

   53 function_definition: BSUB IDENTIFIER LP apostrophe RP . throws_clause myblock

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 405


state 364

   58 argument_list: argument_list COMMA assignment_expression .

    $default  reduce using rule 58 (argument_list)


state 365

   60 statement_list: statement_list . statement
  197 block: LC @3 statement_list . RC

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    RC              shift, and go to state 406
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43
    FINAL           shift, and go to state 45
    DIM             shift, and go to state 49
    CR              shift, and go to state 50

    $default  reduce using rule 162 (label_opt)

    expression                 go to state 56
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69
    statement                  go to state 383
    if_statement               go to state 71
    label_opt                  go to state 72
    switch_statement           go to state 73
    while_statement            go to state 74
    for_statement              go to state 75
    do_while_statement         go to state 76
    foreach_statement          go to state 77
    return_statement           go to state 78
    break_statement            go to state 79
    continue_statement         go to state 80
    try_statement              go to state 81
    throw_statement            go to state 82
    declaration_statement      go to state 83


state 366

  174 do_while_statement: label_opt DO_T block WHILE LP . expression RP CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    expression                 go to state 407
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 367

  173 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt . SEMICOLON expression_opt myblock

    SEMICOLON  shift, and go to state 408


state 368

  175 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON . expression RP block

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    expression                 go to state 409
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 369

  204 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends . CR $@5 member_declaration_list END
  208                 | class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends . CR $@7 END

    CR  shift, and go to state 410


state 370

  220 extends_list: extends_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 411


state 371

  199 template_list: LT extends_list GT .

    $default  reduce using rule 199 (template_list)


state 372

  218 extends: COLON extends_list .
  220 extends_list: extends_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 370

    $default  reduce using rule 218 (extends)


state 373

  202 class_definition: class_or_interface IDENTIFIER template_list extends CR . $@4 member_declaration_list END
  206                 | class_or_interface IDENTIFIER template_list extends CR . $@6 END

    END       reduce using rule 205 ($@6)
    $default  reduce using rule 201 ($@4)

    $@4  go to state 412
    $@6  go to state 413


state 374

   42 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list . END
   44 lib_function_declaration_list: lib_function_declaration_list . function_declaration
   45                              | lib_function_declaration_list . class_definition

    CLASS_T      shift, and go to state 35
    INTERFACE_T  shift, and go to state 36
    PUBLIC_T     shift, and go to state 37
    PRIVATE_T    shift, and go to state 38
    VIRTUAL_T    shift, and go to state 39
    OVERRIDE_T   shift, and go to state 40
    ABSTRACT_T   shift, and go to state 41
    END          shift, and go to state 414
    DECLARE      shift, and go to state 51

    function_declaration           go to state 415
    class_definition               go to state 416
    class_or_member_modifier_list  go to state 85
    class_or_member_modifier       go to state 86
    class_or_interface             go to state 87
    access_modifier                go to state 88


state 375

  156 if_statement: IF expression THEN myblock ELSE myblock .

    $default  reduce using rule 156 (if_statement)


state 376

   62 expression: expression . COMMA assignment_expression
  161 elsif: ELSIF expression . THEN myblock

    COMMA  shift, and go to state 147
    THEN   shift, and go to state 417


state 377

  158 if_statement: IF expression THEN myblock elsif_list ELSE . myblock

    CR  shift, and go to state 117

    myblock  go to state 418


state 378

  160 elsif_list: elsif_list elsif .

    $default  reduce using rule 160 (elsif_list)


state 379

  140 expression_list: expression_list COMMA . assignment_expression
  171 case_expression_list: expression_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    assignment_expression      go to state 419
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 380

  167 one_case: CASE case_expression_list myblock .

    $default  reduce using rule 167 (one_case)


state 381

  169 default_opt: DEFAULT_T myblock .

    $default  reduce using rule 169 (default_opt)


state 382

  268 myblock: CR unsafe @8 statement_list END .

    $default  reduce using rule 268 (myblock)


state 383

   60 statement_list: statement_list statement .

    $default  reduce using rule 60 (statement_list)


state 384

  189 catch_clause: CATCH @2 type_specifier IDENTIFIER . myblock

    CR  shift, and go to state 117

    myblock  go to state 420


state 385

  125 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP RP .

    $default  reduce using rule 125 (primary_no_new_array)


state 386

   58 argument_list: argument_list . COMMA assignment_expression
  126 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 421
    COMMA  shift, and go to state 308


state 387

  137 dimension_list: dimension_list LB RB .

    $default  reduce using rule 137 (dimension_list)


state 388

   55 parameter_list: IDENTIFIER AS type_specifier .

    $default  reduce using rule 55 (parameter_list)


state 389

   56 parameter_list: parameter_list COMMA IDENTIFIER . AS type_specifier

    AS  shift, and go to state 422


state 390

  256 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 423


state 391

  257 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 424


state 392

   62 expression: expression . COMMA assignment_expression
  195 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T expression . CR

    COMMA  shift, and go to state 147
    CR     shift, and go to state 425


state 393

  261 enumerator_list: enumerator_list COMMA IDENTIFIER .

    $default  reduce using rule 261 (enumerator_list)


state 394

  259 enum_definition: ENUM IDENTIFIER LC enumerator_list COMMA RC .

    $default  reduce using rule 259 (enum_definition)


state 395

   40 type_list: type_list COMMA type_specifier .

    $default  reduce using rule 40 (type_list)


state 396

   50 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 426


state 397

   51 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 427


state 398

   62 expression: expression . COMMA assignment_expression
  193 declaration_statement: DIM IDENTIFIER AS type_specifier ASSIGN_T expression . CR

    COMMA  shift, and go to state 147
    CR     shift, and go to state 428


state 399

   46 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 429


state 400

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 430


state 401

   48 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe . RP throws_clause CR

    RP  shift, and go to state 431


state 402

   49 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP . throws_clause CR

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 432


state 403

   52 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP . throws_clause myblock

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 433


state 404

  240 throws_clause: THROWS . exception_list

    IDENTIFIER  shift, and go to state 434

    exception_list  go to state 435


state 405

   53 function_definition: BSUB IDENTIFIER LP apostrophe RP throws_clause . myblock

    CR  shift, and go to state 117

    myblock  go to state 436


state 406

  197 block: LC @3 statement_list RC .

    $default  reduce using rule 197 (block)


state 407

   62 expression: expression . COMMA assignment_expression
  174 do_while_statement: label_opt DO_T block WHILE LP expression . RP CR

    RP     shift, and go to state 437
    COMMA  shift, and go to state 147


state 408

  173 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON . expression_opt myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    $default  reduce using rule 176 (expression_opt)

    expression                 go to state 105
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69
    expression_opt             go to state 438


state 409

   62 expression: expression . COMMA assignment_expression
  175 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression . RP block

    RP     shift, and go to state 439
    COMMA  shift, and go to state 147


state 410

  204 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR . $@5 member_declaration_list END
  208                 | class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR . $@7 END

    END       reduce using rule 207 ($@7)
    $default  reduce using rule 203 ($@5)

    $@5  go to state 440
    $@7  go to state 441


state 411

  220 extends_list: extends_list COMMA IDENTIFIER .

    $default  reduce using rule 220 (extends_list)


state 412

  202 class_definition: class_or_interface IDENTIFIER template_list extends CR $@4 . member_declaration_list END

    PUBLIC_T     shift, and go to state 37
    PRIVATE_T    shift, and go to state 38
    VIRTUAL_T    shift, and go to state 39
    OVERRIDE_T   shift, and go to state 40
    ABSTRACT_T   shift, and go to state 41
    CONSTRUCTOR  shift, and go to state 442
    FINAL        shift, and go to state 443
    FUNCTION     shift, and go to state 444
    DIM          shift, and go to state 445
    DECLARE      shift, and go to state 446
    BSUB         shift, and go to state 447

    class_or_member_modifier_list  go to state 448
    class_or_member_modifier       go to state 86
    member_declaration_list        go to state 449
    member_declaration             go to state 450
    method_member                  go to state 451
    method_function_definition     go to state 452
    constructor_definition         go to state 453
    access_modifier                go to state 88
    field_member                   go to state 454


state 413

  206 class_definition: class_or_interface IDENTIFIER template_list extends CR $@6 . END

    END  shift, and go to state 455


state 414

   42 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list END .

    $default  reduce using rule 42 (lib_function)


state 415

   44 lib_function_declaration_list: lib_function_declaration_list function_declaration .

    $default  reduce using rule 44 (lib_function_declaration_list)


state 416

   45 lib_function_declaration_list: lib_function_declaration_list class_definition .

    $default  reduce using rule 45 (lib_function_declaration_list)


state 417

  161 elsif: ELSIF expression THEN . myblock

    CR  shift, and go to state 117

    myblock  go to state 456


state 418

  158 if_statement: IF expression THEN myblock elsif_list ELSE myblock .

    $default  reduce using rule 158 (if_statement)


state 419

  140 expression_list: expression_list COMMA assignment_expression .
  171 case_expression_list: expression_list COMMA assignment_expression .

    CR        reduce using rule 171 (case_expression_list)
    $default  reduce using rule 140 (expression_list)


state 420

  189 catch_clause: CATCH @2 type_specifier IDENTIFIER myblock .

    $default  reduce using rule 189 (catch_clause)


state 421

  126 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP argument_list RP .

    $default  reduce using rule 126 (primary_no_new_array)


state 422

   56 parameter_list: parameter_list COMMA IDENTIFIER AS . type_specifier

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 457


state 423

  256 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 458


state 424

  257 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 459


state 425

  195 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T expression CR .

    $default  reduce using rule 195 (declaration_statement)


state 426

   50 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 460


state 427

   51 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 461


state 428

  193 declaration_statement: DIM IDENTIFIER AS type_specifier ASSIGN_T expression CR .

    $default  reduce using rule 193 (declaration_statement)


state 429

   46 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 462


state 430

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 463


state 431

   48 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP . throws_clause CR

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 464


state 432

   49 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause . CR

    CR  shift, and go to state 465


state 433

   52 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause . myblock

    CR  shift, and go to state 117

    myblock  go to state 466


state 434

  241 exception_list: IDENTIFIER .

    $default  reduce using rule 241 (exception_list)


state 435

  240 throws_clause: THROWS exception_list .
  242 exception_list: exception_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 467

    $default  reduce using rule 240 (throws_clause)


state 436

   53 function_definition: BSUB IDENTIFIER LP apostrophe RP throws_clause myblock .

    $default  reduce using rule 53 (function_definition)


state 437

  174 do_while_statement: label_opt DO_T block WHILE LP expression RP . CR

    CR  shift, and go to state 468


state 438

  173 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt . myblock

    CR  shift, and go to state 117

    myblock  go to state 469


state 439

  175 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP . block

    LC  shift, and go to state 255

    block  go to state 470


state 440

  204 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 . member_declaration_list END

    PUBLIC_T     shift, and go to state 37
    PRIVATE_T    shift, and go to state 38
    VIRTUAL_T    shift, and go to state 39
    OVERRIDE_T   shift, and go to state 40
    ABSTRACT_T   shift, and go to state 41
    CONSTRUCTOR  shift, and go to state 442
    FINAL        shift, and go to state 443
    FUNCTION     shift, and go to state 444
    DIM          shift, and go to state 445
    DECLARE      shift, and go to state 446
    BSUB         shift, and go to state 447

    class_or_member_modifier_list  go to state 448
    class_or_member_modifier       go to state 86
    member_declaration_list        go to state 471
    member_declaration             go to state 450
    method_member                  go to state 451
    method_function_definition     go to state 452
    constructor_definition         go to state 453
    access_modifier                go to state 88
    field_member                   go to state 454


state 441

  208 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 . END

    END  shift, and go to state 472


state 442

  243 constructor_definition: CONSTRUCTOR . IDENTIFIER LP parameter_list RP throws_clause myblock
  244                       | CONSTRUCTOR . IDENTIFIER LP RP throws_clause myblock

    IDENTIFIER  shift, and go to state 473


state 443

  253 field_member: FINAL . IDENTIFIER AS type_specifier initializer_opt CR
  255             | FINAL . class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 474
    PUBLIC_T    shift, and go to state 37
    PRIVATE_T   shift, and go to state 38
    VIRTUAL_T   shift, and go to state 39
    OVERRIDE_T  shift, and go to state 40
    ABSTRACT_T  shift, and go to state 41

    class_or_member_modifier_list  go to state 475
    class_or_member_modifier       go to state 86
    access_modifier                go to state 88


state 444

  229 method_function_definition: FUNCTION . IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock
  230                           | FUNCTION . IDENTIFIER LP RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 476


state 445

  251 field_member: DIM . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 477


state 446

  231 method_function_definition: DECLARE . FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  232                           | DECLARE . FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR
  235                           | DECLARE . BSUB IDENTIFIER LP parameter_list RP throws_clause CR
  236                           | DECLARE . BSUB IDENTIFIER LP RP throws_clause CR
  245 constructor_definition: DECLARE . CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR
  246                       | DECLARE . CONSTRUCTOR IDENTIFIER LP RP throws_clause CR

    CONSTRUCTOR  shift, and go to state 478
    FUNCTION     shift, and go to state 479
    BSUB         shift, and go to state 480


state 447

  233 method_function_definition: BSUB . IDENTIFIER LP parameter_list RP throws_clause myblock
  234                           | BSUB . IDENTIFIER LP RP throws_clause myblock

    IDENTIFIER  shift, and go to state 481


state 448

  210 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier
  226 method_member: class_or_member_modifier_list . method_function_definition
  228              | class_or_member_modifier_list . constructor_definition
  252 field_member: class_or_member_modifier_list . IDENTIFIER AS type_specifier initializer_opt CR
  254             | class_or_member_modifier_list . FINAL IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER   shift, and go to state 482
    PUBLIC_T     shift, and go to state 37
    PRIVATE_T    shift, and go to state 38
    VIRTUAL_T    shift, and go to state 39
    OVERRIDE_T   shift, and go to state 40
    ABSTRACT_T   shift, and go to state 41
    CONSTRUCTOR  shift, and go to state 442
    FINAL        shift, and go to state 483
    FUNCTION     shift, and go to state 444
    DECLARE      shift, and go to state 446
    BSUB         shift, and go to state 447

    class_or_member_modifier    go to state 183
    method_function_definition  go to state 484
    constructor_definition      go to state 485
    access_modifier             go to state 88


state 449

  202 class_definition: class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list . END
  222 member_declaration_list: member_declaration_list . member_declaration

    PUBLIC_T     shift, and go to state 37
    PRIVATE_T    shift, and go to state 38
    VIRTUAL_T    shift, and go to state 39
    OVERRIDE_T   shift, and go to state 40
    ABSTRACT_T   shift, and go to state 41
    CONSTRUCTOR  shift, and go to state 442
    FINAL        shift, and go to state 443
    FUNCTION     shift, and go to state 444
    DIM          shift, and go to state 445
    END          shift, and go to state 486
    DECLARE      shift, and go to state 446
    BSUB         shift, and go to state 447

    class_or_member_modifier_list  go to state 448
    class_or_member_modifier       go to state 86
    member_declaration             go to state 487
    method_member                  go to state 451
    method_function_definition     go to state 452
    constructor_definition         go to state 453
    access_modifier                go to state 88
    field_member                   go to state 454


state 450

  221 member_declaration_list: member_declaration .

    $default  reduce using rule 221 (member_declaration_list)


state 451

  223 member_declaration: method_member .

    $default  reduce using rule 223 (member_declaration)


state 452

  225 method_member: method_function_definition .

    $default  reduce using rule 225 (method_member)


state 453

  227 method_member: constructor_definition .

    $default  reduce using rule 227 (method_member)


state 454

  224 member_declaration: field_member .

    $default  reduce using rule 224 (member_declaration)


state 455

  206 class_definition: class_or_interface IDENTIFIER template_list extends CR $@6 END .

    $default  reduce using rule 206 (class_definition)


state 456

  161 elsif: ELSIF expression THEN myblock .

    $default  reduce using rule 161 (elsif)


state 457

   56 parameter_list: parameter_list COMMA IDENTIFIER AS type_specifier .

    $default  reduce using rule 56 (parameter_list)


state 458

  256 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 488


state 459

  257 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 489


state 460

   50 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 490


state 461

   51 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 117

    myblock  go to state 491


state 462

   46 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 492


state 463

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 493


state 464

   48 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause . CR

    CR  shift, and go to state 494


state 465

   49 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause CR .

    $default  reduce using rule 49 (function_declaration)


state 466

   52 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock .

    $default  reduce using rule 52 (function_definition)


state 467

  242 exception_list: exception_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 495


state 468

  174 do_while_statement: label_opt DO_T block WHILE LP expression RP CR .

    $default  reduce using rule 174 (do_while_statement)


state 469

  173 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock .

    $default  reduce using rule 173 (for_statement)


state 470

  175 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP block .

    $default  reduce using rule 175 (foreach_statement)


state 471

  204 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list . END
  222 member_declaration_list: member_declaration_list . member_declaration

    PUBLIC_T     shift, and go to state 37
    PRIVATE_T    shift, and go to state 38
    VIRTUAL_T    shift, and go to state 39
    OVERRIDE_T   shift, and go to state 40
    ABSTRACT_T   shift, and go to state 41
    CONSTRUCTOR  shift, and go to state 442
    FINAL        shift, and go to state 443
    FUNCTION     shift, and go to state 444
    DIM          shift, and go to state 445
    END          shift, and go to state 496
    DECLARE      shift, and go to state 446
    BSUB         shift, and go to state 447

    class_or_member_modifier_list  go to state 448
    class_or_member_modifier       go to state 86
    member_declaration             go to state 487
    method_member                  go to state 451
    method_function_definition     go to state 452
    constructor_definition         go to state 453
    access_modifier                go to state 88
    field_member                   go to state 454


state 472

  208 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 END .

    $default  reduce using rule 208 (class_definition)


state 473

  243 constructor_definition: CONSTRUCTOR IDENTIFIER . LP parameter_list RP throws_clause myblock
  244                       | CONSTRUCTOR IDENTIFIER . LP RP throws_clause myblock

    LP  shift, and go to state 497


state 474

  253 field_member: FINAL IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 498


state 475

  210 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier
  255 field_member: FINAL class_or_member_modifier_list . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 499
    PUBLIC_T    shift, and go to state 37
    PRIVATE_T   shift, and go to state 38
    VIRTUAL_T   shift, and go to state 39
    OVERRIDE_T  shift, and go to state 40
    ABSTRACT_T  shift, and go to state 41

    class_or_member_modifier  go to state 183
    access_modifier           go to state 88


state 476

  229 method_function_definition: FUNCTION IDENTIFIER . LP parameter_list RP AS type_specifier throws_clause myblock
  230                           | FUNCTION IDENTIFIER . LP RP AS type_specifier throws_clause myblock

    LP  shift, and go to state 500


state 477

  251 field_member: DIM IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 501


state 478

  245 constructor_definition: DECLARE CONSTRUCTOR . IDENTIFIER LP parameter_list RP throws_clause CR
  246                       | DECLARE CONSTRUCTOR . IDENTIFIER LP RP throws_clause CR

    IDENTIFIER  shift, and go to state 502


state 479

  231 method_function_definition: DECLARE FUNCTION . IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  232                           | DECLARE FUNCTION . IDENTIFIER LP RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 503


state 480

  235 method_function_definition: DECLARE BSUB . IDENTIFIER LP parameter_list RP throws_clause CR
  236                           | DECLARE BSUB . IDENTIFIER LP RP throws_clause CR

    IDENTIFIER  shift, and go to state 504


state 481

  233 method_function_definition: BSUB IDENTIFIER . LP parameter_list RP throws_clause myblock
  234                           | BSUB IDENTIFIER . LP RP throws_clause myblock

    LP  shift, and go to state 505


state 482

  252 field_member: class_or_member_modifier_list IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 506


state 483

  254 field_member: class_or_member_modifier_list FINAL . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 507


state 484

  226 method_member: class_or_member_modifier_list method_function_definition .

    $default  reduce using rule 226 (method_member)


state 485

  228 method_member: class_or_member_modifier_list constructor_definition .

    $default  reduce using rule 228 (method_member)


state 486

  202 class_definition: class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list END .

    $default  reduce using rule 202 (class_definition)


state 487

  222 member_declaration_list: member_declaration_list member_declaration .

    $default  reduce using rule 222 (member_declaration_list)


state 488

  256 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 508


state 489

  257 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 257 (delegate_definition)


state 490

   50 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 117

    myblock  go to state 509


state 491

   51 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 51 (function_definition)


state 492

   46 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 510


state 493

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 511


state 494

   48 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR .

    $default  reduce using rule 48 (function_declaration)


state 495

  242 exception_list: exception_list COMMA IDENTIFIER .

    $default  reduce using rule 242 (exception_list)


state 496

  204 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END .

    $default  reduce using rule 204 (class_definition)


state 497

  243 constructor_definition: CONSTRUCTOR IDENTIFIER LP . parameter_list RP throws_clause myblock
  244                       | CONSTRUCTOR IDENTIFIER LP . RP throws_clause myblock

    IDENTIFIER  shift, and go to state 286
    RP          shift, and go to state 512

    parameter_list  go to state 513


state 498

  253 field_member: FINAL IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 514


state 499

  255 field_member: FINAL class_or_member_modifier_list IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 515


state 500

  229 method_function_definition: FUNCTION IDENTIFIER LP . parameter_list RP AS type_specifier throws_clause myblock
  230                           | FUNCTION IDENTIFIER LP . RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 286
    RP          shift, and go to state 516

    parameter_list  go to state 517


state 501

  251 field_member: DIM IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 518


state 502

  245 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER . LP parameter_list RP throws_clause CR
  246                       | DECLARE CONSTRUCTOR IDENTIFIER . LP RP throws_clause CR

    LP  shift, and go to state 519


state 503

  231 method_function_definition: DECLARE FUNCTION IDENTIFIER . LP parameter_list RP AS type_specifier throws_clause CR
  232                           | DECLARE FUNCTION IDENTIFIER . LP RP AS type_specifier throws_clause CR

    LP  shift, and go to state 520


state 504

  235 method_function_definition: DECLARE BSUB IDENTIFIER . LP parameter_list RP throws_clause CR
  236                           | DECLARE BSUB IDENTIFIER . LP RP throws_clause CR

    LP  shift, and go to state 521


state 505

  233 method_function_definition: BSUB IDENTIFIER LP . parameter_list RP throws_clause myblock
  234                           | BSUB IDENTIFIER LP . RP throws_clause myblock

    IDENTIFIER  shift, and go to state 286
    RP          shift, and go to state 522

    parameter_list  go to state 523


state 506

  252 field_member: class_or_member_modifier_list IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 524


state 507

  254 field_member: class_or_member_modifier_list FINAL IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 525


state 508

  256 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 256 (delegate_definition)


state 509

   50 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 50 (function_definition)


state 510

   46 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 526


state 511

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 47 (function_declaration)


state 512

  244 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP . throws_clause myblock

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 527


state 513

   56 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  243 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list . RP throws_clause myblock

    RP     shift, and go to state 528
    COMMA  shift, and go to state 529


state 514

  253 field_member: FINAL IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 530

    $default  reduce using rule 249 (initializer_opt)

    initializer_opt  go to state 531


state 515

  255 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 532


state 516

  230 method_function_definition: FUNCTION IDENTIFIER LP RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 533


state 517

   56 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  229 method_function_definition: FUNCTION IDENTIFIER LP parameter_list . RP AS type_specifier throws_clause myblock

    RP     shift, and go to state 534
    COMMA  shift, and go to state 529


state 518

  251 field_member: DIM IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 530

    $default  reduce using rule 249 (initializer_opt)

    initializer_opt  go to state 535


state 519

  245 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP . parameter_list RP throws_clause CR
  246                       | DECLARE CONSTRUCTOR IDENTIFIER LP . RP throws_clause CR

    IDENTIFIER  shift, and go to state 286
    RP          shift, and go to state 536

    parameter_list  go to state 537


state 520

  231 method_function_definition: DECLARE FUNCTION IDENTIFIER LP . parameter_list RP AS type_specifier throws_clause CR
  232                           | DECLARE FUNCTION IDENTIFIER LP . RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 286
    RP          shift, and go to state 538

    parameter_list  go to state 539


state 521

  235 method_function_definition: DECLARE BSUB IDENTIFIER LP . parameter_list RP throws_clause CR
  236                           | DECLARE BSUB IDENTIFIER LP . RP throws_clause CR

    IDENTIFIER  shift, and go to state 286
    RP          shift, and go to state 540

    parameter_list  go to state 541


state 522

  234 method_function_definition: BSUB IDENTIFIER LP RP . throws_clause myblock

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 542


state 523

   56 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  233 method_function_definition: BSUB IDENTIFIER LP parameter_list . RP throws_clause myblock

    RP     shift, and go to state 543
    COMMA  shift, and go to state 529


state 524

  252 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 530

    $default  reduce using rule 249 (initializer_opt)

    initializer_opt  go to state 544


state 525

  254 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 545


state 526

   46 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 46 (function_declaration)


state 527

  244 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP throws_clause . myblock

    CR  shift, and go to state 117

    myblock  go to state 546


state 528

  243 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP . throws_clause myblock

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 547


state 529

   56 parameter_list: parameter_list COMMA . IDENTIFIER AS type_specifier

    IDENTIFIER  shift, and go to state 389


state 530

  250 initializer_opt: ASSIGN_T . expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 102
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 42
    SUPER_T         shift, and go to state 43

    expression                 go to state 548
    assignment_expression      go to state 57
    logical_or_expression      go to state 58
    logical_and_expression     go to state 59
    equality_expression        go to state 60
    relational_expression      go to state 61
    additive_expression        go to state 62
    multiplicative_expression  go to state 63
    unary_expression           go to state 64
    postfix_expression         go to state 65
    primary_expression         go to state 66
    primary_no_new_array       go to state 67
    array_literal              go to state 68
    array_creation             go to state 69


state 531

  253 field_member: FINAL IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 549


state 532

  255 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 530

    $default  reduce using rule 249 (initializer_opt)

    initializer_opt  go to state 550


state 533

  230 method_function_definition: FUNCTION IDENTIFIER LP RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 551


state 534

  229 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 552


state 535

  251 field_member: DIM IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 553


state 536

  246 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP . throws_clause CR

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 554


state 537

   56 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  245 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list . RP throws_clause CR

    RP     shift, and go to state 555
    COMMA  shift, and go to state 529


state 538

  232 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 556


state 539

   56 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  231 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list . RP AS type_specifier throws_clause CR

    RP     shift, and go to state 557
    COMMA  shift, and go to state 529


state 540

  236 method_function_definition: DECLARE BSUB IDENTIFIER LP RP . throws_clause CR

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 558


state 541

   56 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  235 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list . RP throws_clause CR

    RP     shift, and go to state 559
    COMMA  shift, and go to state 529


state 542

  234 method_function_definition: BSUB IDENTIFIER LP RP throws_clause . myblock

    CR  shift, and go to state 117

    myblock  go to state 560


state 543

  233 method_function_definition: BSUB IDENTIFIER LP parameter_list RP . throws_clause myblock

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 561


state 544

  252 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 562


state 545

  254 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 530

    $default  reduce using rule 249 (initializer_opt)

    initializer_opt  go to state 563


state 546

  244 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP throws_clause myblock .

    $default  reduce using rule 244 (constructor_definition)


state 547

  243 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause . myblock

    CR  shift, and go to state 117

    myblock  go to state 564


state 548

   62 expression: expression . COMMA assignment_expression
  250 initializer_opt: ASSIGN_T expression .

    COMMA  shift, and go to state 147

    $default  reduce using rule 250 (initializer_opt)


state 549

  253 field_member: FINAL IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 253 (field_member)


state 550

  255 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 565


state 551

  230 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 566


state 552

  229 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 567


state 553

  251 field_member: DIM IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 251 (field_member)


state 554

  246 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause . CR

    CR  shift, and go to state 568


state 555

  245 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP . throws_clause CR

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 569


state 556

  232 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 570


state 557

  231 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 571


state 558

  236 method_function_definition: DECLARE BSUB IDENTIFIER LP RP throws_clause . CR

    CR  shift, and go to state 572


state 559

  235 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP . throws_clause CR

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 573


state 560

  234 method_function_definition: BSUB IDENTIFIER LP RP throws_clause myblock .

    $default  reduce using rule 234 (method_function_definition)


state 561

  233 method_function_definition: BSUB IDENTIFIER LP parameter_list RP throws_clause . myblock

    CR  shift, and go to state 117

    myblock  go to state 574


state 562

  252 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 252 (field_member)


state 563

  254 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 575


state 564

  243 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause myblock .

    $default  reduce using rule 243 (constructor_definition)


state 565

  255 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 255 (field_member)


state 566

  230 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 117

    myblock  go to state 576


state 567

  229 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 577


state 568

  246 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause CR .

    $default  reduce using rule 246 (constructor_definition)


state 569

  245 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause . CR

    CR  shift, and go to state 578


state 570

  232 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 579


state 571

  231 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 249
    VOID_T            shift, and go to state 122
    BOOLEAN_T         shift, and go to state 123
    INT_T             shift, and go to state 124
    DOUBLE_T          shift, and go to state 125
    STRING_T          shift, and go to state 126
    VARIENT_T         shift, and go to state 127
    NATIVE_POINTER_T  shift, and go to state 128
    DELEGATE          shift, and go to state 136

    basic_type_specifier       go to state 137
    identifier_type_specifier  go to state 138
    array_type_specifier       go to state 139
    template_type_specifier    go to state 140
    type_specifier             go to state 580


state 572

  236 method_function_definition: DECLARE BSUB IDENTIFIER LP RP throws_clause CR .

    $default  reduce using rule 236 (method_function_definition)


state 573

  235 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause . CR

    CR  shift, and go to state 581


state 574

  233 method_function_definition: BSUB IDENTIFIER LP parameter_list RP throws_clause myblock .

    $default  reduce using rule 233 (method_function_definition)


state 575

  254 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 254 (field_member)


state 576

  230 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 230 (method_function_definition)


state 577

  229 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 117

    myblock  go to state 582


state 578

  245 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR .

    $default  reduce using rule 245 (constructor_definition)


state 579

  232 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 583


state 580

  231 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 404

    $default  reduce using rule 239 (throws_clause)

    throws_clause  go to state 584


state 581

  235 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause CR .

    $default  reduce using rule 235 (method_function_definition)


state 582

  229 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 229 (method_function_definition)


state 583

  232 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR .

    $default  reduce using rule 232 (method_function_definition)


state 584

  231 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 585


state 585

  231 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR .

    $default  reduce using rule 231 (method_function_definition)
