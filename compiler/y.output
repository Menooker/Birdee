Grammar

    0 $accept: translation_unit $end

    1 translation_unit: initial_declaration
    2                 | translation_unit definition_or_statement

    3 initial_declaration: /* empty */
    4                    | require_list rename_list
    5                    | require_list
    6                    | rename_list
    7                    | lib_function

    8 require_list: require_declaration
    9             | require_list require_declaration

   10 require_declaration: REQUIRE package_name CR

   11 package_name: IDENTIFIER
   12             | package_name DOT IDENTIFIER

   13 rename_list: rename_declaration
   14            | rename_list rename_declaration

   15 rename_declaration: RENAME package_name IDENTIFIER CR

   16 definition_or_statement: function_definition
   17                        | class_definition
   18                        | statement
   19                        | delegate_definition
   20                        | enum_definition
   21                        | const_definition

   22 basic_type_specifier: VOID_T
   23                     | BOOLEAN_T
   24                     | INT_T
   25                     | DOUBLE_T
   26                     | STRING_T
   27                     | VARIENT_T
   28                     | NATIVE_POINTER_T
   29                     | DELEGATE

   30 identifier_type_specifier: IDENTIFIER

   31 array_type_specifier: basic_type_specifier LB RB
   32                     | IDENTIFIER LB RB
   33                     | array_type_specifier LB RB

   34 type_specifier: basic_type_specifier
   35               | array_type_specifier
   36               | identifier_type_specifier

   37 $@1: /* empty */

   38 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list END

   39 lib_function_declaration_list: /* empty */
   40                              | lib_function_declaration_list function_declaration
   41                              | lib_function_declaration_list class_definition

   42 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   43                     | DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR
   44                     | DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   45                     | DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause CR

   46 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   47                    | FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock
   48                    | BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock
   49                    | BSUB IDENTIFIER LP apostrophe RP throws_clause myblock
   50                    | function_declaration

   51 parameter_list: IDENTIFIER AS type_specifier
   52               | parameter_list COMMA IDENTIFIER AS type_specifier

   53 argument_list: assignment_expression
   54              | argument_list COMMA assignment_expression

   55 statement_list: statement
   56               | statement_list statement

   57 expression: assignment_expression
   58           | expression COMMA assignment_expression

   59 assignment_expression: logical_or_expression
   60                      | primary_expression assignment_operator assignment_expression

   61 assignment_operator: ASSIGN_T
   62                    | ADD_ASSIGN_T
   63                    | SUB_ASSIGN_T
   64                    | MUL_ASSIGN_T
   65                    | DIV_ASSIGN_T
   66                    | MOD_ASSIGN_T

   67 logical_or_expression: logical_and_expression
   68                      | logical_or_expression LOGICAL_OR logical_and_expression

   69 logical_and_expression: equality_expression
   70                       | logical_and_expression LOGICAL_AND equality_expression

   71 equality_expression: relational_expression
   72                    | equality_expression EQ relational_expression
   73                    | equality_expression NE relational_expression

   74 relational_expression: additive_expression
   75                      | relational_expression GT additive_expression
   76                      | relational_expression GE additive_expression
   77                      | relational_expression LT additive_expression
   78                      | relational_expression LE additive_expression

   79 additive_expression: multiplicative_expression
   80                    | additive_expression ADD multiplicative_expression
   81                    | additive_expression SUB multiplicative_expression

   82 multiplicative_expression: unary_expression
   83                          | multiplicative_expression MUL unary_expression
   84                          | multiplicative_expression DIV unary_expression
   85                          | multiplicative_expression MOD unary_expression
   86                          | multiplicative_expression BIT_AND unary_expression
   87                          | multiplicative_expression BIT_OR unary_expression
   88                          | multiplicative_expression BIT_XOR unary_expression

   89 unary_expression: postfix_expression
   90                 | SUB unary_expression
   91                 | EXCLAMATION unary_expression
   92                 | BIT_NOT unary_expression

   93 postfix_expression: primary_expression
   94                   | primary_expression INCREMENT
   95                   | primary_expression DECREMENT
   96                   | primary_expression INSTANCEOF type_specifier

   97 primary_expression: primary_no_new_array
   98                   | array_creation
   99                   | IDENTIFIER
  100                   | AUTOVAR

  101 primary_no_new_array: primary_no_new_array LB expression RB
  102                     | IDENTIFIER LB expression RB
  103                     | primary_expression DOT IDENTIFIER
  104                     | primary_expression LP argument_list RP
  105                     | primary_expression LP RP
  106                     | LP expression RP
  107                     | primary_expression DOWN_CAST_BEGIN type_specifier DOWN_CAST_END
  108                     | INT_LITERAL
  109                     | DOUBLE_LITERAL
  110                     | STRING_LITERAL
  111                     | REGEXP_LITERAL
  112                     | TRUE_T
  113                     | FALSE_T
  114                     | NULL_T
  115                     | array_literal
  116                     | THIS_T
  117                     | SUPER_T
  118                     | NEW DELEGATE LP RP
  119                     | NEW IDENTIFIER LP RP
  120                     | NEW IDENTIFIER LP argument_list RP
  121                     | NEW IDENTIFIER DOT IDENTIFIER LP RP
  122                     | NEW IDENTIFIER DOT IDENTIFIER LP argument_list RP

  123 array_literal: LC expression_list RC
  124              | LC expression_list COMMA RC

  125 array_creation: NEW basic_type_specifier dimension_expression_list
  126               | NEW basic_type_specifier dimension_expression_list dimension_list
  127               | NEW identifier_type_specifier dimension_expression_list
  128               | NEW identifier_type_specifier dimension_expression_list dimension_list

  129 dimension_expression_list: dimension_expression
  130                          | dimension_expression_list dimension_expression

  131 dimension_expression: LB expression RB

  132 dimension_list: LB RB
  133               | dimension_list LB RB

  134 expression_list: /* empty */
  135                | assignment_expression
  136                | expression_list COMMA assignment_expression

  137 statement: expression CR
  138          | if_statement
  139          | switch_statement
  140          | while_statement
  141          | for_statement
  142          | do_while_statement
  143          | foreach_statement
  144          | return_statement
  145          | break_statement
  146          | continue_statement
  147          | try_statement
  148          | throw_statement
  149          | declaration_statement
  150          | CR

  151 if_statement: IF expression THEN myblock
  152             | IF expression THEN myblock ELSE myblock
  153             | IF expression THEN myblock elsif_list
  154             | IF expression THEN myblock elsif_list ELSE myblock

  155 elsif_list: elsif
  156           | elsif_list elsif

  157 elsif: ELSIF expression THEN myblock

  158 label_opt: /* empty */
  159          | IDENTIFIER COLON

  160 switch_statement: SWITCH expression CR case_list default_opt

  161 case_list: one_case
  162          | case_list one_case

  163 one_case: CASE case_expression_list myblock

  164 default_opt: /* empty */
  165            | DEFAULT_T myblock

  166 case_expression_list: assignment_expression
  167                     | expression_list COMMA assignment_expression

  168 while_statement: label_opt WHILE expression myblock

  169 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock

  170 do_while_statement: label_opt DO_T block WHILE LP expression RP CR

  171 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP block

  172 expression_opt: /* empty */
  173               | expression

  174 return_statement: RETURN_T expression_opt CR

  175 identifier_opt: /* empty */
  176               | IDENTIFIER

  177 break_statement: BREAK identifier_opt CR

  178 continue_statement: CONTINUE identifier_opt CR

  179 try_statement: TRY myblock catch_list FINALLY myblock
  180              | TRY myblock FINALLY block
  181              | TRY myblock catch_list

  182 catch_list: catch_clause
  183           | catch_list catch_clause

  184 @2: /* empty */

  185 catch_clause: CATCH @2 type_specifier IDENTIFIER myblock

  186 throw_statement: THROW expression CR
  187                | THROW CR

  188 declaration_statement: DIM IDENTIFIER AS type_specifier CR
  189                      | DIM IDENTIFIER AS type_specifier ASSIGN_T expression CR
  190                      | FINAL IDENTIFIER AS type_specifier CR
  191                      | FINAL IDENTIFIER AS type_specifier ASSIGN_T expression CR

  192 @3: /* empty */

  193 block: LC @3 statement_list RC
  194      | LC RC

  195 $@4: /* empty */

  196 class_definition: class_or_interface IDENTIFIER extends CR $@4 member_declaration_list END

  197 $@5: /* empty */

  198 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER extends CR $@5 member_declaration_list END

  199 $@6: /* empty */

  200 class_definition: class_or_interface IDENTIFIER extends CR $@6 END

  201 $@7: /* empty */

  202 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER extends CR $@7 END

  203 class_or_member_modifier_list: class_or_member_modifier
  204                              | class_or_member_modifier_list class_or_member_modifier

  205 class_or_member_modifier: access_modifier
  206                         | VIRTUAL_T
  207                         | OVERRIDE_T
  208                         | ABSTRACT_T

  209 class_or_interface: CLASS_T
  210                   | INTERFACE_T

  211 extends: /* empty */
  212        | COLON extends_list

  213 extends_list: IDENTIFIER
  214             | extends_list COMMA IDENTIFIER

  215 member_declaration_list: member_declaration
  216                        | member_declaration_list member_declaration

  217 member_declaration: method_member
  218                   | field_member

  219 method_member: method_function_definition
  220              | class_or_member_modifier_list method_function_definition
  221              | constructor_definition
  222              | class_or_member_modifier_list constructor_definition

  223 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock
  224                           | FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause myblock
  225                           | DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  226                           | DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR
  227                           | BSUB IDENTIFIER LP parameter_list RP throws_clause myblock
  228                           | BSUB IDENTIFIER LP RP throws_clause myblock
  229                           | DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause CR
  230                           | DECLARE BSUB IDENTIFIER LP RP throws_clause CR

  231 apostrophe: /* empty */
  232           | COMMA APOSTROPHE

  233 throws_clause: /* empty */
  234              | THROWS exception_list

  235 exception_list: IDENTIFIER
  236               | exception_list COMMA IDENTIFIER

  237 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause myblock
  238                       | CONSTRUCTOR IDENTIFIER LP RP throws_clause myblock
  239                       | DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR
  240                       | DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause CR

  241 access_modifier: PUBLIC_T
  242                | PRIVATE_T

  243 initializer_opt: /* empty */
  244                | ASSIGN_T expression

  245 field_member: DIM IDENTIFIER AS type_specifier initializer_opt CR
  246             | class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR
  247             | FINAL IDENTIFIER AS type_specifier initializer_opt CR
  248             | class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt CR
  249             | FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR

  250 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  251                    | DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

  252 enum_definition: ENUM IDENTIFIER LC enumerator_list RC
  253                | ENUM IDENTIFIER LC enumerator_list COMMA RC

  254 enumerator_list: IDENTIFIER
  255                | enumerator_list COMMA IDENTIFIER

  256 const_definition: CONST IDENTIFIER ASSIGN_T expression CR
  257                 | CONST type_specifier IDENTIFIER CR

  258 @8: /* empty */

  259 myblock: CR @8 statement_list END
  260        | CR END


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 108
DOUBLE_LITERAL (259) 109
STRING_LITERAL (260) 110
REGEXP_LITERAL (261) 111
IDENTIFIER (262) 11 12 15 30 32 38 42 43 44 45 46 47 48 49 51 52 99
    102 103 119 120 121 122 159 171 176 185 188 189 190 191 196 198
    200 202 213 214 223 224 225 226 227 228 229 230 235 236 237 238
    239 240 245 246 247 248 249 250 251 252 253 254 255 256 257
AUTOVAR (263) 100
IF (264) 151 152 153 154
ELSE (265) 152 154
ELSIF (266) 157
SWITCH (267) 160
CASE (268) 163
DEFAULT_T (269) 165
WHILE (270) 168 170
DO_T (271) 170
FOR (272) 169
FOREACH (273) 171
RETURN_T (274) 174
BREAK (275) 177
CONTINUE (276) 178
NULL_T (277) 114
LP (278) 42 43 44 45 46 47 48 49 104 105 106 118 119 120 121 122 170
    171 223 224 225 226 227 228 229 230 237 238 239 240 250 251
RP (279) 42 43 44 45 46 47 48 49 104 105 106 118 119 120 121 122 170
    171 223 224 225 226 227 228 229 230 237 238 239 240 250 251
LC (280) 123 124 193 194 252 253
RC (281) 123 124 193 194 252 253
LB (282) 31 32 33 101 102 131 132 133
RB (283) 31 32 33 101 102 131 132 133
SEMICOLON (284) 169
COLON (285) 159 171 212
COMMA (286) 52 54 58 124 136 167 214 232 236 253 255
ASSIGN_T (287) 61 189 191 244 256
LOGICAL_AND (288) 70
LOGICAL_OR (289) 68
EQ (290) 72
NE (291) 73
GT (292) 75
GE (293) 76
LT (294) 77
LE (295) 78
ADD (296) 80
SUB (297) 81 90
MUL (298) 83
DIV (299) 84
MOD (300) 85
BIT_AND (301) 86
BIT_OR (302) 87
BIT_XOR (303) 88
BIT_NOT (304) 92
TRUE_T (305) 112
FALSE_T (306) 113
EXCLAMATION (307) 91
DOT (308) 12 103 121 122
ADD_ASSIGN_T (309) 62
SUB_ASSIGN_T (310) 63
MUL_ASSIGN_T (311) 64
DIV_ASSIGN_T (312) 65
MOD_ASSIGN_T (313) 66
INCREMENT (314) 94
DECREMENT (315) 95
TRY (316) 179 180 181
CATCH (317) 185
FINALLY (318) 179 180
THROW (319) 186 187
THROWS (320) 234
VOID_T (321) 22
BOOLEAN_T (322) 23
INT_T (323) 24
DOUBLE_T (324) 25
STRING_T (325) 26
VARIENT_T (326) 27
NATIVE_POINTER_T (327) 28
NEW (328) 118 119 120 121 122 125 126 127 128
REQUIRE (329) 10
RENAME (330) 15
CLASS_T (331) 209
INTERFACE_T (332) 210
PUBLIC_T (333) 241
PRIVATE_T (334) 242
VIRTUAL_T (335) 206
OVERRIDE_T (336) 207
ABSTRACT_T (337) 208
THIS_T (338) 116
SUPER_T (339) 117
CONSTRUCTOR (340) 237 238 239 240
INSTANCEOF (341) 96
DOWN_CAST_BEGIN (342) 107
DOWN_CAST_END (343) 107
DELEGATE (344) 29 118 250 251
FINAL (345) 190 191 247 248 249
ENUM (346) 252 253
CONST (347) 256 257
FUNCTION (348) 42 43 46 47 223 224 225 226
AS (349) 42 43 46 47 51 52 188 189 190 191 223 224 225 226 245 246
    247 248 249 250 251
THEN (350) 151 152 153 154 157
DIM (351) 188 189 245
END (352) 38 196 198 200 202 259 260
CR (353) 10 15 38 42 43 44 45 137 150 160 170 174 177 178 186 187 188
    189 190 191 196 198 200 202 225 226 229 230 239 240 245 246 247
    248 249 250 251 256 257 259 260
DECLARE (354) 42 43 44 45 225 226 229 230 239 240
BSUB (355) 44 45 48 49 227 228 229 230
APOSTROPHE (356) 232
LIB (357) 38


Nonterminals, with rules where they appear

$accept (103)
    on left: 0
translation_unit (104)
    on left: 1 2, on right: 0 2
initial_declaration (105)
    on left: 3 4 5 6 7, on right: 1
require_list (106)
    on left: 8 9, on right: 4 5 9
require_declaration (107)
    on left: 10, on right: 8 9
package_name (108)
    on left: 11 12, on right: 10 12 15
rename_list (109)
    on left: 13 14, on right: 4 6 14
rename_declaration (110)
    on left: 15, on right: 13 14
definition_or_statement (111)
    on left: 16 17 18 19 20 21, on right: 2
basic_type_specifier (112)
    on left: 22 23 24 25 26 27 28 29, on right: 31 34 125 126
identifier_type_specifier (113)
    on left: 30, on right: 36 127 128
array_type_specifier (114)
    on left: 31 32 33, on right: 33 35
type_specifier (115)
    on left: 34 35 36, on right: 42 43 46 47 51 52 96 107 185 188 189
    190 191 223 224 225 226 245 246 247 248 249 250 251 257
lib_function (116)
    on left: 38, on right: 7
$@1 (117)
    on left: 37, on right: 38
lib_function_declaration_list (118)
    on left: 39 40 41, on right: 38 40 41
function_declaration (119)
    on left: 42 43 44 45, on right: 40 50
function_definition (120)
    on left: 46 47 48 49 50, on right: 16
parameter_list (121)
    on left: 51 52, on right: 42 44 46 48 52 223 225 227 229 237 239
    250
argument_list (122)
    on left: 53 54, on right: 54 104 120 122
statement_list (123)
    on left: 55 56, on right: 56 193 259
expression (124)
    on left: 57 58, on right: 58 101 102 106 131 137 151 152 153 154
    157 160 168 170 171 173 186 189 191 244 256
assignment_expression (125)
    on left: 59 60, on right: 53 54 57 58 60 135 136 166 167
assignment_operator (126)
    on left: 61 62 63 64 65 66, on right: 60
logical_or_expression (127)
    on left: 67 68, on right: 59 68
logical_and_expression (128)
    on left: 69 70, on right: 67 68 70
equality_expression (129)
    on left: 71 72 73, on right: 69 70 72 73
relational_expression (130)
    on left: 74 75 76 77 78, on right: 71 72 73 75 76 77 78
additive_expression (131)
    on left: 79 80 81, on right: 74 75 76 77 78 80 81
multiplicative_expression (132)
    on left: 82 83 84 85 86 87 88, on right: 79 80 81 83 84 85 86 87
    88
unary_expression (133)
    on left: 89 90 91 92, on right: 82 83 84 85 86 87 88 90 91 92
postfix_expression (134)
    on left: 93 94 95 96, on right: 89
primary_expression (135)
    on left: 97 98 99 100, on right: 60 93 94 95 96 103 104 105 107
primary_no_new_array (136)
    on left: 101 102 103 104 105 106 107 108 109 110 111 112 113 114
    115 116 117 118 119 120 121 122, on right: 97 101
array_literal (137)
    on left: 123 124, on right: 115
array_creation (138)
    on left: 125 126 127 128, on right: 98
dimension_expression_list (139)
    on left: 129 130, on right: 125 126 127 128 130
dimension_expression (140)
    on left: 131, on right: 129 130
dimension_list (141)
    on left: 132 133, on right: 126 128 133
expression_list (142)
    on left: 134 135 136, on right: 123 124 136 167
statement (143)
    on left: 137 138 139 140 141 142 143 144 145 146 147 148 149 150,
    on right: 18 55 56
if_statement (144)
    on left: 151 152 153 154, on right: 138
elsif_list (145)
    on left: 155 156, on right: 153 154 156
elsif (146)
    on left: 157, on right: 155 156
label_opt (147)
    on left: 158 159, on right: 168 169 170 171
switch_statement (148)
    on left: 160, on right: 139
case_list (149)
    on left: 161 162, on right: 160 162
one_case (150)
    on left: 163, on right: 161 162
default_opt (151)
    on left: 164 165, on right: 160
case_expression_list (152)
    on left: 166 167, on right: 163
while_statement (153)
    on left: 168, on right: 140
for_statement (154)
    on left: 169, on right: 141
do_while_statement (155)
    on left: 170, on right: 142
foreach_statement (156)
    on left: 171, on right: 143
expression_opt (157)
    on left: 172 173, on right: 169 174
return_statement (158)
    on left: 174, on right: 144
identifier_opt (159)
    on left: 175 176, on right: 177 178
break_statement (160)
    on left: 177, on right: 145
continue_statement (161)
    on left: 178, on right: 146
try_statement (162)
    on left: 179 180 181, on right: 147
catch_list (163)
    on left: 182 183, on right: 179 181 183
catch_clause (164)
    on left: 185, on right: 182 183
@2 (165)
    on left: 184, on right: 185
throw_statement (166)
    on left: 186 187, on right: 148
declaration_statement (167)
    on left: 188 189 190 191, on right: 149
block (168)
    on left: 193 194, on right: 170 171 180
@3 (169)
    on left: 192, on right: 193
class_definition (170)
    on left: 196 198 200 202, on right: 17 41
$@4 (171)
    on left: 195, on right: 196
$@5 (172)
    on left: 197, on right: 198
$@6 (173)
    on left: 199, on right: 200
$@7 (174)
    on left: 201, on right: 202
class_or_member_modifier_list (175)
    on left: 203 204, on right: 198 202 204 220 222 246 248 249
class_or_member_modifier (176)
    on left: 205 206 207 208, on right: 203 204
class_or_interface (177)
    on left: 209 210, on right: 196 198 200 202
extends (178)
    on left: 211 212, on right: 196 198 200 202
extends_list (179)
    on left: 213 214, on right: 212 214
member_declaration_list (180)
    on left: 215 216, on right: 196 198 216
member_declaration (181)
    on left: 217 218, on right: 215 216
method_member (182)
    on left: 219 220 221 222, on right: 217
method_function_definition (183)
    on left: 223 224 225 226 227 228 229 230, on right: 219 220
apostrophe (184)
    on left: 231 232, on right: 42 43 44 45 46 47 48 49 250 251
throws_clause (185)
    on left: 233 234, on right: 42 43 44 45 46 47 48 49 223 224 225
    226 227 228 229 230 237 238 239 240 250 251
exception_list (186)
    on left: 235 236, on right: 234 236
constructor_definition (187)
    on left: 237 238 239 240, on right: 221 222
access_modifier (188)
    on left: 241 242, on right: 205
initializer_opt (189)
    on left: 243 244, on right: 245 246 247 248 249
field_member (190)
    on left: 245 246 247 248 249, on right: 218
delegate_definition (191)
    on left: 250 251, on right: 19
enum_definition (192)
    on left: 252 253, on right: 20
enumerator_list (193)
    on left: 254 255, on right: 252 253 255
const_definition (194)
    on left: 256 257, on right: 21
myblock (195)
    on left: 259 260, on right: 46 47 48 49 151 152 153 154 157 163
    165 168 169 179 180 181 185 223 224 227 228 237 238
@8 (196)
    on left: 258, on right: 259


state 0

    0 $accept: . translation_unit $end

    REQUIRE  shift, and go to state 1
    RENAME   shift, and go to state 2
    LIB      shift, and go to state 3

    $default  reduce using rule 3 (initial_declaration)

    translation_unit     go to state 4
    initial_declaration  go to state 5
    require_list         go to state 6
    require_declaration  go to state 7
    rename_list          go to state 8
    rename_declaration   go to state 9
    lib_function         go to state 10


state 1

   10 require_declaration: REQUIRE . package_name CR

    IDENTIFIER  shift, and go to state 11

    package_name  go to state 12


state 2

   15 rename_declaration: RENAME . package_name IDENTIFIER CR

    IDENTIFIER  shift, and go to state 11

    package_name  go to state 13


state 3

   38 lib_function: LIB . IDENTIFIER $@1 CR lib_function_declaration_list END

    IDENTIFIER  shift, and go to state 14


state 4

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . definition_or_statement

    $end            shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 20
    AUTOVAR         shift, and go to state 21
    IF              shift, and go to state 22
    SWITCH          shift, and go to state 23
    RETURN_T        shift, and go to state 24
    BREAK           shift, and go to state 25
    CONTINUE        shift, and go to state 26
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    TRY             shift, and go to state 35
    THROW           shift, and go to state 36
    NEW             shift, and go to state 37
    CLASS_T         shift, and go to state 38
    INTERFACE_T     shift, and go to state 39
    PUBLIC_T        shift, and go to state 40
    PRIVATE_T       shift, and go to state 41
    VIRTUAL_T       shift, and go to state 42
    OVERRIDE_T      shift, and go to state 43
    ABSTRACT_T      shift, and go to state 44
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46
    DELEGATE        shift, and go to state 47
    FINAL           shift, and go to state 48
    ENUM            shift, and go to state 49
    CONST           shift, and go to state 50
    FUNCTION        shift, and go to state 51
    DIM             shift, and go to state 52
    CR              shift, and go to state 53
    DECLARE         shift, and go to state 54
    BSUB            shift, and go to state 55

    $default  reduce using rule 158 (label_opt)

    definition_or_statement        go to state 56
    function_declaration           go to state 57
    function_definition            go to state 58
    expression                     go to state 59
    assignment_expression          go to state 60
    logical_or_expression          go to state 61
    logical_and_expression         go to state 62
    equality_expression            go to state 63
    relational_expression          go to state 64
    additive_expression            go to state 65
    multiplicative_expression      go to state 66
    unary_expression               go to state 67
    postfix_expression             go to state 68
    primary_expression             go to state 69
    primary_no_new_array           go to state 70
    array_literal                  go to state 71
    array_creation                 go to state 72
    statement                      go to state 73
    if_statement                   go to state 74
    label_opt                      go to state 75
    switch_statement               go to state 76
    while_statement                go to state 77
    for_statement                  go to state 78
    do_while_statement             go to state 79
    foreach_statement              go to state 80
    return_statement               go to state 81
    break_statement                go to state 82
    continue_statement             go to state 83
    try_statement                  go to state 84
    throw_statement                go to state 85
    declaration_statement          go to state 86
    class_definition               go to state 87
    class_or_member_modifier_list  go to state 88
    class_or_member_modifier       go to state 89
    class_or_interface             go to state 90
    access_modifier                go to state 91
    delegate_definition            go to state 92
    enum_definition                go to state 93
    const_definition               go to state 94


state 5

    1 translation_unit: initial_declaration .

    $default  reduce using rule 1 (translation_unit)


state 6

    4 initial_declaration: require_list . rename_list
    5                    | require_list .
    9 require_list: require_list . require_declaration

    REQUIRE  shift, and go to state 1
    RENAME   shift, and go to state 2

    $default  reduce using rule 5 (initial_declaration)

    require_declaration  go to state 95
    rename_list          go to state 96
    rename_declaration   go to state 9


state 7

    8 require_list: require_declaration .

    $default  reduce using rule 8 (require_list)


state 8

    6 initial_declaration: rename_list .
   14 rename_list: rename_list . rename_declaration

    RENAME  shift, and go to state 2

    $default  reduce using rule 6 (initial_declaration)

    rename_declaration  go to state 97


state 9

   13 rename_list: rename_declaration .

    $default  reduce using rule 13 (rename_list)


state 10

    7 initial_declaration: lib_function .

    $default  reduce using rule 7 (initial_declaration)


state 11

   11 package_name: IDENTIFIER .

    $default  reduce using rule 11 (package_name)


state 12

   10 require_declaration: REQUIRE package_name . CR
   12 package_name: package_name . DOT IDENTIFIER

    DOT  shift, and go to state 98
    CR   shift, and go to state 99


state 13

   12 package_name: package_name . DOT IDENTIFIER
   15 rename_declaration: RENAME package_name . IDENTIFIER CR

    IDENTIFIER  shift, and go to state 100
    DOT         shift, and go to state 98


state 14

   38 lib_function: LIB IDENTIFIER . $@1 CR lib_function_declaration_list END

    $default  reduce using rule 37 ($@1)

    $@1  go to state 101


state 15

    0 $accept: translation_unit $end .

    $default  accept


state 16

  108 primary_no_new_array: INT_LITERAL .

    $default  reduce using rule 108 (primary_no_new_array)


state 17

  109 primary_no_new_array: DOUBLE_LITERAL .

    $default  reduce using rule 109 (primary_no_new_array)


state 18

  110 primary_no_new_array: STRING_LITERAL .

    $default  reduce using rule 110 (primary_no_new_array)


state 19

  111 primary_no_new_array: REGEXP_LITERAL .

    $default  reduce using rule 111 (primary_no_new_array)


state 20

   99 primary_expression: IDENTIFIER .
  102 primary_no_new_array: IDENTIFIER . LB expression RB
  159 label_opt: IDENTIFIER . COLON

    LB     shift, and go to state 102
    COLON  shift, and go to state 103

    $default  reduce using rule 99 (primary_expression)


state 21

  100 primary_expression: AUTOVAR .

    $default  reduce using rule 100 (primary_expression)


state 22

  151 if_statement: IF . expression THEN myblock
  152             | IF . expression THEN myblock ELSE myblock
  153             | IF . expression THEN myblock elsif_list
  154             | IF . expression THEN myblock elsif_list ELSE myblock

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 105
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 23

  160 switch_statement: SWITCH . expression CR case_list default_opt

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 106
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 24

  174 return_statement: RETURN_T . expression_opt CR

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    $default  reduce using rule 172 (expression_opt)

    expression                 go to state 107
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72
    expression_opt             go to state 108


state 25

  177 break_statement: BREAK . identifier_opt CR

    IDENTIFIER  shift, and go to state 109

    $default  reduce using rule 175 (identifier_opt)

    identifier_opt  go to state 110


state 26

  178 continue_statement: CONTINUE . identifier_opt CR

    IDENTIFIER  shift, and go to state 109

    $default  reduce using rule 175 (identifier_opt)

    identifier_opt  go to state 111


state 27

  114 primary_no_new_array: NULL_T .

    $default  reduce using rule 114 (primary_no_new_array)


state 28

  106 primary_no_new_array: LP . expression RP

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 112
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 29

  123 array_literal: LC . expression_list RC
  124              | LC . expression_list COMMA RC

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    $default  reduce using rule 134 (expression_list)

    assignment_expression      go to state 113
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72
    expression_list            go to state 114


state 30

   90 unary_expression: SUB . unary_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    unary_expression      go to state 115
    postfix_expression    go to state 68
    primary_expression    go to state 116
    primary_no_new_array  go to state 70
    array_literal         go to state 71
    array_creation        go to state 72


state 31

   92 unary_expression: BIT_NOT . unary_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    unary_expression      go to state 117
    postfix_expression    go to state 68
    primary_expression    go to state 116
    primary_no_new_array  go to state 70
    array_literal         go to state 71
    array_creation        go to state 72


state 32

  112 primary_no_new_array: TRUE_T .

    $default  reduce using rule 112 (primary_no_new_array)


state 33

  113 primary_no_new_array: FALSE_T .

    $default  reduce using rule 113 (primary_no_new_array)


state 34

   91 unary_expression: EXCLAMATION . unary_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    unary_expression      go to state 118
    postfix_expression    go to state 68
    primary_expression    go to state 116
    primary_no_new_array  go to state 70
    array_literal         go to state 71
    array_creation        go to state 72


state 35

  179 try_statement: TRY . myblock catch_list FINALLY myblock
  180              | TRY . myblock FINALLY block
  181              | TRY . myblock catch_list

    CR  shift, and go to state 119

    myblock  go to state 120


state 36

  186 throw_statement: THROW . expression CR
  187                | THROW . CR

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46
    CR              shift, and go to state 121

    expression                 go to state 122
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 37

  118 primary_no_new_array: NEW . DELEGATE LP RP
  119                     | NEW . IDENTIFIER LP RP
  120                     | NEW . IDENTIFIER LP argument_list RP
  121                     | NEW . IDENTIFIER DOT IDENTIFIER LP RP
  122                     | NEW . IDENTIFIER DOT IDENTIFIER LP argument_list RP
  125 array_creation: NEW . basic_type_specifier dimension_expression_list
  126               | NEW . basic_type_specifier dimension_expression_list dimension_list
  127               | NEW . identifier_type_specifier dimension_expression_list
  128               | NEW . identifier_type_specifier dimension_expression_list dimension_list

    IDENTIFIER        shift, and go to state 123
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 131

    basic_type_specifier       go to state 132
    identifier_type_specifier  go to state 133


state 38

  209 class_or_interface: CLASS_T .

    $default  reduce using rule 209 (class_or_interface)


state 39

  210 class_or_interface: INTERFACE_T .

    $default  reduce using rule 210 (class_or_interface)


state 40

  241 access_modifier: PUBLIC_T .

    $default  reduce using rule 241 (access_modifier)


state 41

  242 access_modifier: PRIVATE_T .

    $default  reduce using rule 242 (access_modifier)


state 42

  206 class_or_member_modifier: VIRTUAL_T .

    $default  reduce using rule 206 (class_or_member_modifier)


state 43

  207 class_or_member_modifier: OVERRIDE_T .

    $default  reduce using rule 207 (class_or_member_modifier)


state 44

  208 class_or_member_modifier: ABSTRACT_T .

    $default  reduce using rule 208 (class_or_member_modifier)


state 45

  116 primary_no_new_array: THIS_T .

    $default  reduce using rule 116 (primary_no_new_array)


state 46

  117 primary_no_new_array: SUPER_T .

    $default  reduce using rule 117 (primary_no_new_array)


state 47

  250 delegate_definition: DELEGATE . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  251                    | DELEGATE . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 134


state 48

  190 declaration_statement: FINAL . IDENTIFIER AS type_specifier CR
  191                      | FINAL . IDENTIFIER AS type_specifier ASSIGN_T expression CR

    IDENTIFIER  shift, and go to state 135


state 49

  252 enum_definition: ENUM . IDENTIFIER LC enumerator_list RC
  253                | ENUM . IDENTIFIER LC enumerator_list COMMA RC

    IDENTIFIER  shift, and go to state 136


state 50

  256 const_definition: CONST . IDENTIFIER ASSIGN_T expression CR
  257                 | CONST . type_specifier IDENTIFIER CR

    IDENTIFIER        shift, and go to state 137
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 142


state 51

   46 function_definition: FUNCTION . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   47                    | FUNCTION . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 143


state 52

  188 declaration_statement: DIM . IDENTIFIER AS type_specifier CR
  189                      | DIM . IDENTIFIER AS type_specifier ASSIGN_T expression CR

    IDENTIFIER  shift, and go to state 144


state 53

  150 statement: CR .

    $default  reduce using rule 150 (statement)


state 54

   42 function_declaration: DECLARE . FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   43                     | DECLARE . FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR
   44                     | DECLARE . BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   45                     | DECLARE . BSUB IDENTIFIER LP apostrophe RP throws_clause CR

    FUNCTION  shift, and go to state 145
    BSUB      shift, and go to state 146


state 55

   48 function_definition: BSUB . IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock
   49                    | BSUB . IDENTIFIER LP apostrophe RP throws_clause myblock

    IDENTIFIER  shift, and go to state 147


state 56

    2 translation_unit: translation_unit definition_or_statement .

    $default  reduce using rule 2 (translation_unit)


state 57

   50 function_definition: function_declaration .

    $default  reduce using rule 50 (function_definition)


state 58

   16 definition_or_statement: function_definition .

    $default  reduce using rule 16 (definition_or_statement)


state 59

   58 expression: expression . COMMA assignment_expression
  137 statement: expression . CR

    COMMA  shift, and go to state 148
    CR     shift, and go to state 149


state 60

   57 expression: assignment_expression .

    $default  reduce using rule 57 (expression)


state 61

   59 assignment_expression: logical_or_expression .
   68 logical_or_expression: logical_or_expression . LOGICAL_OR logical_and_expression

    LOGICAL_OR  shift, and go to state 150

    $default  reduce using rule 59 (assignment_expression)


state 62

   67 logical_or_expression: logical_and_expression .
   70 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 151

    $default  reduce using rule 67 (logical_or_expression)


state 63

   69 logical_and_expression: equality_expression .
   72 equality_expression: equality_expression . EQ relational_expression
   73                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 152
    NE  shift, and go to state 153

    $default  reduce using rule 69 (logical_and_expression)


state 64

   71 equality_expression: relational_expression .
   75 relational_expression: relational_expression . GT additive_expression
   76                      | relational_expression . GE additive_expression
   77                      | relational_expression . LT additive_expression
   78                      | relational_expression . LE additive_expression

    GT  shift, and go to state 154
    GE  shift, and go to state 155
    LT  shift, and go to state 156
    LE  shift, and go to state 157

    $default  reduce using rule 71 (equality_expression)


state 65

   74 relational_expression: additive_expression .
   80 additive_expression: additive_expression . ADD multiplicative_expression
   81                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 158
    SUB  shift, and go to state 159

    $default  reduce using rule 74 (relational_expression)


state 66

   79 additive_expression: multiplicative_expression .
   83 multiplicative_expression: multiplicative_expression . MUL unary_expression
   84                          | multiplicative_expression . DIV unary_expression
   85                          | multiplicative_expression . MOD unary_expression
   86                          | multiplicative_expression . BIT_AND unary_expression
   87                          | multiplicative_expression . BIT_OR unary_expression
   88                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 160
    DIV      shift, and go to state 161
    MOD      shift, and go to state 162
    BIT_AND  shift, and go to state 163
    BIT_OR   shift, and go to state 164
    BIT_XOR  shift, and go to state 165

    $default  reduce using rule 79 (additive_expression)


state 67

   82 multiplicative_expression: unary_expression .

    $default  reduce using rule 82 (multiplicative_expression)


state 68

   89 unary_expression: postfix_expression .

    $default  reduce using rule 89 (unary_expression)


state 69

   60 assignment_expression: primary_expression . assignment_operator assignment_expression
   93 postfix_expression: primary_expression .
   94                   | primary_expression . INCREMENT
   95                   | primary_expression . DECREMENT
   96                   | primary_expression . INSTANCEOF type_specifier
  103 primary_no_new_array: primary_expression . DOT IDENTIFIER
  104                     | primary_expression . LP argument_list RP
  105                     | primary_expression . LP RP
  107                     | primary_expression . DOWN_CAST_BEGIN type_specifier DOWN_CAST_END

    LP               shift, and go to state 166
    ASSIGN_T         shift, and go to state 167
    DOT              shift, and go to state 168
    ADD_ASSIGN_T     shift, and go to state 169
    SUB_ASSIGN_T     shift, and go to state 170
    MUL_ASSIGN_T     shift, and go to state 171
    DIV_ASSIGN_T     shift, and go to state 172
    MOD_ASSIGN_T     shift, and go to state 173
    INCREMENT        shift, and go to state 174
    DECREMENT        shift, and go to state 175
    INSTANCEOF       shift, and go to state 176
    DOWN_CAST_BEGIN  shift, and go to state 177

    $default  reduce using rule 93 (postfix_expression)

    assignment_operator  go to state 178


state 70

   97 primary_expression: primary_no_new_array .
  101 primary_no_new_array: primary_no_new_array . LB expression RB

    LB  shift, and go to state 179

    $default  reduce using rule 97 (primary_expression)


state 71

  115 primary_no_new_array: array_literal .

    $default  reduce using rule 115 (primary_no_new_array)


state 72

   98 primary_expression: array_creation .

    $default  reduce using rule 98 (primary_expression)


state 73

   18 definition_or_statement: statement .

    $default  reduce using rule 18 (definition_or_statement)


state 74

  138 statement: if_statement .

    $default  reduce using rule 138 (statement)


state 75

  168 while_statement: label_opt . WHILE expression myblock
  169 for_statement: label_opt . FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock
  170 do_while_statement: label_opt . DO_T block WHILE LP expression RP CR
  171 foreach_statement: label_opt . FOREACH LP IDENTIFIER COLON expression RP block

    WHILE    shift, and go to state 180
    DO_T     shift, and go to state 181
    FOR      shift, and go to state 182
    FOREACH  shift, and go to state 183


state 76

  139 statement: switch_statement .

    $default  reduce using rule 139 (statement)


state 77

  140 statement: while_statement .

    $default  reduce using rule 140 (statement)


state 78

  141 statement: for_statement .

    $default  reduce using rule 141 (statement)


state 79

  142 statement: do_while_statement .

    $default  reduce using rule 142 (statement)


state 80

  143 statement: foreach_statement .

    $default  reduce using rule 143 (statement)


state 81

  144 statement: return_statement .

    $default  reduce using rule 144 (statement)


state 82

  145 statement: break_statement .

    $default  reduce using rule 145 (statement)


state 83

  146 statement: continue_statement .

    $default  reduce using rule 146 (statement)


state 84

  147 statement: try_statement .

    $default  reduce using rule 147 (statement)


state 85

  148 statement: throw_statement .

    $default  reduce using rule 148 (statement)


state 86

  149 statement: declaration_statement .

    $default  reduce using rule 149 (statement)


state 87

   17 definition_or_statement: class_definition .

    $default  reduce using rule 17 (definition_or_statement)


state 88

  198 class_definition: class_or_member_modifier_list . class_or_interface IDENTIFIER extends CR $@5 member_declaration_list END
  202                 | class_or_member_modifier_list . class_or_interface IDENTIFIER extends CR $@7 END
  204 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier

    CLASS_T      shift, and go to state 38
    INTERFACE_T  shift, and go to state 39
    PUBLIC_T     shift, and go to state 40
    PRIVATE_T    shift, and go to state 41
    VIRTUAL_T    shift, and go to state 42
    OVERRIDE_T   shift, and go to state 43
    ABSTRACT_T   shift, and go to state 44

    class_or_member_modifier  go to state 184
    class_or_interface        go to state 185
    access_modifier           go to state 91


state 89

  203 class_or_member_modifier_list: class_or_member_modifier .

    $default  reduce using rule 203 (class_or_member_modifier_list)


state 90

  196 class_definition: class_or_interface . IDENTIFIER extends CR $@4 member_declaration_list END
  200                 | class_or_interface . IDENTIFIER extends CR $@6 END

    IDENTIFIER  shift, and go to state 186


state 91

  205 class_or_member_modifier: access_modifier .

    $default  reduce using rule 205 (class_or_member_modifier)


state 92

   19 definition_or_statement: delegate_definition .

    $default  reduce using rule 19 (definition_or_statement)


state 93

   20 definition_or_statement: enum_definition .

    $default  reduce using rule 20 (definition_or_statement)


state 94

   21 definition_or_statement: const_definition .

    $default  reduce using rule 21 (definition_or_statement)


state 95

    9 require_list: require_list require_declaration .

    $default  reduce using rule 9 (require_list)


state 96

    4 initial_declaration: require_list rename_list .
   14 rename_list: rename_list . rename_declaration

    RENAME  shift, and go to state 2

    $default  reduce using rule 4 (initial_declaration)

    rename_declaration  go to state 97


state 97

   14 rename_list: rename_list rename_declaration .

    $default  reduce using rule 14 (rename_list)


state 98

   12 package_name: package_name DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 187


state 99

   10 require_declaration: REQUIRE package_name CR .

    $default  reduce using rule 10 (require_declaration)


state 100

   15 rename_declaration: RENAME package_name IDENTIFIER . CR

    CR  shift, and go to state 188


state 101

   38 lib_function: LIB IDENTIFIER $@1 . CR lib_function_declaration_list END

    CR  shift, and go to state 189


state 102

  102 primary_no_new_array: IDENTIFIER LB . expression RB

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 190
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 103

  159 label_opt: IDENTIFIER COLON .

    $default  reduce using rule 159 (label_opt)


state 104

   99 primary_expression: IDENTIFIER .
  102 primary_no_new_array: IDENTIFIER . LB expression RB

    LB  shift, and go to state 102

    $default  reduce using rule 99 (primary_expression)


state 105

   58 expression: expression . COMMA assignment_expression
  151 if_statement: IF expression . THEN myblock
  152             | IF expression . THEN myblock ELSE myblock
  153             | IF expression . THEN myblock elsif_list
  154             | IF expression . THEN myblock elsif_list ELSE myblock

    COMMA  shift, and go to state 148
    THEN   shift, and go to state 191


state 106

   58 expression: expression . COMMA assignment_expression
  160 switch_statement: SWITCH expression . CR case_list default_opt

    COMMA  shift, and go to state 148
    CR     shift, and go to state 192


state 107

   58 expression: expression . COMMA assignment_expression
  173 expression_opt: expression .

    COMMA  shift, and go to state 148

    $default  reduce using rule 173 (expression_opt)


state 108

  174 return_statement: RETURN_T expression_opt . CR

    CR  shift, and go to state 193


state 109

  176 identifier_opt: IDENTIFIER .

    $default  reduce using rule 176 (identifier_opt)


state 110

  177 break_statement: BREAK identifier_opt . CR

    CR  shift, and go to state 194


state 111

  178 continue_statement: CONTINUE identifier_opt . CR

    CR  shift, and go to state 195


state 112

   58 expression: expression . COMMA assignment_expression
  106 primary_no_new_array: LP expression . RP

    RP     shift, and go to state 196
    COMMA  shift, and go to state 148


state 113

  135 expression_list: assignment_expression .

    $default  reduce using rule 135 (expression_list)


state 114

  123 array_literal: LC expression_list . RC
  124              | LC expression_list . COMMA RC
  136 expression_list: expression_list . COMMA assignment_expression

    RC     shift, and go to state 197
    COMMA  shift, and go to state 198


state 115

   90 unary_expression: SUB unary_expression .

    $default  reduce using rule 90 (unary_expression)


state 116

   93 postfix_expression: primary_expression .
   94                   | primary_expression . INCREMENT
   95                   | primary_expression . DECREMENT
   96                   | primary_expression . INSTANCEOF type_specifier
  103 primary_no_new_array: primary_expression . DOT IDENTIFIER
  104                     | primary_expression . LP argument_list RP
  105                     | primary_expression . LP RP
  107                     | primary_expression . DOWN_CAST_BEGIN type_specifier DOWN_CAST_END

    LP               shift, and go to state 166
    DOT              shift, and go to state 168
    INCREMENT        shift, and go to state 174
    DECREMENT        shift, and go to state 175
    INSTANCEOF       shift, and go to state 176
    DOWN_CAST_BEGIN  shift, and go to state 177

    $default  reduce using rule 93 (postfix_expression)


state 117

   92 unary_expression: BIT_NOT unary_expression .

    $default  reduce using rule 92 (unary_expression)


state 118

   91 unary_expression: EXCLAMATION unary_expression .

    $default  reduce using rule 91 (unary_expression)


state 119

  259 myblock: CR . @8 statement_list END
  260        | CR . END

    END  shift, and go to state 199

    $default  reduce using rule 258 (@8)

    @8  go to state 200


state 120

  179 try_statement: TRY myblock . catch_list FINALLY myblock
  180              | TRY myblock . FINALLY block
  181              | TRY myblock . catch_list

    CATCH    shift, and go to state 201
    FINALLY  shift, and go to state 202

    catch_list    go to state 203
    catch_clause  go to state 204


state 121

  187 throw_statement: THROW CR .

    $default  reduce using rule 187 (throw_statement)


state 122

   58 expression: expression . COMMA assignment_expression
  186 throw_statement: THROW expression . CR

    COMMA  shift, and go to state 148
    CR     shift, and go to state 205


state 123

   30 identifier_type_specifier: IDENTIFIER .
  119 primary_no_new_array: NEW IDENTIFIER . LP RP
  120                     | NEW IDENTIFIER . LP argument_list RP
  121                     | NEW IDENTIFIER . DOT IDENTIFIER LP RP
  122                     | NEW IDENTIFIER . DOT IDENTIFIER LP argument_list RP

    LP   shift, and go to state 206
    DOT  shift, and go to state 207

    $default  reduce using rule 30 (identifier_type_specifier)


state 124

   22 basic_type_specifier: VOID_T .

    $default  reduce using rule 22 (basic_type_specifier)


state 125

   23 basic_type_specifier: BOOLEAN_T .

    $default  reduce using rule 23 (basic_type_specifier)


state 126

   24 basic_type_specifier: INT_T .

    $default  reduce using rule 24 (basic_type_specifier)


state 127

   25 basic_type_specifier: DOUBLE_T .

    $default  reduce using rule 25 (basic_type_specifier)


state 128

   26 basic_type_specifier: STRING_T .

    $default  reduce using rule 26 (basic_type_specifier)


state 129

   27 basic_type_specifier: VARIENT_T .

    $default  reduce using rule 27 (basic_type_specifier)


state 130

   28 basic_type_specifier: NATIVE_POINTER_T .

    $default  reduce using rule 28 (basic_type_specifier)


state 131

   29 basic_type_specifier: DELEGATE .
  118 primary_no_new_array: NEW DELEGATE . LP RP

    LP  shift, and go to state 208

    $default  reduce using rule 29 (basic_type_specifier)


state 132

  125 array_creation: NEW basic_type_specifier . dimension_expression_list
  126               | NEW basic_type_specifier . dimension_expression_list dimension_list

    LB  shift, and go to state 209

    dimension_expression_list  go to state 210
    dimension_expression       go to state 211


state 133

  127 array_creation: NEW identifier_type_specifier . dimension_expression_list
  128               | NEW identifier_type_specifier . dimension_expression_list dimension_list

    LB  shift, and go to state 209

    dimension_expression_list  go to state 212
    dimension_expression       go to state 211


state 134

  250 delegate_definition: DELEGATE IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  251                    | DELEGATE IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause CR

    LP  shift, and go to state 213


state 135

  190 declaration_statement: FINAL IDENTIFIER . AS type_specifier CR
  191                      | FINAL IDENTIFIER . AS type_specifier ASSIGN_T expression CR

    AS  shift, and go to state 214


state 136

  252 enum_definition: ENUM IDENTIFIER . LC enumerator_list RC
  253                | ENUM IDENTIFIER . LC enumerator_list COMMA RC

    LC  shift, and go to state 215


state 137

   30 identifier_type_specifier: IDENTIFIER .
   32 array_type_specifier: IDENTIFIER . LB RB
  256 const_definition: CONST IDENTIFIER . ASSIGN_T expression CR

    LB        shift, and go to state 216
    ASSIGN_T  shift, and go to state 217

    $default  reduce using rule 30 (identifier_type_specifier)


state 138

   29 basic_type_specifier: DELEGATE .

    $default  reduce using rule 29 (basic_type_specifier)


state 139

   31 array_type_specifier: basic_type_specifier . LB RB
   34 type_specifier: basic_type_specifier .

    LB  shift, and go to state 218

    $default  reduce using rule 34 (type_specifier)


state 140

   36 type_specifier: identifier_type_specifier .

    $default  reduce using rule 36 (type_specifier)


state 141

   33 array_type_specifier: array_type_specifier . LB RB
   35 type_specifier: array_type_specifier .

    LB  shift, and go to state 219

    $default  reduce using rule 35 (type_specifier)


state 142

  257 const_definition: CONST type_specifier . IDENTIFIER CR

    IDENTIFIER  shift, and go to state 220


state 143

   46 function_definition: FUNCTION IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   47                    | FUNCTION IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause myblock

    LP  shift, and go to state 221


state 144

  188 declaration_statement: DIM IDENTIFIER . AS type_specifier CR
  189                      | DIM IDENTIFIER . AS type_specifier ASSIGN_T expression CR

    AS  shift, and go to state 222


state 145

   42 function_declaration: DECLARE FUNCTION . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   43                     | DECLARE FUNCTION . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 223


state 146

   44 function_declaration: DECLARE BSUB . IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   45                     | DECLARE BSUB . IDENTIFIER LP apostrophe RP throws_clause CR

    IDENTIFIER  shift, and go to state 224


state 147

   48 function_definition: BSUB IDENTIFIER . LP parameter_list apostrophe RP throws_clause myblock
   49                    | BSUB IDENTIFIER . LP apostrophe RP throws_clause myblock

    LP  shift, and go to state 225


state 148

   58 expression: expression COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    assignment_expression      go to state 226
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 149

  137 statement: expression CR .

    $default  reduce using rule 137 (statement)


state 150

   68 logical_or_expression: logical_or_expression LOGICAL_OR . logical_and_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    logical_and_expression     go to state 227
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 116
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 151

   70 logical_and_expression: logical_and_expression LOGICAL_AND . equality_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    equality_expression        go to state 228
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 116
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 152

   72 equality_expression: equality_expression EQ . relational_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    relational_expression      go to state 229
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 116
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 153

   73 equality_expression: equality_expression NE . relational_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    relational_expression      go to state 230
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 116
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 154

   75 relational_expression: relational_expression GT . additive_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    additive_expression        go to state 231
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 116
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 155

   76 relational_expression: relational_expression GE . additive_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    additive_expression        go to state 232
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 116
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 156

   77 relational_expression: relational_expression LT . additive_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    additive_expression        go to state 233
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 116
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 157

   78 relational_expression: relational_expression LE . additive_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    additive_expression        go to state 234
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 116
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 158

   80 additive_expression: additive_expression ADD . multiplicative_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    multiplicative_expression  go to state 235
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 116
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 159

   81 additive_expression: additive_expression SUB . multiplicative_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    multiplicative_expression  go to state 236
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 116
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 160

   83 multiplicative_expression: multiplicative_expression MUL . unary_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    unary_expression      go to state 237
    postfix_expression    go to state 68
    primary_expression    go to state 116
    primary_no_new_array  go to state 70
    array_literal         go to state 71
    array_creation        go to state 72


state 161

   84 multiplicative_expression: multiplicative_expression DIV . unary_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    unary_expression      go to state 238
    postfix_expression    go to state 68
    primary_expression    go to state 116
    primary_no_new_array  go to state 70
    array_literal         go to state 71
    array_creation        go to state 72


state 162

   85 multiplicative_expression: multiplicative_expression MOD . unary_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    unary_expression      go to state 239
    postfix_expression    go to state 68
    primary_expression    go to state 116
    primary_no_new_array  go to state 70
    array_literal         go to state 71
    array_creation        go to state 72


state 163

   86 multiplicative_expression: multiplicative_expression BIT_AND . unary_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    unary_expression      go to state 240
    postfix_expression    go to state 68
    primary_expression    go to state 116
    primary_no_new_array  go to state 70
    array_literal         go to state 71
    array_creation        go to state 72


state 164

   87 multiplicative_expression: multiplicative_expression BIT_OR . unary_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    unary_expression      go to state 241
    postfix_expression    go to state 68
    primary_expression    go to state 116
    primary_no_new_array  go to state 70
    array_literal         go to state 71
    array_creation        go to state 72


state 165

   88 multiplicative_expression: multiplicative_expression BIT_XOR . unary_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    unary_expression      go to state 242
    postfix_expression    go to state 68
    primary_expression    go to state 116
    primary_no_new_array  go to state 70
    array_literal         go to state 71
    array_creation        go to state 72


state 166

  104 primary_no_new_array: primary_expression LP . argument_list RP
  105                     | primary_expression LP . RP

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    RP              shift, and go to state 243
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    argument_list              go to state 244
    assignment_expression      go to state 245
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 167

   61 assignment_operator: ASSIGN_T .

    $default  reduce using rule 61 (assignment_operator)


state 168

  103 primary_no_new_array: primary_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 246


state 169

   62 assignment_operator: ADD_ASSIGN_T .

    $default  reduce using rule 62 (assignment_operator)


state 170

   63 assignment_operator: SUB_ASSIGN_T .

    $default  reduce using rule 63 (assignment_operator)


state 171

   64 assignment_operator: MUL_ASSIGN_T .

    $default  reduce using rule 64 (assignment_operator)


state 172

   65 assignment_operator: DIV_ASSIGN_T .

    $default  reduce using rule 65 (assignment_operator)


state 173

   66 assignment_operator: MOD_ASSIGN_T .

    $default  reduce using rule 66 (assignment_operator)


state 174

   94 postfix_expression: primary_expression INCREMENT .

    $default  reduce using rule 94 (postfix_expression)


state 175

   95 postfix_expression: primary_expression DECREMENT .

    $default  reduce using rule 95 (postfix_expression)


state 176

   96 postfix_expression: primary_expression INSTANCEOF . type_specifier

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 248


state 177

  107 primary_no_new_array: primary_expression DOWN_CAST_BEGIN . type_specifier DOWN_CAST_END

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 249


state 178

   60 assignment_expression: primary_expression assignment_operator . assignment_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    assignment_expression      go to state 250
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 179

  101 primary_no_new_array: primary_no_new_array LB . expression RB

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 251
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 180

  168 while_statement: label_opt WHILE . expression myblock

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 252
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 181

  170 do_while_statement: label_opt DO_T . block WHILE LP expression RP CR

    LC  shift, and go to state 253

    block  go to state 254


state 182

  169 for_statement: label_opt FOR . expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    $default  reduce using rule 172 (expression_opt)

    expression                 go to state 107
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72
    expression_opt             go to state 255


state 183

  171 foreach_statement: label_opt FOREACH . LP IDENTIFIER COLON expression RP block

    LP  shift, and go to state 256


state 184

  204 class_or_member_modifier_list: class_or_member_modifier_list class_or_member_modifier .

    $default  reduce using rule 204 (class_or_member_modifier_list)


state 185

  198 class_definition: class_or_member_modifier_list class_or_interface . IDENTIFIER extends CR $@5 member_declaration_list END
  202                 | class_or_member_modifier_list class_or_interface . IDENTIFIER extends CR $@7 END

    IDENTIFIER  shift, and go to state 257


state 186

  196 class_definition: class_or_interface IDENTIFIER . extends CR $@4 member_declaration_list END
  200                 | class_or_interface IDENTIFIER . extends CR $@6 END

    COLON  shift, and go to state 258

    $default  reduce using rule 211 (extends)

    extends  go to state 259


state 187

   12 package_name: package_name DOT IDENTIFIER .

    $default  reduce using rule 12 (package_name)


state 188

   15 rename_declaration: RENAME package_name IDENTIFIER CR .

    $default  reduce using rule 15 (rename_declaration)


state 189

   38 lib_function: LIB IDENTIFIER $@1 CR . lib_function_declaration_list END

    $default  reduce using rule 39 (lib_function_declaration_list)

    lib_function_declaration_list  go to state 260


state 190

   58 expression: expression . COMMA assignment_expression
  102 primary_no_new_array: IDENTIFIER LB expression . RB

    RB     shift, and go to state 261
    COMMA  shift, and go to state 148


state 191

  151 if_statement: IF expression THEN . myblock
  152             | IF expression THEN . myblock ELSE myblock
  153             | IF expression THEN . myblock elsif_list
  154             | IF expression THEN . myblock elsif_list ELSE myblock

    CR  shift, and go to state 119

    myblock  go to state 262


state 192

  160 switch_statement: SWITCH expression CR . case_list default_opt

    CASE  shift, and go to state 263

    case_list  go to state 264
    one_case   go to state 265


state 193

  174 return_statement: RETURN_T expression_opt CR .

    $default  reduce using rule 174 (return_statement)


state 194

  177 break_statement: BREAK identifier_opt CR .

    $default  reduce using rule 177 (break_statement)


state 195

  178 continue_statement: CONTINUE identifier_opt CR .

    $default  reduce using rule 178 (continue_statement)


state 196

  106 primary_no_new_array: LP expression RP .

    $default  reduce using rule 106 (primary_no_new_array)


state 197

  123 array_literal: LC expression_list RC .

    $default  reduce using rule 123 (array_literal)


state 198

  124 array_literal: LC expression_list COMMA . RC
  136 expression_list: expression_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    RC              shift, and go to state 266
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    assignment_expression      go to state 267
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 199

  260 myblock: CR END .

    $default  reduce using rule 260 (myblock)


state 200

  259 myblock: CR @8 . statement_list END

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 20
    AUTOVAR         shift, and go to state 21
    IF              shift, and go to state 22
    SWITCH          shift, and go to state 23
    RETURN_T        shift, and go to state 24
    BREAK           shift, and go to state 25
    CONTINUE        shift, and go to state 26
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    TRY             shift, and go to state 35
    THROW           shift, and go to state 36
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46
    FINAL           shift, and go to state 48
    DIM             shift, and go to state 52
    CR              shift, and go to state 53

    $default  reduce using rule 158 (label_opt)

    statement_list             go to state 268
    expression                 go to state 59
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72
    statement                  go to state 269
    if_statement               go to state 74
    label_opt                  go to state 75
    switch_statement           go to state 76
    while_statement            go to state 77
    for_statement              go to state 78
    do_while_statement         go to state 79
    foreach_statement          go to state 80
    return_statement           go to state 81
    break_statement            go to state 82
    continue_statement         go to state 83
    try_statement              go to state 84
    throw_statement            go to state 85
    declaration_statement      go to state 86


state 201

  185 catch_clause: CATCH . @2 type_specifier IDENTIFIER myblock

    $default  reduce using rule 184 (@2)

    @2  go to state 270


state 202

  180 try_statement: TRY myblock FINALLY . block

    LC  shift, and go to state 253

    block  go to state 271


state 203

  179 try_statement: TRY myblock catch_list . FINALLY myblock
  181              | TRY myblock catch_list .
  183 catch_list: catch_list . catch_clause

    CATCH    shift, and go to state 201
    FINALLY  shift, and go to state 272

    $default  reduce using rule 181 (try_statement)

    catch_clause  go to state 273


state 204

  182 catch_list: catch_clause .

    $default  reduce using rule 182 (catch_list)


state 205

  186 throw_statement: THROW expression CR .

    $default  reduce using rule 186 (throw_statement)


state 206

  119 primary_no_new_array: NEW IDENTIFIER LP . RP
  120                     | NEW IDENTIFIER LP . argument_list RP

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    RP              shift, and go to state 274
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    argument_list              go to state 275
    assignment_expression      go to state 245
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 207

  121 primary_no_new_array: NEW IDENTIFIER DOT . IDENTIFIER LP RP
  122                     | NEW IDENTIFIER DOT . IDENTIFIER LP argument_list RP

    IDENTIFIER  shift, and go to state 276


state 208

  118 primary_no_new_array: NEW DELEGATE LP . RP

    RP  shift, and go to state 277


state 209

  131 dimension_expression: LB . expression RB

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 278
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 210

  125 array_creation: NEW basic_type_specifier dimension_expression_list .
  126               | NEW basic_type_specifier dimension_expression_list . dimension_list
  130 dimension_expression_list: dimension_expression_list . dimension_expression

    LB  shift, and go to state 279

    $default  reduce using rule 125 (array_creation)

    dimension_expression  go to state 280
    dimension_list        go to state 281


state 211

  129 dimension_expression_list: dimension_expression .

    $default  reduce using rule 129 (dimension_expression_list)


state 212

  127 array_creation: NEW identifier_type_specifier dimension_expression_list .
  128               | NEW identifier_type_specifier dimension_expression_list . dimension_list
  130 dimension_expression_list: dimension_expression_list . dimension_expression

    LB  shift, and go to state 279

    $default  reduce using rule 127 (array_creation)

    dimension_expression  go to state 280
    dimension_list        go to state 282


state 213

  250 delegate_definition: DELEGATE IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause CR
  251                    | DELEGATE IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 283
    COMMA       shift, and go to state 284

    $default  reduce using rule 231 (apostrophe)

    parameter_list  go to state 285
    apostrophe      go to state 286


state 214

  190 declaration_statement: FINAL IDENTIFIER AS . type_specifier CR
  191                      | FINAL IDENTIFIER AS . type_specifier ASSIGN_T expression CR

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 287


state 215

  252 enum_definition: ENUM IDENTIFIER LC . enumerator_list RC
  253                | ENUM IDENTIFIER LC . enumerator_list COMMA RC

    IDENTIFIER  shift, and go to state 288

    enumerator_list  go to state 289


state 216

   32 array_type_specifier: IDENTIFIER LB . RB

    RB  shift, and go to state 290


state 217

  256 const_definition: CONST IDENTIFIER ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 291
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 218

   31 array_type_specifier: basic_type_specifier LB . RB

    RB  shift, and go to state 292


state 219

   33 array_type_specifier: array_type_specifier LB . RB

    RB  shift, and go to state 293


state 220

  257 const_definition: CONST type_specifier IDENTIFIER . CR

    CR  shift, and go to state 294


state 221

   46 function_definition: FUNCTION IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause myblock
   47                    | FUNCTION IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 283
    COMMA       shift, and go to state 284

    $default  reduce using rule 231 (apostrophe)

    parameter_list  go to state 295
    apostrophe      go to state 296


state 222

  188 declaration_statement: DIM IDENTIFIER AS . type_specifier CR
  189                      | DIM IDENTIFIER AS . type_specifier ASSIGN_T expression CR

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 297


state 223

   42 function_declaration: DECLARE FUNCTION IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   43                     | DECLARE FUNCTION IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause CR

    LP  shift, and go to state 298


state 224

   44 function_declaration: DECLARE BSUB IDENTIFIER . LP parameter_list apostrophe RP throws_clause CR
   45                     | DECLARE BSUB IDENTIFIER . LP apostrophe RP throws_clause CR

    LP  shift, and go to state 299


state 225

   48 function_definition: BSUB IDENTIFIER LP . parameter_list apostrophe RP throws_clause myblock
   49                    | BSUB IDENTIFIER LP . apostrophe RP throws_clause myblock

    IDENTIFIER  shift, and go to state 283
    COMMA       shift, and go to state 284

    $default  reduce using rule 231 (apostrophe)

    parameter_list  go to state 300
    apostrophe      go to state 301


state 226

   58 expression: expression COMMA assignment_expression .

    $default  reduce using rule 58 (expression)


state 227

   68 logical_or_expression: logical_or_expression LOGICAL_OR logical_and_expression .
   70 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 151

    $default  reduce using rule 68 (logical_or_expression)


state 228

   70 logical_and_expression: logical_and_expression LOGICAL_AND equality_expression .
   72 equality_expression: equality_expression . EQ relational_expression
   73                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 152
    NE  shift, and go to state 153

    $default  reduce using rule 70 (logical_and_expression)


state 229

   72 equality_expression: equality_expression EQ relational_expression .
   75 relational_expression: relational_expression . GT additive_expression
   76                      | relational_expression . GE additive_expression
   77                      | relational_expression . LT additive_expression
   78                      | relational_expression . LE additive_expression

    GT  shift, and go to state 154
    GE  shift, and go to state 155
    LT  shift, and go to state 156
    LE  shift, and go to state 157

    $default  reduce using rule 72 (equality_expression)


state 230

   73 equality_expression: equality_expression NE relational_expression .
   75 relational_expression: relational_expression . GT additive_expression
   76                      | relational_expression . GE additive_expression
   77                      | relational_expression . LT additive_expression
   78                      | relational_expression . LE additive_expression

    GT  shift, and go to state 154
    GE  shift, and go to state 155
    LT  shift, and go to state 156
    LE  shift, and go to state 157

    $default  reduce using rule 73 (equality_expression)


state 231

   75 relational_expression: relational_expression GT additive_expression .
   80 additive_expression: additive_expression . ADD multiplicative_expression
   81                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 158
    SUB  shift, and go to state 159

    $default  reduce using rule 75 (relational_expression)


state 232

   76 relational_expression: relational_expression GE additive_expression .
   80 additive_expression: additive_expression . ADD multiplicative_expression
   81                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 158
    SUB  shift, and go to state 159

    $default  reduce using rule 76 (relational_expression)


state 233

   77 relational_expression: relational_expression LT additive_expression .
   80 additive_expression: additive_expression . ADD multiplicative_expression
   81                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 158
    SUB  shift, and go to state 159

    $default  reduce using rule 77 (relational_expression)


state 234

   78 relational_expression: relational_expression LE additive_expression .
   80 additive_expression: additive_expression . ADD multiplicative_expression
   81                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 158
    SUB  shift, and go to state 159

    $default  reduce using rule 78 (relational_expression)


state 235

   80 additive_expression: additive_expression ADD multiplicative_expression .
   83 multiplicative_expression: multiplicative_expression . MUL unary_expression
   84                          | multiplicative_expression . DIV unary_expression
   85                          | multiplicative_expression . MOD unary_expression
   86                          | multiplicative_expression . BIT_AND unary_expression
   87                          | multiplicative_expression . BIT_OR unary_expression
   88                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 160
    DIV      shift, and go to state 161
    MOD      shift, and go to state 162
    BIT_AND  shift, and go to state 163
    BIT_OR   shift, and go to state 164
    BIT_XOR  shift, and go to state 165

    $default  reduce using rule 80 (additive_expression)


state 236

   81 additive_expression: additive_expression SUB multiplicative_expression .
   83 multiplicative_expression: multiplicative_expression . MUL unary_expression
   84                          | multiplicative_expression . DIV unary_expression
   85                          | multiplicative_expression . MOD unary_expression
   86                          | multiplicative_expression . BIT_AND unary_expression
   87                          | multiplicative_expression . BIT_OR unary_expression
   88                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 160
    DIV      shift, and go to state 161
    MOD      shift, and go to state 162
    BIT_AND  shift, and go to state 163
    BIT_OR   shift, and go to state 164
    BIT_XOR  shift, and go to state 165

    $default  reduce using rule 81 (additive_expression)


state 237

   83 multiplicative_expression: multiplicative_expression MUL unary_expression .

    $default  reduce using rule 83 (multiplicative_expression)


state 238

   84 multiplicative_expression: multiplicative_expression DIV unary_expression .

    $default  reduce using rule 84 (multiplicative_expression)


state 239

   85 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 85 (multiplicative_expression)


state 240

   86 multiplicative_expression: multiplicative_expression BIT_AND unary_expression .

    $default  reduce using rule 86 (multiplicative_expression)


state 241

   87 multiplicative_expression: multiplicative_expression BIT_OR unary_expression .

    $default  reduce using rule 87 (multiplicative_expression)


state 242

   88 multiplicative_expression: multiplicative_expression BIT_XOR unary_expression .

    $default  reduce using rule 88 (multiplicative_expression)


state 243

  105 primary_no_new_array: primary_expression LP RP .

    $default  reduce using rule 105 (primary_no_new_array)


state 244

   54 argument_list: argument_list . COMMA assignment_expression
  104 primary_no_new_array: primary_expression LP argument_list . RP

    RP     shift, and go to state 302
    COMMA  shift, and go to state 303


state 245

   53 argument_list: assignment_expression .

    $default  reduce using rule 53 (argument_list)


state 246

  103 primary_no_new_array: primary_expression DOT IDENTIFIER .

    $default  reduce using rule 103 (primary_no_new_array)


state 247

   30 identifier_type_specifier: IDENTIFIER .
   32 array_type_specifier: IDENTIFIER . LB RB

    LB  shift, and go to state 216

    $default  reduce using rule 30 (identifier_type_specifier)


state 248

   96 postfix_expression: primary_expression INSTANCEOF type_specifier .

    $default  reduce using rule 96 (postfix_expression)


state 249

  107 primary_no_new_array: primary_expression DOWN_CAST_BEGIN type_specifier . DOWN_CAST_END

    DOWN_CAST_END  shift, and go to state 304


state 250

   60 assignment_expression: primary_expression assignment_operator assignment_expression .

    $default  reduce using rule 60 (assignment_expression)


state 251

   58 expression: expression . COMMA assignment_expression
  101 primary_no_new_array: primary_no_new_array LB expression . RB

    RB     shift, and go to state 305
    COMMA  shift, and go to state 148


state 252

   58 expression: expression . COMMA assignment_expression
  168 while_statement: label_opt WHILE expression . myblock

    COMMA  shift, and go to state 148
    CR     shift, and go to state 119

    myblock  go to state 306


state 253

  193 block: LC . @3 statement_list RC
  194      | LC . RC

    RC  shift, and go to state 307

    $default  reduce using rule 192 (@3)

    @3  go to state 308


state 254

  170 do_while_statement: label_opt DO_T block . WHILE LP expression RP CR

    WHILE  shift, and go to state 309


state 255

  169 for_statement: label_opt FOR expression_opt . SEMICOLON expression_opt SEMICOLON expression_opt myblock

    SEMICOLON  shift, and go to state 310


state 256

  171 foreach_statement: label_opt FOREACH LP . IDENTIFIER COLON expression RP block

    IDENTIFIER  shift, and go to state 311


state 257

  198 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER . extends CR $@5 member_declaration_list END
  202                 | class_or_member_modifier_list class_or_interface IDENTIFIER . extends CR $@7 END

    COLON  shift, and go to state 258

    $default  reduce using rule 211 (extends)

    extends  go to state 312


state 258

  212 extends: COLON . extends_list

    IDENTIFIER  shift, and go to state 313

    extends_list  go to state 314


state 259

  196 class_definition: class_or_interface IDENTIFIER extends . CR $@4 member_declaration_list END
  200                 | class_or_interface IDENTIFIER extends . CR $@6 END

    CR  shift, and go to state 315


state 260

   38 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list . END
   40 lib_function_declaration_list: lib_function_declaration_list . function_declaration
   41                              | lib_function_declaration_list . class_definition

    CLASS_T      shift, and go to state 38
    INTERFACE_T  shift, and go to state 39
    PUBLIC_T     shift, and go to state 40
    PRIVATE_T    shift, and go to state 41
    VIRTUAL_T    shift, and go to state 42
    OVERRIDE_T   shift, and go to state 43
    ABSTRACT_T   shift, and go to state 44
    END          shift, and go to state 316
    DECLARE      shift, and go to state 54

    function_declaration           go to state 317
    class_definition               go to state 318
    class_or_member_modifier_list  go to state 88
    class_or_member_modifier       go to state 89
    class_or_interface             go to state 90
    access_modifier                go to state 91


state 261

  102 primary_no_new_array: IDENTIFIER LB expression RB .

    $default  reduce using rule 102 (primary_no_new_array)


state 262

  151 if_statement: IF expression THEN myblock .
  152             | IF expression THEN myblock . ELSE myblock
  153             | IF expression THEN myblock . elsif_list
  154             | IF expression THEN myblock . elsif_list ELSE myblock

    ELSE   shift, and go to state 319
    ELSIF  shift, and go to state 320

    $default  reduce using rule 151 (if_statement)

    elsif_list  go to state 321
    elsif       go to state 322


state 263

  163 one_case: CASE . case_expression_list myblock

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    $default  reduce using rule 134 (expression_list)

    assignment_expression      go to state 323
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72
    expression_list            go to state 324
    case_expression_list       go to state 325


state 264

  160 switch_statement: SWITCH expression CR case_list . default_opt
  162 case_list: case_list . one_case

    CASE       shift, and go to state 263
    DEFAULT_T  shift, and go to state 326

    $default  reduce using rule 164 (default_opt)

    one_case     go to state 327
    default_opt  go to state 328


state 265

  161 case_list: one_case .

    $default  reduce using rule 161 (case_list)


state 266

  124 array_literal: LC expression_list COMMA RC .

    $default  reduce using rule 124 (array_literal)


state 267

  136 expression_list: expression_list COMMA assignment_expression .

    $default  reduce using rule 136 (expression_list)


state 268

   56 statement_list: statement_list . statement
  259 myblock: CR @8 statement_list . END

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 20
    AUTOVAR         shift, and go to state 21
    IF              shift, and go to state 22
    SWITCH          shift, and go to state 23
    RETURN_T        shift, and go to state 24
    BREAK           shift, and go to state 25
    CONTINUE        shift, and go to state 26
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    TRY             shift, and go to state 35
    THROW           shift, and go to state 36
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46
    FINAL           shift, and go to state 48
    DIM             shift, and go to state 52
    END             shift, and go to state 329
    CR              shift, and go to state 53

    $default  reduce using rule 158 (label_opt)

    expression                 go to state 59
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72
    statement                  go to state 330
    if_statement               go to state 74
    label_opt                  go to state 75
    switch_statement           go to state 76
    while_statement            go to state 77
    for_statement              go to state 78
    do_while_statement         go to state 79
    foreach_statement          go to state 80
    return_statement           go to state 81
    break_statement            go to state 82
    continue_statement         go to state 83
    try_statement              go to state 84
    throw_statement            go to state 85
    declaration_statement      go to state 86


state 269

   55 statement_list: statement .

    $default  reduce using rule 55 (statement_list)


state 270

  185 catch_clause: CATCH @2 . type_specifier IDENTIFIER myblock

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 331


state 271

  180 try_statement: TRY myblock FINALLY block .

    $default  reduce using rule 180 (try_statement)


state 272

  179 try_statement: TRY myblock catch_list FINALLY . myblock

    CR  shift, and go to state 119

    myblock  go to state 332


state 273

  183 catch_list: catch_list catch_clause .

    $default  reduce using rule 183 (catch_list)


state 274

  119 primary_no_new_array: NEW IDENTIFIER LP RP .

    $default  reduce using rule 119 (primary_no_new_array)


state 275

   54 argument_list: argument_list . COMMA assignment_expression
  120 primary_no_new_array: NEW IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 333
    COMMA  shift, and go to state 303


state 276

  121 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER . LP RP
  122                     | NEW IDENTIFIER DOT IDENTIFIER . LP argument_list RP

    LP  shift, and go to state 334


state 277

  118 primary_no_new_array: NEW DELEGATE LP RP .

    $default  reduce using rule 118 (primary_no_new_array)


state 278

   58 expression: expression . COMMA assignment_expression
  131 dimension_expression: LB expression . RB

    RB     shift, and go to state 335
    COMMA  shift, and go to state 148


state 279

  131 dimension_expression: LB . expression RB
  132 dimension_list: LB . RB

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    RB              shift, and go to state 336
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 278
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 280

  130 dimension_expression_list: dimension_expression_list dimension_expression .

    $default  reduce using rule 130 (dimension_expression_list)


state 281

  126 array_creation: NEW basic_type_specifier dimension_expression_list dimension_list .
  133 dimension_list: dimension_list . LB RB

    LB  shift, and go to state 337

    $default  reduce using rule 126 (array_creation)


state 282

  128 array_creation: NEW identifier_type_specifier dimension_expression_list dimension_list .
  133 dimension_list: dimension_list . LB RB

    LB  shift, and go to state 337

    $default  reduce using rule 128 (array_creation)


state 283

   51 parameter_list: IDENTIFIER . AS type_specifier

    AS  shift, and go to state 338


state 284

  232 apostrophe: COMMA . APOSTROPHE

    APOSTROPHE  shift, and go to state 339


state 285

   52 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  250 delegate_definition: DELEGATE IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause CR

    COMMA  shift, and go to state 340

    $default  reduce using rule 231 (apostrophe)

    apostrophe  go to state 341


state 286

  251 delegate_definition: DELEGATE IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 342


state 287

  190 declaration_statement: FINAL IDENTIFIER AS type_specifier . CR
  191                      | FINAL IDENTIFIER AS type_specifier . ASSIGN_T expression CR

    ASSIGN_T  shift, and go to state 343
    CR        shift, and go to state 344


state 288

  254 enumerator_list: IDENTIFIER .

    $default  reduce using rule 254 (enumerator_list)


state 289

  252 enum_definition: ENUM IDENTIFIER LC enumerator_list . RC
  253                | ENUM IDENTIFIER LC enumerator_list . COMMA RC
  255 enumerator_list: enumerator_list . COMMA IDENTIFIER

    RC     shift, and go to state 345
    COMMA  shift, and go to state 346


state 290

   32 array_type_specifier: IDENTIFIER LB RB .

    $default  reduce using rule 32 (array_type_specifier)


state 291

   58 expression: expression . COMMA assignment_expression
  256 const_definition: CONST IDENTIFIER ASSIGN_T expression . CR

    COMMA  shift, and go to state 148
    CR     shift, and go to state 347


state 292

   31 array_type_specifier: basic_type_specifier LB RB .

    $default  reduce using rule 31 (array_type_specifier)


state 293

   33 array_type_specifier: array_type_specifier LB RB .

    $default  reduce using rule 33 (array_type_specifier)


state 294

  257 const_definition: CONST type_specifier IDENTIFIER CR .

    $default  reduce using rule 257 (const_definition)


state 295

   46 function_definition: FUNCTION IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause myblock
   52 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 340

    $default  reduce using rule 231 (apostrophe)

    apostrophe  go to state 348


state 296

   47 function_definition: FUNCTION IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause myblock

    RP  shift, and go to state 349


state 297

  188 declaration_statement: DIM IDENTIFIER AS type_specifier . CR
  189                      | DIM IDENTIFIER AS type_specifier . ASSIGN_T expression CR

    ASSIGN_T  shift, and go to state 350
    CR        shift, and go to state 351


state 298

   42 function_declaration: DECLARE FUNCTION IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause CR
   43                     | DECLARE FUNCTION IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 283
    COMMA       shift, and go to state 284

    $default  reduce using rule 231 (apostrophe)

    parameter_list  go to state 352
    apostrophe      go to state 353


state 299

   44 function_declaration: DECLARE BSUB IDENTIFIER LP . parameter_list apostrophe RP throws_clause CR
   45                     | DECLARE BSUB IDENTIFIER LP . apostrophe RP throws_clause CR

    IDENTIFIER  shift, and go to state 283
    COMMA       shift, and go to state 284

    $default  reduce using rule 231 (apostrophe)

    parameter_list  go to state 354
    apostrophe      go to state 355


state 300

   48 function_definition: BSUB IDENTIFIER LP parameter_list . apostrophe RP throws_clause myblock
   52 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 340

    $default  reduce using rule 231 (apostrophe)

    apostrophe  go to state 356


state 301

   49 function_definition: BSUB IDENTIFIER LP apostrophe . RP throws_clause myblock

    RP  shift, and go to state 357


state 302

  104 primary_no_new_array: primary_expression LP argument_list RP .

    $default  reduce using rule 104 (primary_no_new_array)


state 303

   54 argument_list: argument_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    assignment_expression      go to state 358
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 304

  107 primary_no_new_array: primary_expression DOWN_CAST_BEGIN type_specifier DOWN_CAST_END .

    $default  reduce using rule 107 (primary_no_new_array)


state 305

  101 primary_no_new_array: primary_no_new_array LB expression RB .

    $default  reduce using rule 101 (primary_no_new_array)


state 306

  168 while_statement: label_opt WHILE expression myblock .

    $default  reduce using rule 168 (while_statement)


state 307

  194 block: LC RC .

    $default  reduce using rule 194 (block)


state 308

  193 block: LC @3 . statement_list RC

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 20
    AUTOVAR         shift, and go to state 21
    IF              shift, and go to state 22
    SWITCH          shift, and go to state 23
    RETURN_T        shift, and go to state 24
    BREAK           shift, and go to state 25
    CONTINUE        shift, and go to state 26
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    TRY             shift, and go to state 35
    THROW           shift, and go to state 36
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46
    FINAL           shift, and go to state 48
    DIM             shift, and go to state 52
    CR              shift, and go to state 53

    $default  reduce using rule 158 (label_opt)

    statement_list             go to state 359
    expression                 go to state 59
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72
    statement                  go to state 269
    if_statement               go to state 74
    label_opt                  go to state 75
    switch_statement           go to state 76
    while_statement            go to state 77
    for_statement              go to state 78
    do_while_statement         go to state 79
    foreach_statement          go to state 80
    return_statement           go to state 81
    break_statement            go to state 82
    continue_statement         go to state 83
    try_statement              go to state 84
    throw_statement            go to state 85
    declaration_statement      go to state 86


state 309

  170 do_while_statement: label_opt DO_T block WHILE . LP expression RP CR

    LP  shift, and go to state 360


state 310

  169 for_statement: label_opt FOR expression_opt SEMICOLON . expression_opt SEMICOLON expression_opt myblock

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    $default  reduce using rule 172 (expression_opt)

    expression                 go to state 107
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72
    expression_opt             go to state 361


state 311

  171 foreach_statement: label_opt FOREACH LP IDENTIFIER . COLON expression RP block

    COLON  shift, and go to state 362


state 312

  198 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER extends . CR $@5 member_declaration_list END
  202                 | class_or_member_modifier_list class_or_interface IDENTIFIER extends . CR $@7 END

    CR  shift, and go to state 363


state 313

  213 extends_list: IDENTIFIER .

    $default  reduce using rule 213 (extends_list)


state 314

  212 extends: COLON extends_list .
  214 extends_list: extends_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 364

    $default  reduce using rule 212 (extends)


state 315

  196 class_definition: class_or_interface IDENTIFIER extends CR . $@4 member_declaration_list END
  200                 | class_or_interface IDENTIFIER extends CR . $@6 END

    END       reduce using rule 199 ($@6)
    $default  reduce using rule 195 ($@4)

    $@4  go to state 365
    $@6  go to state 366


state 316

   38 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list END .

    $default  reduce using rule 38 (lib_function)


state 317

   40 lib_function_declaration_list: lib_function_declaration_list function_declaration .

    $default  reduce using rule 40 (lib_function_declaration_list)


state 318

   41 lib_function_declaration_list: lib_function_declaration_list class_definition .

    $default  reduce using rule 41 (lib_function_declaration_list)


state 319

  152 if_statement: IF expression THEN myblock ELSE . myblock

    CR  shift, and go to state 119

    myblock  go to state 367


state 320

  157 elsif: ELSIF . expression THEN myblock

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 368
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 321

  153 if_statement: IF expression THEN myblock elsif_list .
  154             | IF expression THEN myblock elsif_list . ELSE myblock
  156 elsif_list: elsif_list . elsif

    ELSE   shift, and go to state 369
    ELSIF  shift, and go to state 320

    $default  reduce using rule 153 (if_statement)

    elsif  go to state 370


state 322

  155 elsif_list: elsif .

    $default  reduce using rule 155 (elsif_list)


state 323

  135 expression_list: assignment_expression .
  166 case_expression_list: assignment_expression .

    CR        reduce using rule 166 (case_expression_list)
    $default  reduce using rule 135 (expression_list)


state 324

  136 expression_list: expression_list . COMMA assignment_expression
  167 case_expression_list: expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 371


state 325

  163 one_case: CASE case_expression_list . myblock

    CR  shift, and go to state 119

    myblock  go to state 372


state 326

  165 default_opt: DEFAULT_T . myblock

    CR  shift, and go to state 119

    myblock  go to state 373


state 327

  162 case_list: case_list one_case .

    $default  reduce using rule 162 (case_list)


state 328

  160 switch_statement: SWITCH expression CR case_list default_opt .

    $default  reduce using rule 160 (switch_statement)


state 329

  259 myblock: CR @8 statement_list END .

    $default  reduce using rule 259 (myblock)


state 330

   56 statement_list: statement_list statement .

    $default  reduce using rule 56 (statement_list)


state 331

  185 catch_clause: CATCH @2 type_specifier . IDENTIFIER myblock

    IDENTIFIER  shift, and go to state 374


state 332

  179 try_statement: TRY myblock catch_list FINALLY myblock .

    $default  reduce using rule 179 (try_statement)


state 333

  120 primary_no_new_array: NEW IDENTIFIER LP argument_list RP .

    $default  reduce using rule 120 (primary_no_new_array)


state 334

  121 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP . RP
  122                     | NEW IDENTIFIER DOT IDENTIFIER LP . argument_list RP

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    RP              shift, and go to state 375
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    argument_list              go to state 376
    assignment_expression      go to state 245
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 335

  131 dimension_expression: LB expression RB .

    $default  reduce using rule 131 (dimension_expression)


state 336

  132 dimension_list: LB RB .

    $default  reduce using rule 132 (dimension_list)


state 337

  133 dimension_list: dimension_list LB . RB

    RB  shift, and go to state 377


state 338

   51 parameter_list: IDENTIFIER AS . type_specifier

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 378


state 339

  232 apostrophe: COMMA APOSTROPHE .

    $default  reduce using rule 232 (apostrophe)


state 340

   52 parameter_list: parameter_list COMMA . IDENTIFIER AS type_specifier
  232 apostrophe: COMMA . APOSTROPHE

    IDENTIFIER  shift, and go to state 379
    APOSTROPHE  shift, and go to state 339


state 341

  250 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 380


state 342

  251 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 381


state 343

  191 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 382
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 344

  190 declaration_statement: FINAL IDENTIFIER AS type_specifier CR .

    $default  reduce using rule 190 (declaration_statement)


state 345

  252 enum_definition: ENUM IDENTIFIER LC enumerator_list RC .

    $default  reduce using rule 252 (enum_definition)


state 346

  253 enum_definition: ENUM IDENTIFIER LC enumerator_list COMMA . RC
  255 enumerator_list: enumerator_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 383
    RC          shift, and go to state 384


state 347

  256 const_definition: CONST IDENTIFIER ASSIGN_T expression CR .

    $default  reduce using rule 256 (const_definition)


state 348

   46 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause myblock

    RP  shift, and go to state 385


state 349

   47 function_definition: FUNCTION IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 386


state 350

  189 declaration_statement: DIM IDENTIFIER AS type_specifier ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 387
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 351

  188 declaration_statement: DIM IDENTIFIER AS type_specifier CR .

    $default  reduce using rule 188 (declaration_statement)


state 352

   42 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause CR
   52 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 340

    $default  reduce using rule 231 (apostrophe)

    apostrophe  go to state 388


state 353

   43 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 389


state 354

   44 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list . apostrophe RP throws_clause CR
   52 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 340

    $default  reduce using rule 231 (apostrophe)

    apostrophe  go to state 390


state 355

   45 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe . RP throws_clause CR

    RP  shift, and go to state 391


state 356

   48 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe . RP throws_clause myblock

    RP  shift, and go to state 392


state 357

   49 function_definition: BSUB IDENTIFIER LP apostrophe RP . throws_clause myblock

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 394


state 358

   54 argument_list: argument_list COMMA assignment_expression .

    $default  reduce using rule 54 (argument_list)


state 359

   56 statement_list: statement_list . statement
  193 block: LC @3 statement_list . RC

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 20
    AUTOVAR         shift, and go to state 21
    IF              shift, and go to state 22
    SWITCH          shift, and go to state 23
    RETURN_T        shift, and go to state 24
    BREAK           shift, and go to state 25
    CONTINUE        shift, and go to state 26
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    RC              shift, and go to state 395
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    TRY             shift, and go to state 35
    THROW           shift, and go to state 36
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46
    FINAL           shift, and go to state 48
    DIM             shift, and go to state 52
    CR              shift, and go to state 53

    $default  reduce using rule 158 (label_opt)

    expression                 go to state 59
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72
    statement                  go to state 330
    if_statement               go to state 74
    label_opt                  go to state 75
    switch_statement           go to state 76
    while_statement            go to state 77
    for_statement              go to state 78
    do_while_statement         go to state 79
    foreach_statement          go to state 80
    return_statement           go to state 81
    break_statement            go to state 82
    continue_statement         go to state 83
    try_statement              go to state 84
    throw_statement            go to state 85
    declaration_statement      go to state 86


state 360

  170 do_while_statement: label_opt DO_T block WHILE LP . expression RP CR

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 396
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 361

  169 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt . SEMICOLON expression_opt myblock

    SEMICOLON  shift, and go to state 397


state 362

  171 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON . expression RP block

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 398
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 363

  198 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER extends CR . $@5 member_declaration_list END
  202                 | class_or_member_modifier_list class_or_interface IDENTIFIER extends CR . $@7 END

    END       reduce using rule 201 ($@7)
    $default  reduce using rule 197 ($@5)

    $@5  go to state 399
    $@7  go to state 400


state 364

  214 extends_list: extends_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 401


state 365

  196 class_definition: class_or_interface IDENTIFIER extends CR $@4 . member_declaration_list END

    PUBLIC_T     shift, and go to state 40
    PRIVATE_T    shift, and go to state 41
    VIRTUAL_T    shift, and go to state 42
    OVERRIDE_T   shift, and go to state 43
    ABSTRACT_T   shift, and go to state 44
    CONSTRUCTOR  shift, and go to state 402
    FINAL        shift, and go to state 403
    FUNCTION     shift, and go to state 404
    DIM          shift, and go to state 405
    DECLARE      shift, and go to state 406
    BSUB         shift, and go to state 407

    class_or_member_modifier_list  go to state 408
    class_or_member_modifier       go to state 89
    member_declaration_list        go to state 409
    member_declaration             go to state 410
    method_member                  go to state 411
    method_function_definition     go to state 412
    constructor_definition         go to state 413
    access_modifier                go to state 91
    field_member                   go to state 414


state 366

  200 class_definition: class_or_interface IDENTIFIER extends CR $@6 . END

    END  shift, and go to state 415


state 367

  152 if_statement: IF expression THEN myblock ELSE myblock .

    $default  reduce using rule 152 (if_statement)


state 368

   58 expression: expression . COMMA assignment_expression
  157 elsif: ELSIF expression . THEN myblock

    COMMA  shift, and go to state 148
    THEN   shift, and go to state 416


state 369

  154 if_statement: IF expression THEN myblock elsif_list ELSE . myblock

    CR  shift, and go to state 119

    myblock  go to state 417


state 370

  156 elsif_list: elsif_list elsif .

    $default  reduce using rule 156 (elsif_list)


state 371

  136 expression_list: expression_list COMMA . assignment_expression
  167 case_expression_list: expression_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    assignment_expression      go to state 418
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 372

  163 one_case: CASE case_expression_list myblock .

    $default  reduce using rule 163 (one_case)


state 373

  165 default_opt: DEFAULT_T myblock .

    $default  reduce using rule 165 (default_opt)


state 374

  185 catch_clause: CATCH @2 type_specifier IDENTIFIER . myblock

    CR  shift, and go to state 119

    myblock  go to state 419


state 375

  121 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP RP .

    $default  reduce using rule 121 (primary_no_new_array)


state 376

   54 argument_list: argument_list . COMMA assignment_expression
  122 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 420
    COMMA  shift, and go to state 303


state 377

  133 dimension_list: dimension_list LB RB .

    $default  reduce using rule 133 (dimension_list)


state 378

   51 parameter_list: IDENTIFIER AS type_specifier .

    $default  reduce using rule 51 (parameter_list)


state 379

   52 parameter_list: parameter_list COMMA IDENTIFIER . AS type_specifier

    AS  shift, and go to state 421


state 380

  250 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 422


state 381

  251 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 423


state 382

   58 expression: expression . COMMA assignment_expression
  191 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T expression . CR

    COMMA  shift, and go to state 148
    CR     shift, and go to state 424


state 383

  255 enumerator_list: enumerator_list COMMA IDENTIFIER .

    $default  reduce using rule 255 (enumerator_list)


state 384

  253 enum_definition: ENUM IDENTIFIER LC enumerator_list COMMA RC .

    $default  reduce using rule 253 (enum_definition)


state 385

   46 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 425


state 386

   47 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 426


state 387

   58 expression: expression . COMMA assignment_expression
  189 declaration_statement: DIM IDENTIFIER AS type_specifier ASSIGN_T expression . CR

    COMMA  shift, and go to state 148
    CR     shift, and go to state 427


state 388

   42 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 428


state 389

   43 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 429


state 390

   44 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe . RP throws_clause CR

    RP  shift, and go to state 430


state 391

   45 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 431


state 392

   48 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP . throws_clause myblock

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 432


state 393

  234 throws_clause: THROWS . exception_list

    IDENTIFIER  shift, and go to state 433

    exception_list  go to state 434


state 394

   49 function_definition: BSUB IDENTIFIER LP apostrophe RP throws_clause . myblock

    CR  shift, and go to state 119

    myblock  go to state 435


state 395

  193 block: LC @3 statement_list RC .

    $default  reduce using rule 193 (block)


state 396

   58 expression: expression . COMMA assignment_expression
  170 do_while_statement: label_opt DO_T block WHILE LP expression . RP CR

    RP     shift, and go to state 436
    COMMA  shift, and go to state 148


state 397

  169 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON . expression_opt myblock

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    $default  reduce using rule 172 (expression_opt)

    expression                 go to state 107
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72
    expression_opt             go to state 437


state 398

   58 expression: expression . COMMA assignment_expression
  171 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression . RP block

    RP     shift, and go to state 438
    COMMA  shift, and go to state 148


state 399

  198 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER extends CR $@5 . member_declaration_list END

    PUBLIC_T     shift, and go to state 40
    PRIVATE_T    shift, and go to state 41
    VIRTUAL_T    shift, and go to state 42
    OVERRIDE_T   shift, and go to state 43
    ABSTRACT_T   shift, and go to state 44
    CONSTRUCTOR  shift, and go to state 402
    FINAL        shift, and go to state 403
    FUNCTION     shift, and go to state 404
    DIM          shift, and go to state 405
    DECLARE      shift, and go to state 406
    BSUB         shift, and go to state 407

    class_or_member_modifier_list  go to state 408
    class_or_member_modifier       go to state 89
    member_declaration_list        go to state 439
    member_declaration             go to state 410
    method_member                  go to state 411
    method_function_definition     go to state 412
    constructor_definition         go to state 413
    access_modifier                go to state 91
    field_member                   go to state 414


state 400

  202 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER extends CR $@7 . END

    END  shift, and go to state 440


state 401

  214 extends_list: extends_list COMMA IDENTIFIER .

    $default  reduce using rule 214 (extends_list)


state 402

  237 constructor_definition: CONSTRUCTOR . IDENTIFIER LP parameter_list RP throws_clause myblock
  238                       | CONSTRUCTOR . IDENTIFIER LP RP throws_clause myblock

    IDENTIFIER  shift, and go to state 441


state 403

  247 field_member: FINAL . IDENTIFIER AS type_specifier initializer_opt CR
  249             | FINAL . class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 442
    PUBLIC_T    shift, and go to state 40
    PRIVATE_T   shift, and go to state 41
    VIRTUAL_T   shift, and go to state 42
    OVERRIDE_T  shift, and go to state 43
    ABSTRACT_T  shift, and go to state 44

    class_or_member_modifier_list  go to state 443
    class_or_member_modifier       go to state 89
    access_modifier                go to state 91


state 404

  223 method_function_definition: FUNCTION . IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock
  224                           | FUNCTION . IDENTIFIER LP RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 444


state 405

  245 field_member: DIM . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 445


state 406

  225 method_function_definition: DECLARE . FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  226                           | DECLARE . FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR
  229                           | DECLARE . BSUB IDENTIFIER LP parameter_list RP throws_clause CR
  230                           | DECLARE . BSUB IDENTIFIER LP RP throws_clause CR
  239 constructor_definition: DECLARE . CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR
  240                       | DECLARE . CONSTRUCTOR IDENTIFIER LP RP throws_clause CR

    CONSTRUCTOR  shift, and go to state 446
    FUNCTION     shift, and go to state 447
    BSUB         shift, and go to state 448


state 407

  227 method_function_definition: BSUB . IDENTIFIER LP parameter_list RP throws_clause myblock
  228                           | BSUB . IDENTIFIER LP RP throws_clause myblock

    IDENTIFIER  shift, and go to state 449


state 408

  204 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier
  220 method_member: class_or_member_modifier_list . method_function_definition
  222              | class_or_member_modifier_list . constructor_definition
  246 field_member: class_or_member_modifier_list . IDENTIFIER AS type_specifier initializer_opt CR
  248             | class_or_member_modifier_list . FINAL IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER   shift, and go to state 450
    PUBLIC_T     shift, and go to state 40
    PRIVATE_T    shift, and go to state 41
    VIRTUAL_T    shift, and go to state 42
    OVERRIDE_T   shift, and go to state 43
    ABSTRACT_T   shift, and go to state 44
    CONSTRUCTOR  shift, and go to state 402
    FINAL        shift, and go to state 451
    FUNCTION     shift, and go to state 404
    DECLARE      shift, and go to state 406
    BSUB         shift, and go to state 407

    class_or_member_modifier    go to state 184
    method_function_definition  go to state 452
    constructor_definition      go to state 453
    access_modifier             go to state 91


state 409

  196 class_definition: class_or_interface IDENTIFIER extends CR $@4 member_declaration_list . END
  216 member_declaration_list: member_declaration_list . member_declaration

    PUBLIC_T     shift, and go to state 40
    PRIVATE_T    shift, and go to state 41
    VIRTUAL_T    shift, and go to state 42
    OVERRIDE_T   shift, and go to state 43
    ABSTRACT_T   shift, and go to state 44
    CONSTRUCTOR  shift, and go to state 402
    FINAL        shift, and go to state 403
    FUNCTION     shift, and go to state 404
    DIM          shift, and go to state 405
    END          shift, and go to state 454
    DECLARE      shift, and go to state 406
    BSUB         shift, and go to state 407

    class_or_member_modifier_list  go to state 408
    class_or_member_modifier       go to state 89
    member_declaration             go to state 455
    method_member                  go to state 411
    method_function_definition     go to state 412
    constructor_definition         go to state 413
    access_modifier                go to state 91
    field_member                   go to state 414


state 410

  215 member_declaration_list: member_declaration .

    $default  reduce using rule 215 (member_declaration_list)


state 411

  217 member_declaration: method_member .

    $default  reduce using rule 217 (member_declaration)


state 412

  219 method_member: method_function_definition .

    $default  reduce using rule 219 (method_member)


state 413

  221 method_member: constructor_definition .

    $default  reduce using rule 221 (method_member)


state 414

  218 member_declaration: field_member .

    $default  reduce using rule 218 (member_declaration)


state 415

  200 class_definition: class_or_interface IDENTIFIER extends CR $@6 END .

    $default  reduce using rule 200 (class_definition)


state 416

  157 elsif: ELSIF expression THEN . myblock

    CR  shift, and go to state 119

    myblock  go to state 456


state 417

  154 if_statement: IF expression THEN myblock elsif_list ELSE myblock .

    $default  reduce using rule 154 (if_statement)


state 418

  136 expression_list: expression_list COMMA assignment_expression .
  167 case_expression_list: expression_list COMMA assignment_expression .

    CR        reduce using rule 167 (case_expression_list)
    $default  reduce using rule 136 (expression_list)


state 419

  185 catch_clause: CATCH @2 type_specifier IDENTIFIER myblock .

    $default  reduce using rule 185 (catch_clause)


state 420

  122 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP argument_list RP .

    $default  reduce using rule 122 (primary_no_new_array)


state 421

   52 parameter_list: parameter_list COMMA IDENTIFIER AS . type_specifier

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 457


state 422

  250 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 458


state 423

  251 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 459


state 424

  191 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T expression CR .

    $default  reduce using rule 191 (declaration_statement)


state 425

   46 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 460


state 426

   47 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 461


state 427

  189 declaration_statement: DIM IDENTIFIER AS type_specifier ASSIGN_T expression CR .

    $default  reduce using rule 189 (declaration_statement)


state 428

   42 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 462


state 429

   43 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 463


state 430

   44 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 464


state 431

   45 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause . CR

    CR  shift, and go to state 465


state 432

   48 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause . myblock

    CR  shift, and go to state 119

    myblock  go to state 466


state 433

  235 exception_list: IDENTIFIER .

    $default  reduce using rule 235 (exception_list)


state 434

  234 throws_clause: THROWS exception_list .
  236 exception_list: exception_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 467

    $default  reduce using rule 234 (throws_clause)


state 435

   49 function_definition: BSUB IDENTIFIER LP apostrophe RP throws_clause myblock .

    $default  reduce using rule 49 (function_definition)


state 436

  170 do_while_statement: label_opt DO_T block WHILE LP expression RP . CR

    CR  shift, and go to state 468


state 437

  169 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt . myblock

    CR  shift, and go to state 119

    myblock  go to state 469


state 438

  171 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP . block

    LC  shift, and go to state 253

    block  go to state 470


state 439

  198 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER extends CR $@5 member_declaration_list . END
  216 member_declaration_list: member_declaration_list . member_declaration

    PUBLIC_T     shift, and go to state 40
    PRIVATE_T    shift, and go to state 41
    VIRTUAL_T    shift, and go to state 42
    OVERRIDE_T   shift, and go to state 43
    ABSTRACT_T   shift, and go to state 44
    CONSTRUCTOR  shift, and go to state 402
    FINAL        shift, and go to state 403
    FUNCTION     shift, and go to state 404
    DIM          shift, and go to state 405
    END          shift, and go to state 471
    DECLARE      shift, and go to state 406
    BSUB         shift, and go to state 407

    class_or_member_modifier_list  go to state 408
    class_or_member_modifier       go to state 89
    member_declaration             go to state 455
    method_member                  go to state 411
    method_function_definition     go to state 412
    constructor_definition         go to state 413
    access_modifier                go to state 91
    field_member                   go to state 414


state 440

  202 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER extends CR $@7 END .

    $default  reduce using rule 202 (class_definition)


state 441

  237 constructor_definition: CONSTRUCTOR IDENTIFIER . LP parameter_list RP throws_clause myblock
  238                       | CONSTRUCTOR IDENTIFIER . LP RP throws_clause myblock

    LP  shift, and go to state 472


state 442

  247 field_member: FINAL IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 473


state 443

  204 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier
  249 field_member: FINAL class_or_member_modifier_list . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 474
    PUBLIC_T    shift, and go to state 40
    PRIVATE_T   shift, and go to state 41
    VIRTUAL_T   shift, and go to state 42
    OVERRIDE_T  shift, and go to state 43
    ABSTRACT_T  shift, and go to state 44

    class_or_member_modifier  go to state 184
    access_modifier           go to state 91


state 444

  223 method_function_definition: FUNCTION IDENTIFIER . LP parameter_list RP AS type_specifier throws_clause myblock
  224                           | FUNCTION IDENTIFIER . LP RP AS type_specifier throws_clause myblock

    LP  shift, and go to state 475


state 445

  245 field_member: DIM IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 476


state 446

  239 constructor_definition: DECLARE CONSTRUCTOR . IDENTIFIER LP parameter_list RP throws_clause CR
  240                       | DECLARE CONSTRUCTOR . IDENTIFIER LP RP throws_clause CR

    IDENTIFIER  shift, and go to state 477


state 447

  225 method_function_definition: DECLARE FUNCTION . IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  226                           | DECLARE FUNCTION . IDENTIFIER LP RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 478


state 448

  229 method_function_definition: DECLARE BSUB . IDENTIFIER LP parameter_list RP throws_clause CR
  230                           | DECLARE BSUB . IDENTIFIER LP RP throws_clause CR

    IDENTIFIER  shift, and go to state 479


state 449

  227 method_function_definition: BSUB IDENTIFIER . LP parameter_list RP throws_clause myblock
  228                           | BSUB IDENTIFIER . LP RP throws_clause myblock

    LP  shift, and go to state 480


state 450

  246 field_member: class_or_member_modifier_list IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 481


state 451

  248 field_member: class_or_member_modifier_list FINAL . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 482


state 452

  220 method_member: class_or_member_modifier_list method_function_definition .

    $default  reduce using rule 220 (method_member)


state 453

  222 method_member: class_or_member_modifier_list constructor_definition .

    $default  reduce using rule 222 (method_member)


state 454

  196 class_definition: class_or_interface IDENTIFIER extends CR $@4 member_declaration_list END .

    $default  reduce using rule 196 (class_definition)


state 455

  216 member_declaration_list: member_declaration_list member_declaration .

    $default  reduce using rule 216 (member_declaration_list)


state 456

  157 elsif: ELSIF expression THEN myblock .

    $default  reduce using rule 157 (elsif)


state 457

   52 parameter_list: parameter_list COMMA IDENTIFIER AS type_specifier .

    $default  reduce using rule 52 (parameter_list)


state 458

  250 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 483


state 459

  251 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 484


state 460

   46 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 485


state 461

   47 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 119

    myblock  go to state 486


state 462

   42 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 487


state 463

   43 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 488


state 464

   44 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause . CR

    CR  shift, and go to state 489


state 465

   45 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause CR .

    $default  reduce using rule 45 (function_declaration)


state 466

   48 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock .

    $default  reduce using rule 48 (function_definition)


state 467

  236 exception_list: exception_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 490


state 468

  170 do_while_statement: label_opt DO_T block WHILE LP expression RP CR .

    $default  reduce using rule 170 (do_while_statement)


state 469

  169 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock .

    $default  reduce using rule 169 (for_statement)


state 470

  171 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP block .

    $default  reduce using rule 171 (foreach_statement)


state 471

  198 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER extends CR $@5 member_declaration_list END .

    $default  reduce using rule 198 (class_definition)


state 472

  237 constructor_definition: CONSTRUCTOR IDENTIFIER LP . parameter_list RP throws_clause myblock
  238                       | CONSTRUCTOR IDENTIFIER LP . RP throws_clause myblock

    IDENTIFIER  shift, and go to state 283
    RP          shift, and go to state 491

    parameter_list  go to state 492


state 473

  247 field_member: FINAL IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 493


state 474

  249 field_member: FINAL class_or_member_modifier_list IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 494


state 475

  223 method_function_definition: FUNCTION IDENTIFIER LP . parameter_list RP AS type_specifier throws_clause myblock
  224                           | FUNCTION IDENTIFIER LP . RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 283
    RP          shift, and go to state 495

    parameter_list  go to state 496


state 476

  245 field_member: DIM IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 497


state 477

  239 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER . LP parameter_list RP throws_clause CR
  240                       | DECLARE CONSTRUCTOR IDENTIFIER . LP RP throws_clause CR

    LP  shift, and go to state 498


state 478

  225 method_function_definition: DECLARE FUNCTION IDENTIFIER . LP parameter_list RP AS type_specifier throws_clause CR
  226                           | DECLARE FUNCTION IDENTIFIER . LP RP AS type_specifier throws_clause CR

    LP  shift, and go to state 499


state 479

  229 method_function_definition: DECLARE BSUB IDENTIFIER . LP parameter_list RP throws_clause CR
  230                           | DECLARE BSUB IDENTIFIER . LP RP throws_clause CR

    LP  shift, and go to state 500


state 480

  227 method_function_definition: BSUB IDENTIFIER LP . parameter_list RP throws_clause myblock
  228                           | BSUB IDENTIFIER LP . RP throws_clause myblock

    IDENTIFIER  shift, and go to state 283
    RP          shift, and go to state 501

    parameter_list  go to state 502


state 481

  246 field_member: class_or_member_modifier_list IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 503


state 482

  248 field_member: class_or_member_modifier_list FINAL IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 504


state 483

  250 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 505


state 484

  251 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 251 (delegate_definition)


state 485

   46 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 119

    myblock  go to state 506


state 486

   47 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 47 (function_definition)


state 487

   42 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 507


state 488

   43 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 508


state 489

   44 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR .

    $default  reduce using rule 44 (function_declaration)


state 490

  236 exception_list: exception_list COMMA IDENTIFIER .

    $default  reduce using rule 236 (exception_list)


state 491

  238 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP . throws_clause myblock

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 509


state 492

   52 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  237 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list . RP throws_clause myblock

    RP     shift, and go to state 510
    COMMA  shift, and go to state 511


state 493

  247 field_member: FINAL IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 512

    $default  reduce using rule 243 (initializer_opt)

    initializer_opt  go to state 513


state 494

  249 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 514


state 495

  224 method_function_definition: FUNCTION IDENTIFIER LP RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 515


state 496

   52 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  223 method_function_definition: FUNCTION IDENTIFIER LP parameter_list . RP AS type_specifier throws_clause myblock

    RP     shift, and go to state 516
    COMMA  shift, and go to state 511


state 497

  245 field_member: DIM IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 512

    $default  reduce using rule 243 (initializer_opt)

    initializer_opt  go to state 517


state 498

  239 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP . parameter_list RP throws_clause CR
  240                       | DECLARE CONSTRUCTOR IDENTIFIER LP . RP throws_clause CR

    IDENTIFIER  shift, and go to state 283
    RP          shift, and go to state 518

    parameter_list  go to state 519


state 499

  225 method_function_definition: DECLARE FUNCTION IDENTIFIER LP . parameter_list RP AS type_specifier throws_clause CR
  226                           | DECLARE FUNCTION IDENTIFIER LP . RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 283
    RP          shift, and go to state 520

    parameter_list  go to state 521


state 500

  229 method_function_definition: DECLARE BSUB IDENTIFIER LP . parameter_list RP throws_clause CR
  230                           | DECLARE BSUB IDENTIFIER LP . RP throws_clause CR

    IDENTIFIER  shift, and go to state 283
    RP          shift, and go to state 522

    parameter_list  go to state 523


state 501

  228 method_function_definition: BSUB IDENTIFIER LP RP . throws_clause myblock

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 524


state 502

   52 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  227 method_function_definition: BSUB IDENTIFIER LP parameter_list . RP throws_clause myblock

    RP     shift, and go to state 525
    COMMA  shift, and go to state 511


state 503

  246 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 512

    $default  reduce using rule 243 (initializer_opt)

    initializer_opt  go to state 526


state 504

  248 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 527


state 505

  250 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 250 (delegate_definition)


state 506

   46 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 46 (function_definition)


state 507

   42 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 528


state 508

   43 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 43 (function_declaration)


state 509

  238 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP throws_clause . myblock

    CR  shift, and go to state 119

    myblock  go to state 529


state 510

  237 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP . throws_clause myblock

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 530


state 511

   52 parameter_list: parameter_list COMMA . IDENTIFIER AS type_specifier

    IDENTIFIER  shift, and go to state 379


state 512

  244 initializer_opt: ASSIGN_T . expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 104
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 531
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 513

  247 field_member: FINAL IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 532


state 514

  249 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 512

    $default  reduce using rule 243 (initializer_opt)

    initializer_opt  go to state 533


state 515

  224 method_function_definition: FUNCTION IDENTIFIER LP RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 534


state 516

  223 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 535


state 517

  245 field_member: DIM IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 536


state 518

  240 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 537


state 519

   52 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  239 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list . RP throws_clause CR

    RP     shift, and go to state 538
    COMMA  shift, and go to state 511


state 520

  226 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 539


state 521

   52 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  225 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list . RP AS type_specifier throws_clause CR

    RP     shift, and go to state 540
    COMMA  shift, and go to state 511


state 522

  230 method_function_definition: DECLARE BSUB IDENTIFIER LP RP . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 541


state 523

   52 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  229 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list . RP throws_clause CR

    RP     shift, and go to state 542
    COMMA  shift, and go to state 511


state 524

  228 method_function_definition: BSUB IDENTIFIER LP RP throws_clause . myblock

    CR  shift, and go to state 119

    myblock  go to state 543


state 525

  227 method_function_definition: BSUB IDENTIFIER LP parameter_list RP . throws_clause myblock

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 544


state 526

  246 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 545


state 527

  248 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 512

    $default  reduce using rule 243 (initializer_opt)

    initializer_opt  go to state 546


state 528

   42 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 42 (function_declaration)


state 529

  238 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP throws_clause myblock .

    $default  reduce using rule 238 (constructor_definition)


state 530

  237 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause . myblock

    CR  shift, and go to state 119

    myblock  go to state 547


state 531

   58 expression: expression . COMMA assignment_expression
  244 initializer_opt: ASSIGN_T expression .

    COMMA  shift, and go to state 148

    $default  reduce using rule 244 (initializer_opt)


state 532

  247 field_member: FINAL IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 247 (field_member)


state 533

  249 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 548


state 534

  224 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 549


state 535

  223 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 550


state 536

  245 field_member: DIM IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 245 (field_member)


state 537

  240 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause . CR

    CR  shift, and go to state 551


state 538

  239 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 552


state 539

  226 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 553


state 540

  225 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 554


state 541

  230 method_function_definition: DECLARE BSUB IDENTIFIER LP RP throws_clause . CR

    CR  shift, and go to state 555


state 542

  229 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 556


state 543

  228 method_function_definition: BSUB IDENTIFIER LP RP throws_clause myblock .

    $default  reduce using rule 228 (method_function_definition)


state 544

  227 method_function_definition: BSUB IDENTIFIER LP parameter_list RP throws_clause . myblock

    CR  shift, and go to state 119

    myblock  go to state 557


state 545

  246 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 246 (field_member)


state 546

  248 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 558


state 547

  237 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause myblock .

    $default  reduce using rule 237 (constructor_definition)


state 548

  249 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 249 (field_member)


state 549

  224 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 119

    myblock  go to state 559


state 550

  223 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 560


state 551

  240 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause CR .

    $default  reduce using rule 240 (constructor_definition)


state 552

  239 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause . CR

    CR  shift, and go to state 561


state 553

  226 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 562


state 554

  225 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 247
    VOID_T            shift, and go to state 124
    BOOLEAN_T         shift, and go to state 125
    INT_T             shift, and go to state 126
    DOUBLE_T          shift, and go to state 127
    STRING_T          shift, and go to state 128
    VARIENT_T         shift, and go to state 129
    NATIVE_POINTER_T  shift, and go to state 130
    DELEGATE          shift, and go to state 138

    basic_type_specifier       go to state 139
    identifier_type_specifier  go to state 140
    array_type_specifier       go to state 141
    type_specifier             go to state 563


state 555

  230 method_function_definition: DECLARE BSUB IDENTIFIER LP RP throws_clause CR .

    $default  reduce using rule 230 (method_function_definition)


state 556

  229 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause . CR

    CR  shift, and go to state 564


state 557

  227 method_function_definition: BSUB IDENTIFIER LP parameter_list RP throws_clause myblock .

    $default  reduce using rule 227 (method_function_definition)


state 558

  248 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 248 (field_member)


state 559

  224 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 224 (method_function_definition)


state 560

  223 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 119

    myblock  go to state 565


state 561

  239 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR .

    $default  reduce using rule 239 (constructor_definition)


state 562

  226 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 566


state 563

  225 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 233 (throws_clause)

    throws_clause  go to state 567


state 564

  229 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause CR .

    $default  reduce using rule 229 (method_function_definition)


state 565

  223 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 223 (method_function_definition)


state 566

  226 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR .

    $default  reduce using rule 226 (method_function_definition)


state 567

  225 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 568


state 568

  225 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR .

    $default  reduce using rule 225 (method_function_definition)
