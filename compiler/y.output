State 253 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: initial_declaration
    2                 | translation_unit definition_or_statement

    3 initial_declaration: /* empty */
    4                    | require_list rename_list
    5                    | require_list
    6                    | rename_list
    7                    | initial_declaration lib_function

    8 require_list: require_declaration
    9             | require_list require_declaration

   10 require_declaration: REQUIRE package_name CR

   11 package_name: IDENTIFIER
   12             | package_name DOT IDENTIFIER

   13 rename_list: rename_declaration
   14            | rename_list rename_declaration

   15 rename_declaration: RENAME package_name IDENTIFIER CR

   16 definition_or_statement: function_definition
   17                        | class_definition
   18                        | statement
   19                        | delegate_definition
   20                        | enum_definition
   21                        | const_definition

   22 basic_type_specifier: VOID_T
   23                     | BOOLEAN_T
   24                     | INT_T
   25                     | DOUBLE_T
   26                     | STRING_T
   27                     | VARIENT_T
   28                     | NATIVE_POINTER_T
   29                     | DELEGATE

   30 identifier_type_specifier: IDENTIFIER

   31 array_type_specifier: basic_type_specifier LB RB
   32                     | IDENTIFIER LB RB
   33                     | array_type_specifier LB RB
   34                     | template_type_specifier LB RB

   35 template_type_specifier: IDENTIFIER LT type_list GT

   36 type_specifier: basic_type_specifier
   37               | array_type_specifier
   38               | identifier_type_specifier
   39               | template_type_specifier

   40 type_list: type_specifier
   41          | type_list COMMA type_specifier

   42 $@1: /* empty */

   43 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list END

   44 lib_function_declaration_list: /* empty */
   45                              | lib_function_declaration_list function_declaration
   46                              | lib_function_declaration_list class_definition

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   48                     | DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR
   49                     | DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   50                     | DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause CR

   51 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   52                    | FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock
   53                    | BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock
   54                    | BSUB IDENTIFIER LP apostrophe RP throws_clause myblock
   55                    | function_declaration

   56 parameter_list: IDENTIFIER AS type_specifier
   57               | parameter_list COMMA IDENTIFIER AS type_specifier

   58 argument_list: assignment_expression
   59              | argument_list COMMA assignment_expression

   60 statement_list: statement
   61               | statement_list statement

   62 expression: assignment_expression
   63           | expression COMMA assignment_expression

   64 assignment_expression: logical_or_expression
   65                      | primary_expression assignment_operator assignment_expression

   66 assignment_operator: ASSIGN_T
   67                    | ADD_ASSIGN_T
   68                    | SUB_ASSIGN_T
   69                    | ATM_ADD_ASSIGN_T
   70                    | ATM_SUB_ASSIGN_T
   71                    | MUL_ASSIGN_T
   72                    | DIV_ASSIGN_T
   73                    | MOD_ASSIGN_T

   74 logical_or_expression: logical_and_expression
   75                      | logical_or_expression LOGICAL_OR logical_and_expression

   76 logical_and_expression: equality_expression
   77                       | logical_and_expression LOGICAL_AND equality_expression

   78 equality_expression: relational_expression
   79                    | equality_expression EQ relational_expression
   80                    | equality_expression NE relational_expression

   81 relational_expression: additive_expression
   82                      | relational_expression GT additive_expression
   83                      | relational_expression GE additive_expression
   84                      | relational_expression LT additive_expression
   85                      | relational_expression LE additive_expression

   86 additive_expression: multiplicative_expression
   87                    | additive_expression ADD multiplicative_expression
   88                    | additive_expression SUB multiplicative_expression

   89 multiplicative_expression: unary_expression
   90                          | multiplicative_expression MUL unary_expression
   91                          | multiplicative_expression DIV unary_expression
   92                          | multiplicative_expression MOD unary_expression
   93                          | multiplicative_expression BIT_AND unary_expression
   94                          | multiplicative_expression BIT_OR unary_expression
   95                          | multiplicative_expression BIT_XOR unary_expression

   96 unary_expression: postfix_expression
   97                 | SUB unary_expression
   98                 | EXCLAMATION unary_expression
   99                 | BIT_NOT unary_expression

  100 postfix_expression: primary_expression
  101                   | primary_expression INCREMENT
  102                   | primary_expression DECREMENT
  103                   | primary_expression INSTANCEOF type_specifier

  104 primary_expression: primary_no_new_array
  105                   | array_creation
  106                   | IDENTIFIER
  107                   | AUTOVAR

  108 primary_no_new_array: primary_no_new_array LB expression RB
  109                     | IDENTIFIER LB expression RB
  110                     | primary_expression DOT IDENTIFIER
  111                     | primary_expression LP argument_list RP
  112                     | primary_expression LP RP
  113                     | LP expression RP
  114                     | primary_expression DOWN_CAST_BEGIN type_specifier DOWN_CAST_END
  115                     | INT_LITERAL
  116                     | DOUBLE_LITERAL
  117                     | STRING_LITERAL
  118                     | REGEXP_LITERAL
  119                     | TRUE_T
  120                     | FALSE_T
  121                     | NULL_T
  122                     | array_literal
  123                     | THIS_T
  124                     | SUPER_T
  125                     | NEW DELEGATE LP RP
  126                     | NEW IDENTIFIER LP RP
  127                     | NEW IDENTIFIER LP argument_list RP
  128                     | NEW IDENTIFIER DOT IDENTIFIER LP RP
  129                     | NEW IDENTIFIER DOT IDENTIFIER LP argument_list RP

  130 array_literal: LC expression_list RC
  131              | LC expression_list COMMA RC

  132 array_creation: NEW basic_type_specifier dimension_expression_list
  133               | NEW basic_type_specifier dimension_expression_list dimension_list
  134               | NEW identifier_type_specifier dimension_expression_list
  135               | NEW identifier_type_specifier dimension_expression_list dimension_list
  136               | NEW template_type_specifier dimension_expression_list
  137               | NEW template_type_specifier dimension_expression_list dimension_list

  138 dimension_expression_list: dimension_expression
  139                          | dimension_expression_list dimension_expression

  140 dimension_expression: LB expression RB

  141 dimension_list: LB RB
  142               | dimension_list LB RB

  143 expression_list: /* empty */
  144                | assignment_expression
  145                | expression_list COMMA assignment_expression

  146 statement: expression CR
  147          | if_statement
  148          | switch_statement
  149          | while_statement
  150          | for_statement
  151          | do_while_statement
  152          | foreach_statement
  153          | return_statement
  154          | break_statement
  155          | continue_statement
  156          | try_statement
  157          | throw_statement
  158          | declaration_statement
  159          | CR

  160 if_statement: IF expression THEN myblock
  161             | IF expression THEN myblock ELSE myblock
  162             | IF expression THEN myblock elsif_list
  163             | IF expression THEN myblock elsif_list ELSE myblock

  164 elsif_list: elsif
  165           | elsif_list elsif

  166 elsif: ELSIF expression THEN myblock

  167 label_opt: /* empty */
  168          | IDENTIFIER COLON

  169 switch_statement: SWITCH expression CR case_list default_opt

  170 case_list: one_case
  171          | case_list one_case

  172 one_case: CASE case_expression_list myblock

  173 default_opt: /* empty */
  174            | DEFAULT_T myblock

  175 case_expression_list: assignment_expression
  176                     | expression_list COMMA assignment_expression

  177 while_statement: label_opt WHILE expression myblock

  178 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock

  179 do_while_statement: label_opt DO_T block WHILE LP expression RP CR

  180 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP block

  181 expression_opt: /* empty */
  182               | expression

  183 return_statement: RETURN_T expression_opt CR

  184 identifier_opt: /* empty */
  185               | IDENTIFIER

  186 break_statement: BREAK identifier_opt CR

  187 continue_statement: CONTINUE identifier_opt CR

  188 try_statement: TRY myblock catch_list FINALLY myblock
  189              | TRY myblock FINALLY block
  190              | TRY myblock catch_list

  191 catch_list: catch_clause
  192           | catch_list catch_clause

  193 @2: /* empty */

  194 catch_clause: CATCH @2 type_specifier IDENTIFIER myblock

  195 throw_statement: THROW expression CR
  196                | THROW CR

  197 declaration_statement: DIM IDENTIFIER AS shared type_specifier CR
  198                      | DIM IDENTIFIER AS shared type_specifier ASSIGN_T expression CR
  199                      | FINAL IDENTIFIER AS type_specifier CR
  200                      | FINAL IDENTIFIER AS type_specifier ASSIGN_T expression CR

  201 @3: /* empty */

  202 block: LC @3 statement_list RC
  203      | LC RC

  204 template_def_list: IDENTIFIER
  205                  | template_def_list COMMA IDENTIFIER
  206                  | IDENTIFIER COLON identifier_type_specifier
  207                  | template_def_list COMMA IDENTIFIER COLON identifier_type_specifier

  208 template_list: LT template_def_list GT
  209              | /* empty */

  210 $@4: /* empty */

  211 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list END

  212 $@5: /* empty */

  213 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END

  214 $@6: /* empty */

  215 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@6 END

  216 $@7: /* empty */

  217 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 END

  218 class_or_member_modifier_list: class_or_member_modifier
  219                              | class_or_member_modifier_list class_or_member_modifier

  220 class_or_member_modifier: access_modifier
  221                         | VIRTUAL_T
  222                         | OVERRIDE_T
  223                         | ABSTRACT_T

  224 class_or_interface: CLASS_T
  225                   | INTERFACE_T

  226 extends: /* empty */
  227        | COLON extends_list

  228 extends_list: IDENTIFIER
  229             | extends_list COMMA IDENTIFIER

  230 member_declaration_list: member_declaration
  231                        | member_declaration_list member_declaration

  232 member_declaration: method_member
  233                   | field_member

  234 method_member: method_function_definition
  235              | class_or_member_modifier_list method_function_definition
  236              | constructor_definition
  237              | class_or_member_modifier_list constructor_definition

  238 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock
  239                           | FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause myblock
  240                           | DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  241                           | DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR
  242                           | BSUB IDENTIFIER LP parameter_list RP throws_clause myblock
  243                           | BSUB IDENTIFIER LP RP throws_clause myblock
  244                           | DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause CR
  245                           | DECLARE BSUB IDENTIFIER LP RP throws_clause CR

  246 apostrophe: /* empty */
  247           | COMMA APOSTROPHE

  248 throws_clause: /* empty */
  249              | THROWS exception_list

  250 exception_list: IDENTIFIER
  251               | exception_list COMMA IDENTIFIER

  252 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause myblock
  253                       | CONSTRUCTOR IDENTIFIER LP RP throws_clause myblock
  254                       | DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR
  255                       | DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause CR

  256 access_modifier: PUBLIC_T
  257                | PRIVATE_T

  258 initializer_opt: /* empty */
  259                | ASSIGN_T expression

  260 field_member: DIM IDENTIFIER AS type_specifier initializer_opt CR
  261             | class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR
  262             | FINAL IDENTIFIER AS type_specifier initializer_opt CR
  263             | class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt CR
  264             | FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR

  265 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  266                    | DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

  267 enum_definition: ENUM IDENTIFIER LC enumerator_list RC
  268                | ENUM IDENTIFIER LC enumerator_list COMMA RC

  269 enumerator_list: IDENTIFIER
  270                | enumerator_list COMMA IDENTIFIER

  271 const_definition: CONST IDENTIFIER ASSIGN_T expression CR
  272                 | CONST type_specifier IDENTIFIER CR

  273 shared: /* empty */
  274       | SHARED

  275 unsafe: /* empty */
  276       | UNSAFE CR
  277       | SAFE CR

  278 @8: /* empty */

  279 myblock: CR unsafe @8 statement_list END
  280        | CR END


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 115
DOUBLE_LITERAL (259) 116
STRING_LITERAL (260) 117
REGEXP_LITERAL (261) 118
IDENTIFIER (262) 11 12 15 30 32 35 43 47 48 49 50 51 52 53 54 56 57
    106 109 110 126 127 128 129 168 180 185 194 197 198 199 200 204
    205 206 207 211 213 215 217 228 229 238 239 240 241 242 243 244
    245 250 251 252 253 254 255 260 261 262 263 264 265 266 267 268
    269 270 271 272
AUTOVAR (263) 107
IF (264) 160 161 162 163
ELSE (265) 161 163
ELSIF (266) 166
SWITCH (267) 169
CASE (268) 172
DEFAULT_T (269) 174
WHILE (270) 177 179
DO_T (271) 179
FOR (272) 178
FOREACH (273) 180
RETURN_T (274) 183
BREAK (275) 186
CONTINUE (276) 187
NULL_T (277) 121
LP (278) 47 48 49 50 51 52 53 54 111 112 113 125 126 127 128 129 179
    180 238 239 240 241 242 243 244 245 252 253 254 255 265 266
RP (279) 47 48 49 50 51 52 53 54 111 112 113 125 126 127 128 129 179
    180 238 239 240 241 242 243 244 245 252 253 254 255 265 266
LC (280) 130 131 202 203 267 268
RC (281) 130 131 202 203 267 268
LB (282) 31 32 33 34 108 109 140 141 142
RB (283) 31 32 33 34 108 109 140 141 142
SEMICOLON (284) 178
COLON (285) 168 180 206 207 227
COMMA (286) 41 57 59 63 131 145 176 205 207 229 247 251 268 270
ASSIGN_T (287) 66 198 200 259 271
LOGICAL_AND (288) 77
LOGICAL_OR (289) 75
EQ (290) 79
NE (291) 80
GT (292) 35 82 208
GE (293) 83
LT (294) 35 84 208
LE (295) 85
ADD (296) 87
SUB (297) 88 97
MUL (298) 90
DIV (299) 91
MOD (300) 92
BIT_AND (301) 93
BIT_OR (302) 94
BIT_XOR (303) 95
BIT_NOT (304) 99
TRUE_T (305) 119
FALSE_T (306) 120
EXCLAMATION (307) 98
DOT (308) 12 110 128 129
ADD_ASSIGN_T (309) 67
SUB_ASSIGN_T (310) 68
MUL_ASSIGN_T (311) 71
DIV_ASSIGN_T (312) 72
MOD_ASSIGN_T (313) 73
INCREMENT (314) 101
DECREMENT (315) 102
TRY (316) 188 189 190
CATCH (317) 194
FINALLY (318) 188 189
THROW (319) 195 196
THROWS (320) 249
VOID_T (321) 22
BOOLEAN_T (322) 23
INT_T (323) 24
DOUBLE_T (324) 25
STRING_T (325) 26
VARIENT_T (326) 27
NATIVE_POINTER_T (327) 28
NEW (328) 125 126 127 128 129 132 133 134 135 136 137
REQUIRE (329) 10
RENAME (330) 15
CLASS_T (331) 224
INTERFACE_T (332) 225
PUBLIC_T (333) 256
PRIVATE_T (334) 257
VIRTUAL_T (335) 221
OVERRIDE_T (336) 222
ABSTRACT_T (337) 223
THIS_T (338) 123
SUPER_T (339) 124
CONSTRUCTOR (340) 252 253 254 255
INSTANCEOF (341) 103
DOWN_CAST_BEGIN (342) 114
DOWN_CAST_END (343) 114
DELEGATE (344) 29 125 265 266
FINAL (345) 199 200 262 263 264
ENUM (346) 267 268
CONST (347) 271 272
FUNCTION (348) 47 48 51 52 238 239 240 241
AS (349) 47 48 51 52 56 57 197 198 199 200 238 239 240 241 260 261
    262 263 264 265 266
THEN (350) 160 161 162 163 166
DIM (351) 197 198 260
END (352) 43 211 213 215 217 279 280
CR (353) 10 15 43 47 48 49 50 146 159 169 179 183 186 187 195 196 197
    198 199 200 211 213 215 217 240 241 244 245 254 255 260 261 262
    263 264 265 266 271 272 276 277 279 280
DECLARE (354) 47 48 49 50 240 241 244 245 254 255
BSUB (355) 49 50 53 54 242 243 244 245
APOSTROPHE (356) 247
LIB (357) 43
UNSAFE (358) 276
SAFE (359) 277
SHARED (360) 274
ATM_ADD_ASSIGN_T (361) 69
ATM_SUB_ASSIGN_T (362) 70


Nonterminals, with rules where they appear

$accept (108)
    on left: 0
translation_unit (109)
    on left: 1 2, on right: 0 2
initial_declaration (110)
    on left: 3 4 5 6 7, on right: 1 7
require_list (111)
    on left: 8 9, on right: 4 5 9
require_declaration (112)
    on left: 10, on right: 8 9
package_name (113)
    on left: 11 12, on right: 10 12 15
rename_list (114)
    on left: 13 14, on right: 4 6 14
rename_declaration (115)
    on left: 15, on right: 13 14
definition_or_statement (116)
    on left: 16 17 18 19 20 21, on right: 2
basic_type_specifier (117)
    on left: 22 23 24 25 26 27 28 29, on right: 31 36 132 133
identifier_type_specifier (118)
    on left: 30, on right: 38 134 135 206 207
array_type_specifier (119)
    on left: 31 32 33 34, on right: 33 37
template_type_specifier (120)
    on left: 35, on right: 34 39 136 137
type_specifier (121)
    on left: 36 37 38 39, on right: 40 41 47 48 51 52 56 57 103 114
    194 197 198 199 200 238 239 240 241 260 261 262 263 264 265 266
    272
type_list (122)
    on left: 40 41, on right: 35 41
lib_function (123)
    on left: 43, on right: 7
$@1 (124)
    on left: 42, on right: 43
lib_function_declaration_list (125)
    on left: 44 45 46, on right: 43 45 46
function_declaration (126)
    on left: 47 48 49 50, on right: 45 55
function_definition (127)
    on left: 51 52 53 54 55, on right: 16
parameter_list (128)
    on left: 56 57, on right: 47 49 51 53 57 238 240 242 244 252 254
    265
argument_list (129)
    on left: 58 59, on right: 59 111 127 129
statement_list (130)
    on left: 60 61, on right: 61 202 279
expression (131)
    on left: 62 63, on right: 63 108 109 113 140 146 160 161 162 163
    166 169 177 179 180 182 195 198 200 259 271
assignment_expression (132)
    on left: 64 65, on right: 58 59 62 63 65 144 145 175 176
assignment_operator (133)
    on left: 66 67 68 69 70 71 72 73, on right: 65
logical_or_expression (134)
    on left: 74 75, on right: 64 75
logical_and_expression (135)
    on left: 76 77, on right: 74 75 77
equality_expression (136)
    on left: 78 79 80, on right: 76 77 79 80
relational_expression (137)
    on left: 81 82 83 84 85, on right: 78 79 80 82 83 84 85
additive_expression (138)
    on left: 86 87 88, on right: 81 82 83 84 85 87 88
multiplicative_expression (139)
    on left: 89 90 91 92 93 94 95, on right: 86 87 88 90 91 92 93 94
    95
unary_expression (140)
    on left: 96 97 98 99, on right: 89 90 91 92 93 94 95 97 98 99
postfix_expression (141)
    on left: 100 101 102 103, on right: 96
primary_expression (142)
    on left: 104 105 106 107, on right: 65 100 101 102 103 110 111
    112 114
primary_no_new_array (143)
    on left: 108 109 110 111 112 113 114 115 116 117 118 119 120 121
    122 123 124 125 126 127 128 129, on right: 104 108
array_literal (144)
    on left: 130 131, on right: 122
array_creation (145)
    on left: 132 133 134 135 136 137, on right: 105
dimension_expression_list (146)
    on left: 138 139, on right: 132 133 134 135 136 137 139
dimension_expression (147)
    on left: 140, on right: 138 139
dimension_list (148)
    on left: 141 142, on right: 133 135 137 142
expression_list (149)
    on left: 143 144 145, on right: 130 131 145 176
statement (150)
    on left: 146 147 148 149 150 151 152 153 154 155 156 157 158 159,
    on right: 18 60 61
if_statement (151)
    on left: 160 161 162 163, on right: 147
elsif_list (152)
    on left: 164 165, on right: 162 163 165
elsif (153)
    on left: 166, on right: 164 165
label_opt (154)
    on left: 167 168, on right: 177 178 179 180
switch_statement (155)
    on left: 169, on right: 148
case_list (156)
    on left: 170 171, on right: 169 171
one_case (157)
    on left: 172, on right: 170 171
default_opt (158)
    on left: 173 174, on right: 169
case_expression_list (159)
    on left: 175 176, on right: 172
while_statement (160)
    on left: 177, on right: 149
for_statement (161)
    on left: 178, on right: 150
do_while_statement (162)
    on left: 179, on right: 151
foreach_statement (163)
    on left: 180, on right: 152
expression_opt (164)
    on left: 181 182, on right: 178 183
return_statement (165)
    on left: 183, on right: 153
identifier_opt (166)
    on left: 184 185, on right: 186 187
break_statement (167)
    on left: 186, on right: 154
continue_statement (168)
    on left: 187, on right: 155
try_statement (169)
    on left: 188 189 190, on right: 156
catch_list (170)
    on left: 191 192, on right: 188 190 192
catch_clause (171)
    on left: 194, on right: 191 192
@2 (172)
    on left: 193, on right: 194
throw_statement (173)
    on left: 195 196, on right: 157
declaration_statement (174)
    on left: 197 198 199 200, on right: 158
block (175)
    on left: 202 203, on right: 179 180 189
@3 (176)
    on left: 201, on right: 202
template_def_list (177)
    on left: 204 205 206 207, on right: 205 207 208
template_list (178)
    on left: 208 209, on right: 211 213 215 217
class_definition (179)
    on left: 211 213 215 217, on right: 17 46
$@4 (180)
    on left: 210, on right: 211
$@5 (181)
    on left: 212, on right: 213
$@6 (182)
    on left: 214, on right: 215
$@7 (183)
    on left: 216, on right: 217
class_or_member_modifier_list (184)
    on left: 218 219, on right: 213 217 219 235 237 261 263 264
class_or_member_modifier (185)
    on left: 220 221 222 223, on right: 218 219
class_or_interface (186)
    on left: 224 225, on right: 211 213 215 217
extends (187)
    on left: 226 227, on right: 211 213 215 217
extends_list (188)
    on left: 228 229, on right: 227 229
member_declaration_list (189)
    on left: 230 231, on right: 211 213 231
member_declaration (190)
    on left: 232 233, on right: 230 231
method_member (191)
    on left: 234 235 236 237, on right: 232
method_function_definition (192)
    on left: 238 239 240 241 242 243 244 245, on right: 234 235
apostrophe (193)
    on left: 246 247, on right: 47 48 49 50 51 52 53 54 265 266
throws_clause (194)
    on left: 248 249, on right: 47 48 49 50 51 52 53 54 238 239 240
    241 242 243 244 245 252 253 254 255 265 266
exception_list (195)
    on left: 250 251, on right: 249 251
constructor_definition (196)
    on left: 252 253 254 255, on right: 236 237
access_modifier (197)
    on left: 256 257, on right: 220
initializer_opt (198)
    on left: 258 259, on right: 260 261 262 263 264
field_member (199)
    on left: 260 261 262 263 264, on right: 233
delegate_definition (200)
    on left: 265 266, on right: 19
enum_definition (201)
    on left: 267 268, on right: 20
enumerator_list (202)
    on left: 269 270, on right: 267 268 270
const_definition (203)
    on left: 271 272, on right: 21
shared (204)
    on left: 273 274, on right: 197 198 211 213 215 217
unsafe (205)
    on left: 275 276 277, on right: 279
myblock (206)
    on left: 279 280, on right: 51 52 53 54 160 161 162 163 166 172
    174 177 178 188 189 190 194 238 239 242 243 252 253
@8 (207)
    on left: 278, on right: 279


state 0

    0 $accept: . translation_unit $end

    REQUIRE  shift, and go to state 1
    RENAME   shift, and go to state 2

    $default  reduce using rule 3 (initial_declaration)

    translation_unit     go to state 3
    initial_declaration  go to state 4
    require_list         go to state 5
    require_declaration  go to state 6
    rename_list          go to state 7
    rename_declaration   go to state 8


state 1

   10 require_declaration: REQUIRE . package_name CR

    IDENTIFIER  shift, and go to state 9

    package_name  go to state 10


state 2

   15 rename_declaration: RENAME . package_name IDENTIFIER CR

    IDENTIFIER  shift, and go to state 9

    package_name  go to state 11


state 3

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . definition_or_statement

    $end            shift, and go to state 12
    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    DELEGATE        shift, and go to state 37
    FINAL           shift, and go to state 38
    ENUM            shift, and go to state 39
    CONST           shift, and go to state 40
    FUNCTION        shift, and go to state 41
    DIM             shift, and go to state 42
    CR              shift, and go to state 43
    DECLARE         shift, and go to state 44
    BSUB            shift, and go to state 45
    SHARED          shift, and go to state 46

    WHILE     reduce using rule 167 (label_opt)
    DO_T      reduce using rule 167 (label_opt)
    FOR       reduce using rule 167 (label_opt)
    FOREACH   reduce using rule 167 (label_opt)
    $default  reduce using rule 273 (shared)

    definition_or_statement    go to state 47
    function_declaration       go to state 48
    function_definition        go to state 49
    expression                 go to state 50
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    statement                  go to state 64
    if_statement               go to state 65
    label_opt                  go to state 66
    switch_statement           go to state 67
    while_statement            go to state 68
    for_statement              go to state 69
    do_while_statement         go to state 70
    foreach_statement          go to state 71
    return_statement           go to state 72
    break_statement            go to state 73
    continue_statement         go to state 74
    try_statement              go to state 75
    throw_statement            go to state 76
    declaration_statement      go to state 77
    class_definition           go to state 78
    delegate_definition        go to state 79
    enum_definition            go to state 80
    const_definition           go to state 81
    shared                     go to state 82


state 4

    1 translation_unit: initial_declaration .
    7 initial_declaration: initial_declaration . lib_function

    LIB  shift, and go to state 83

    $default  reduce using rule 1 (translation_unit)

    lib_function  go to state 84


state 5

    4 initial_declaration: require_list . rename_list
    5                    | require_list .
    9 require_list: require_list . require_declaration

    REQUIRE  shift, and go to state 1
    RENAME   shift, and go to state 2

    $default  reduce using rule 5 (initial_declaration)

    require_declaration  go to state 85
    rename_list          go to state 86
    rename_declaration   go to state 8


state 6

    8 require_list: require_declaration .

    $default  reduce using rule 8 (require_list)


state 7

    6 initial_declaration: rename_list .
   14 rename_list: rename_list . rename_declaration

    RENAME  shift, and go to state 2

    $default  reduce using rule 6 (initial_declaration)

    rename_declaration  go to state 87


state 8

   13 rename_list: rename_declaration .

    $default  reduce using rule 13 (rename_list)


state 9

   11 package_name: IDENTIFIER .

    $default  reduce using rule 11 (package_name)


state 10

   10 require_declaration: REQUIRE package_name . CR
   12 package_name: package_name . DOT IDENTIFIER

    DOT  shift, and go to state 88
    CR   shift, and go to state 89


state 11

   12 package_name: package_name . DOT IDENTIFIER
   15 rename_declaration: RENAME package_name . IDENTIFIER CR

    IDENTIFIER  shift, and go to state 90
    DOT         shift, and go to state 88


state 12

    0 $accept: translation_unit $end .

    $default  accept


state 13

  115 primary_no_new_array: INT_LITERAL .

    $default  reduce using rule 115 (primary_no_new_array)


state 14

  116 primary_no_new_array: DOUBLE_LITERAL .

    $default  reduce using rule 116 (primary_no_new_array)


state 15

  117 primary_no_new_array: STRING_LITERAL .

    $default  reduce using rule 117 (primary_no_new_array)


state 16

  118 primary_no_new_array: REGEXP_LITERAL .

    $default  reduce using rule 118 (primary_no_new_array)


state 17

  106 primary_expression: IDENTIFIER .
  109 primary_no_new_array: IDENTIFIER . LB expression RB
  168 label_opt: IDENTIFIER . COLON

    LB     shift, and go to state 91
    COLON  shift, and go to state 92

    $default  reduce using rule 106 (primary_expression)


state 18

  107 primary_expression: AUTOVAR .

    $default  reduce using rule 107 (primary_expression)


state 19

  160 if_statement: IF . expression THEN myblock
  161             | IF . expression THEN myblock ELSE myblock
  162             | IF . expression THEN myblock elsif_list
  163             | IF . expression THEN myblock elsif_list ELSE myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 94
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 20

  169 switch_statement: SWITCH . expression CR case_list default_opt

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 95
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 21

  183 return_statement: RETURN_T . expression_opt CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 181 (expression_opt)

    expression                 go to state 96
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_opt             go to state 97


state 22

  186 break_statement: BREAK . identifier_opt CR

    IDENTIFIER  shift, and go to state 98

    $default  reduce using rule 184 (identifier_opt)

    identifier_opt  go to state 99


state 23

  187 continue_statement: CONTINUE . identifier_opt CR

    IDENTIFIER  shift, and go to state 98

    $default  reduce using rule 184 (identifier_opt)

    identifier_opt  go to state 100


state 24

  121 primary_no_new_array: NULL_T .

    $default  reduce using rule 121 (primary_no_new_array)


state 25

  113 primary_no_new_array: LP . expression RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 101
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 26

  130 array_literal: LC . expression_list RC
  131              | LC . expression_list COMMA RC

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 143 (expression_list)

    assignment_expression      go to state 102
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_list            go to state 103


state 27

   97 unary_expression: SUB . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 104
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 28

   99 unary_expression: BIT_NOT . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 106
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 29

  119 primary_no_new_array: TRUE_T .

    $default  reduce using rule 119 (primary_no_new_array)


state 30

  120 primary_no_new_array: FALSE_T .

    $default  reduce using rule 120 (primary_no_new_array)


state 31

   98 unary_expression: EXCLAMATION . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 107
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 32

  188 try_statement: TRY . myblock catch_list FINALLY myblock
  189              | TRY . myblock FINALLY block
  190              | TRY . myblock catch_list

    CR  shift, and go to state 108

    myblock  go to state 109


state 33

  195 throw_statement: THROW . expression CR
  196                | THROW . CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    CR              shift, and go to state 110

    expression                 go to state 111
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 34

  125 primary_no_new_array: NEW . DELEGATE LP RP
  126                     | NEW . IDENTIFIER LP RP
  127                     | NEW . IDENTIFIER LP argument_list RP
  128                     | NEW . IDENTIFIER DOT IDENTIFIER LP RP
  129                     | NEW . IDENTIFIER DOT IDENTIFIER LP argument_list RP
  132 array_creation: NEW . basic_type_specifier dimension_expression_list
  133               | NEW . basic_type_specifier dimension_expression_list dimension_list
  134               | NEW . identifier_type_specifier dimension_expression_list
  135               | NEW . identifier_type_specifier dimension_expression_list dimension_list
  136               | NEW . template_type_specifier dimension_expression_list
  137               | NEW . template_type_specifier dimension_expression_list dimension_list

    IDENTIFIER        shift, and go to state 112
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 120

    basic_type_specifier       go to state 121
    identifier_type_specifier  go to state 122
    template_type_specifier    go to state 123


state 35

  123 primary_no_new_array: THIS_T .

    $default  reduce using rule 123 (primary_no_new_array)


state 36

  124 primary_no_new_array: SUPER_T .

    $default  reduce using rule 124 (primary_no_new_array)


state 37

  265 delegate_definition: DELEGATE . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  266                    | DELEGATE . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 124


state 38

  199 declaration_statement: FINAL . IDENTIFIER AS type_specifier CR
  200                      | FINAL . IDENTIFIER AS type_specifier ASSIGN_T expression CR

    IDENTIFIER  shift, and go to state 125


state 39

  267 enum_definition: ENUM . IDENTIFIER LC enumerator_list RC
  268                | ENUM . IDENTIFIER LC enumerator_list COMMA RC

    IDENTIFIER  shift, and go to state 126


state 40

  271 const_definition: CONST . IDENTIFIER ASSIGN_T expression CR
  272                 | CONST . type_specifier IDENTIFIER CR

    IDENTIFIER        shift, and go to state 127
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 133


state 41

   51 function_definition: FUNCTION . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   52                    | FUNCTION . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 134


state 42

  197 declaration_statement: DIM . IDENTIFIER AS shared type_specifier CR
  198                      | DIM . IDENTIFIER AS shared type_specifier ASSIGN_T expression CR

    IDENTIFIER  shift, and go to state 135


state 43

  159 statement: CR .

    $default  reduce using rule 159 (statement)


state 44

   47 function_declaration: DECLARE . FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   48                     | DECLARE . FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR
   49                     | DECLARE . BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   50                     | DECLARE . BSUB IDENTIFIER LP apostrophe RP throws_clause CR

    FUNCTION  shift, and go to state 136
    BSUB      shift, and go to state 137


state 45

   53 function_definition: BSUB . IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock
   54                    | BSUB . IDENTIFIER LP apostrophe RP throws_clause myblock

    IDENTIFIER  shift, and go to state 138


state 46

  274 shared: SHARED .

    $default  reduce using rule 274 (shared)


state 47

    2 translation_unit: translation_unit definition_or_statement .

    $default  reduce using rule 2 (translation_unit)


state 48

   55 function_definition: function_declaration .

    $default  reduce using rule 55 (function_definition)


state 49

   16 definition_or_statement: function_definition .

    $default  reduce using rule 16 (definition_or_statement)


state 50

   63 expression: expression . COMMA assignment_expression
  146 statement: expression . CR

    COMMA  shift, and go to state 139
    CR     shift, and go to state 140


state 51

   62 expression: assignment_expression .

    $default  reduce using rule 62 (expression)


state 52

   64 assignment_expression: logical_or_expression .
   75 logical_or_expression: logical_or_expression . LOGICAL_OR logical_and_expression

    LOGICAL_OR  shift, and go to state 141

    $default  reduce using rule 64 (assignment_expression)


state 53

   74 logical_or_expression: logical_and_expression .
   77 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 142

    $default  reduce using rule 74 (logical_or_expression)


state 54

   76 logical_and_expression: equality_expression .
   79 equality_expression: equality_expression . EQ relational_expression
   80                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 143
    NE  shift, and go to state 144

    $default  reduce using rule 76 (logical_and_expression)


state 55

   78 equality_expression: relational_expression .
   82 relational_expression: relational_expression . GT additive_expression
   83                      | relational_expression . GE additive_expression
   84                      | relational_expression . LT additive_expression
   85                      | relational_expression . LE additive_expression

    GT  shift, and go to state 145
    GE  shift, and go to state 146
    LT  shift, and go to state 147
    LE  shift, and go to state 148

    $default  reduce using rule 78 (equality_expression)


state 56

   81 relational_expression: additive_expression .
   87 additive_expression: additive_expression . ADD multiplicative_expression
   88                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 149
    SUB  shift, and go to state 150

    $default  reduce using rule 81 (relational_expression)


state 57

   86 additive_expression: multiplicative_expression .
   90 multiplicative_expression: multiplicative_expression . MUL unary_expression
   91                          | multiplicative_expression . DIV unary_expression
   92                          | multiplicative_expression . MOD unary_expression
   93                          | multiplicative_expression . BIT_AND unary_expression
   94                          | multiplicative_expression . BIT_OR unary_expression
   95                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 151
    DIV      shift, and go to state 152
    MOD      shift, and go to state 153
    BIT_AND  shift, and go to state 154
    BIT_OR   shift, and go to state 155
    BIT_XOR  shift, and go to state 156

    $default  reduce using rule 86 (additive_expression)


state 58

   89 multiplicative_expression: unary_expression .

    $default  reduce using rule 89 (multiplicative_expression)


state 59

   96 unary_expression: postfix_expression .

    $default  reduce using rule 96 (unary_expression)


state 60

   65 assignment_expression: primary_expression . assignment_operator assignment_expression
  100 postfix_expression: primary_expression .
  101                   | primary_expression . INCREMENT
  102                   | primary_expression . DECREMENT
  103                   | primary_expression . INSTANCEOF type_specifier
  110 primary_no_new_array: primary_expression . DOT IDENTIFIER
  111                     | primary_expression . LP argument_list RP
  112                     | primary_expression . LP RP
  114                     | primary_expression . DOWN_CAST_BEGIN type_specifier DOWN_CAST_END

    LP                shift, and go to state 157
    ASSIGN_T          shift, and go to state 158
    DOT               shift, and go to state 159
    ADD_ASSIGN_T      shift, and go to state 160
    SUB_ASSIGN_T      shift, and go to state 161
    MUL_ASSIGN_T      shift, and go to state 162
    DIV_ASSIGN_T      shift, and go to state 163
    MOD_ASSIGN_T      shift, and go to state 164
    INCREMENT         shift, and go to state 165
    DECREMENT         shift, and go to state 166
    INSTANCEOF        shift, and go to state 167
    DOWN_CAST_BEGIN   shift, and go to state 168
    ATM_ADD_ASSIGN_T  shift, and go to state 169
    ATM_SUB_ASSIGN_T  shift, and go to state 170

    $default  reduce using rule 100 (postfix_expression)

    assignment_operator  go to state 171


state 61

  104 primary_expression: primary_no_new_array .
  108 primary_no_new_array: primary_no_new_array . LB expression RB

    LB  shift, and go to state 172

    $default  reduce using rule 104 (primary_expression)


state 62

  122 primary_no_new_array: array_literal .

    $default  reduce using rule 122 (primary_no_new_array)


state 63

  105 primary_expression: array_creation .

    $default  reduce using rule 105 (primary_expression)


state 64

   18 definition_or_statement: statement .

    $default  reduce using rule 18 (definition_or_statement)


state 65

  147 statement: if_statement .

    $default  reduce using rule 147 (statement)


state 66

  177 while_statement: label_opt . WHILE expression myblock
  178 for_statement: label_opt . FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock
  179 do_while_statement: label_opt . DO_T block WHILE LP expression RP CR
  180 foreach_statement: label_opt . FOREACH LP IDENTIFIER COLON expression RP block

    WHILE    shift, and go to state 173
    DO_T     shift, and go to state 174
    FOR      shift, and go to state 175
    FOREACH  shift, and go to state 176


state 67

  148 statement: switch_statement .

    $default  reduce using rule 148 (statement)


state 68

  149 statement: while_statement .

    $default  reduce using rule 149 (statement)


state 69

  150 statement: for_statement .

    $default  reduce using rule 150 (statement)


state 70

  151 statement: do_while_statement .

    $default  reduce using rule 151 (statement)


state 71

  152 statement: foreach_statement .

    $default  reduce using rule 152 (statement)


state 72

  153 statement: return_statement .

    $default  reduce using rule 153 (statement)


state 73

  154 statement: break_statement .

    $default  reduce using rule 154 (statement)


state 74

  155 statement: continue_statement .

    $default  reduce using rule 155 (statement)


state 75

  156 statement: try_statement .

    $default  reduce using rule 156 (statement)


state 76

  157 statement: throw_statement .

    $default  reduce using rule 157 (statement)


state 77

  158 statement: declaration_statement .

    $default  reduce using rule 158 (statement)


state 78

   17 definition_or_statement: class_definition .

    $default  reduce using rule 17 (definition_or_statement)


state 79

   19 definition_or_statement: delegate_definition .

    $default  reduce using rule 19 (definition_or_statement)


state 80

   20 definition_or_statement: enum_definition .

    $default  reduce using rule 20 (definition_or_statement)


state 81

   21 definition_or_statement: const_definition .

    $default  reduce using rule 21 (definition_or_statement)


state 82

  211 class_definition: shared . class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list END
  213                 | shared . class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END
  215                 | shared . class_or_interface IDENTIFIER template_list extends CR $@6 END
  217                 | shared . class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 END

    CLASS_T      shift, and go to state 177
    INTERFACE_T  shift, and go to state 178
    PUBLIC_T     shift, and go to state 179
    PRIVATE_T    shift, and go to state 180
    VIRTUAL_T    shift, and go to state 181
    OVERRIDE_T   shift, and go to state 182
    ABSTRACT_T   shift, and go to state 183

    class_or_member_modifier_list  go to state 184
    class_or_member_modifier       go to state 185
    class_or_interface             go to state 186
    access_modifier                go to state 187


state 83

   43 lib_function: LIB . IDENTIFIER $@1 CR lib_function_declaration_list END

    IDENTIFIER  shift, and go to state 188


state 84

    7 initial_declaration: initial_declaration lib_function .

    $default  reduce using rule 7 (initial_declaration)


state 85

    9 require_list: require_list require_declaration .

    $default  reduce using rule 9 (require_list)


state 86

    4 initial_declaration: require_list rename_list .
   14 rename_list: rename_list . rename_declaration

    RENAME  shift, and go to state 2

    $default  reduce using rule 4 (initial_declaration)

    rename_declaration  go to state 87


state 87

   14 rename_list: rename_list rename_declaration .

    $default  reduce using rule 14 (rename_list)


state 88

   12 package_name: package_name DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 189


state 89

   10 require_declaration: REQUIRE package_name CR .

    $default  reduce using rule 10 (require_declaration)


state 90

   15 rename_declaration: RENAME package_name IDENTIFIER . CR

    CR  shift, and go to state 190


state 91

  109 primary_no_new_array: IDENTIFIER LB . expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 191
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 92

  168 label_opt: IDENTIFIER COLON .

    $default  reduce using rule 168 (label_opt)


state 93

  106 primary_expression: IDENTIFIER .
  109 primary_no_new_array: IDENTIFIER . LB expression RB

    LB  shift, and go to state 91

    $default  reduce using rule 106 (primary_expression)


state 94

   63 expression: expression . COMMA assignment_expression
  160 if_statement: IF expression . THEN myblock
  161             | IF expression . THEN myblock ELSE myblock
  162             | IF expression . THEN myblock elsif_list
  163             | IF expression . THEN myblock elsif_list ELSE myblock

    COMMA  shift, and go to state 139
    THEN   shift, and go to state 192


state 95

   63 expression: expression . COMMA assignment_expression
  169 switch_statement: SWITCH expression . CR case_list default_opt

    COMMA  shift, and go to state 139
    CR     shift, and go to state 193


state 96

   63 expression: expression . COMMA assignment_expression
  182 expression_opt: expression .

    COMMA  shift, and go to state 139

    $default  reduce using rule 182 (expression_opt)


state 97

  183 return_statement: RETURN_T expression_opt . CR

    CR  shift, and go to state 194


state 98

  185 identifier_opt: IDENTIFIER .

    $default  reduce using rule 185 (identifier_opt)


state 99

  186 break_statement: BREAK identifier_opt . CR

    CR  shift, and go to state 195


state 100

  187 continue_statement: CONTINUE identifier_opt . CR

    CR  shift, and go to state 196


state 101

   63 expression: expression . COMMA assignment_expression
  113 primary_no_new_array: LP expression . RP

    RP     shift, and go to state 197
    COMMA  shift, and go to state 139


state 102

  144 expression_list: assignment_expression .

    $default  reduce using rule 144 (expression_list)


state 103

  130 array_literal: LC expression_list . RC
  131              | LC expression_list . COMMA RC
  145 expression_list: expression_list . COMMA assignment_expression

    RC     shift, and go to state 198
    COMMA  shift, and go to state 199


state 104

   97 unary_expression: SUB unary_expression .

    $default  reduce using rule 97 (unary_expression)


state 105

  100 postfix_expression: primary_expression .
  101                   | primary_expression . INCREMENT
  102                   | primary_expression . DECREMENT
  103                   | primary_expression . INSTANCEOF type_specifier
  110 primary_no_new_array: primary_expression . DOT IDENTIFIER
  111                     | primary_expression . LP argument_list RP
  112                     | primary_expression . LP RP
  114                     | primary_expression . DOWN_CAST_BEGIN type_specifier DOWN_CAST_END

    LP               shift, and go to state 157
    DOT              shift, and go to state 159
    INCREMENT        shift, and go to state 165
    DECREMENT        shift, and go to state 166
    INSTANCEOF       shift, and go to state 167
    DOWN_CAST_BEGIN  shift, and go to state 168

    $default  reduce using rule 100 (postfix_expression)


state 106

   99 unary_expression: BIT_NOT unary_expression .

    $default  reduce using rule 99 (unary_expression)


state 107

   98 unary_expression: EXCLAMATION unary_expression .

    $default  reduce using rule 98 (unary_expression)


state 108

  279 myblock: CR . unsafe @8 statement_list END
  280        | CR . END

    END     shift, and go to state 200
    UNSAFE  shift, and go to state 201
    SAFE    shift, and go to state 202

    $default  reduce using rule 275 (unsafe)

    unsafe  go to state 203


state 109

  188 try_statement: TRY myblock . catch_list FINALLY myblock
  189              | TRY myblock . FINALLY block
  190              | TRY myblock . catch_list

    CATCH    shift, and go to state 204
    FINALLY  shift, and go to state 205

    catch_list    go to state 206
    catch_clause  go to state 207


state 110

  196 throw_statement: THROW CR .

    $default  reduce using rule 196 (throw_statement)


state 111

   63 expression: expression . COMMA assignment_expression
  195 throw_statement: THROW expression . CR

    COMMA  shift, and go to state 139
    CR     shift, and go to state 208


state 112

   30 identifier_type_specifier: IDENTIFIER .
   35 template_type_specifier: IDENTIFIER . LT type_list GT
  126 primary_no_new_array: NEW IDENTIFIER . LP RP
  127                     | NEW IDENTIFIER . LP argument_list RP
  128                     | NEW IDENTIFIER . DOT IDENTIFIER LP RP
  129                     | NEW IDENTIFIER . DOT IDENTIFIER LP argument_list RP

    LP   shift, and go to state 209
    LT   shift, and go to state 210
    DOT  shift, and go to state 211

    $default  reduce using rule 30 (identifier_type_specifier)


state 113

   22 basic_type_specifier: VOID_T .

    $default  reduce using rule 22 (basic_type_specifier)


state 114

   23 basic_type_specifier: BOOLEAN_T .

    $default  reduce using rule 23 (basic_type_specifier)


state 115

   24 basic_type_specifier: INT_T .

    $default  reduce using rule 24 (basic_type_specifier)


state 116

   25 basic_type_specifier: DOUBLE_T .

    $default  reduce using rule 25 (basic_type_specifier)


state 117

   26 basic_type_specifier: STRING_T .

    $default  reduce using rule 26 (basic_type_specifier)


state 118

   27 basic_type_specifier: VARIENT_T .

    $default  reduce using rule 27 (basic_type_specifier)


state 119

   28 basic_type_specifier: NATIVE_POINTER_T .

    $default  reduce using rule 28 (basic_type_specifier)


state 120

   29 basic_type_specifier: DELEGATE .
  125 primary_no_new_array: NEW DELEGATE . LP RP

    LP  shift, and go to state 212

    $default  reduce using rule 29 (basic_type_specifier)


state 121

  132 array_creation: NEW basic_type_specifier . dimension_expression_list
  133               | NEW basic_type_specifier . dimension_expression_list dimension_list

    LB  shift, and go to state 213

    dimension_expression_list  go to state 214
    dimension_expression       go to state 215


state 122

  134 array_creation: NEW identifier_type_specifier . dimension_expression_list
  135               | NEW identifier_type_specifier . dimension_expression_list dimension_list

    LB  shift, and go to state 213

    dimension_expression_list  go to state 216
    dimension_expression       go to state 215


state 123

  136 array_creation: NEW template_type_specifier . dimension_expression_list
  137               | NEW template_type_specifier . dimension_expression_list dimension_list

    LB  shift, and go to state 213

    dimension_expression_list  go to state 217
    dimension_expression       go to state 215


state 124

  265 delegate_definition: DELEGATE IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  266                    | DELEGATE IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause CR

    LP  shift, and go to state 218


state 125

  199 declaration_statement: FINAL IDENTIFIER . AS type_specifier CR
  200                      | FINAL IDENTIFIER . AS type_specifier ASSIGN_T expression CR

    AS  shift, and go to state 219


state 126

  267 enum_definition: ENUM IDENTIFIER . LC enumerator_list RC
  268                | ENUM IDENTIFIER . LC enumerator_list COMMA RC

    LC  shift, and go to state 220


state 127

   30 identifier_type_specifier: IDENTIFIER .
   32 array_type_specifier: IDENTIFIER . LB RB
   35 template_type_specifier: IDENTIFIER . LT type_list GT
  271 const_definition: CONST IDENTIFIER . ASSIGN_T expression CR

    LB        shift, and go to state 221
    ASSIGN_T  shift, and go to state 222
    LT        shift, and go to state 210

    $default  reduce using rule 30 (identifier_type_specifier)


state 128

   29 basic_type_specifier: DELEGATE .

    $default  reduce using rule 29 (basic_type_specifier)


state 129

   31 array_type_specifier: basic_type_specifier . LB RB
   36 type_specifier: basic_type_specifier .

    LB  shift, and go to state 223

    $default  reduce using rule 36 (type_specifier)


state 130

   38 type_specifier: identifier_type_specifier .

    $default  reduce using rule 38 (type_specifier)


state 131

   33 array_type_specifier: array_type_specifier . LB RB
   37 type_specifier: array_type_specifier .

    LB  shift, and go to state 224

    $default  reduce using rule 37 (type_specifier)


state 132

   34 array_type_specifier: template_type_specifier . LB RB
   39 type_specifier: template_type_specifier .

    LB  shift, and go to state 225

    $default  reduce using rule 39 (type_specifier)


state 133

  272 const_definition: CONST type_specifier . IDENTIFIER CR

    IDENTIFIER  shift, and go to state 226


state 134

   51 function_definition: FUNCTION IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   52                    | FUNCTION IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause myblock

    LP  shift, and go to state 227


state 135

  197 declaration_statement: DIM IDENTIFIER . AS shared type_specifier CR
  198                      | DIM IDENTIFIER . AS shared type_specifier ASSIGN_T expression CR

    AS  shift, and go to state 228


state 136

   47 function_declaration: DECLARE FUNCTION . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   48                     | DECLARE FUNCTION . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 229


state 137

   49 function_declaration: DECLARE BSUB . IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   50                     | DECLARE BSUB . IDENTIFIER LP apostrophe RP throws_clause CR

    IDENTIFIER  shift, and go to state 230


state 138

   53 function_definition: BSUB IDENTIFIER . LP parameter_list apostrophe RP throws_clause myblock
   54                    | BSUB IDENTIFIER . LP apostrophe RP throws_clause myblock

    LP  shift, and go to state 231


state 139

   63 expression: expression COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    assignment_expression      go to state 232
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 140

  146 statement: expression CR .

    $default  reduce using rule 146 (statement)


state 141

   75 logical_or_expression: logical_or_expression LOGICAL_OR . logical_and_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    logical_and_expression     go to state 233
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 142

   77 logical_and_expression: logical_and_expression LOGICAL_AND . equality_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    equality_expression        go to state 234
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 143

   79 equality_expression: equality_expression EQ . relational_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    relational_expression      go to state 235
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 144

   80 equality_expression: equality_expression NE . relational_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    relational_expression      go to state 236
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 145

   82 relational_expression: relational_expression GT . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    additive_expression        go to state 237
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 146

   83 relational_expression: relational_expression GE . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    additive_expression        go to state 238
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 147

   84 relational_expression: relational_expression LT . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    additive_expression        go to state 239
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 148

   85 relational_expression: relational_expression LE . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    additive_expression        go to state 240
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 149

   87 additive_expression: additive_expression ADD . multiplicative_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    multiplicative_expression  go to state 241
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 150

   88 additive_expression: additive_expression SUB . multiplicative_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    multiplicative_expression  go to state 242
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 151

   90 multiplicative_expression: multiplicative_expression MUL . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 243
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 152

   91 multiplicative_expression: multiplicative_expression DIV . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 244
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 153

   92 multiplicative_expression: multiplicative_expression MOD . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 245
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 154

   93 multiplicative_expression: multiplicative_expression BIT_AND . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 246
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 155

   94 multiplicative_expression: multiplicative_expression BIT_OR . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 247
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 156

   95 multiplicative_expression: multiplicative_expression BIT_XOR . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 248
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 157

  111 primary_no_new_array: primary_expression LP . argument_list RP
  112                     | primary_expression LP . RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    RP              shift, and go to state 249
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    argument_list              go to state 250
    assignment_expression      go to state 251
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 158

   66 assignment_operator: ASSIGN_T .

    $default  reduce using rule 66 (assignment_operator)


state 159

  110 primary_no_new_array: primary_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 252


state 160

   67 assignment_operator: ADD_ASSIGN_T .

    $default  reduce using rule 67 (assignment_operator)


state 161

   68 assignment_operator: SUB_ASSIGN_T .

    $default  reduce using rule 68 (assignment_operator)


state 162

   71 assignment_operator: MUL_ASSIGN_T .

    $default  reduce using rule 71 (assignment_operator)


state 163

   72 assignment_operator: DIV_ASSIGN_T .

    $default  reduce using rule 72 (assignment_operator)


state 164

   73 assignment_operator: MOD_ASSIGN_T .

    $default  reduce using rule 73 (assignment_operator)


state 165

  101 postfix_expression: primary_expression INCREMENT .

    $default  reduce using rule 101 (postfix_expression)


state 166

  102 postfix_expression: primary_expression DECREMENT .

    $default  reduce using rule 102 (postfix_expression)


state 167

  103 postfix_expression: primary_expression INSTANCEOF . type_specifier

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 254


state 168

  114 primary_no_new_array: primary_expression DOWN_CAST_BEGIN . type_specifier DOWN_CAST_END

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 255


state 169

   69 assignment_operator: ATM_ADD_ASSIGN_T .

    $default  reduce using rule 69 (assignment_operator)


state 170

   70 assignment_operator: ATM_SUB_ASSIGN_T .

    $default  reduce using rule 70 (assignment_operator)


state 171

   65 assignment_expression: primary_expression assignment_operator . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    assignment_expression      go to state 256
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 172

  108 primary_no_new_array: primary_no_new_array LB . expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 257
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 173

  177 while_statement: label_opt WHILE . expression myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 258
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 174

  179 do_while_statement: label_opt DO_T . block WHILE LP expression RP CR

    LC  shift, and go to state 259

    block  go to state 260


state 175

  178 for_statement: label_opt FOR . expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 181 (expression_opt)

    expression                 go to state 96
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_opt             go to state 261


state 176

  180 foreach_statement: label_opt FOREACH . LP IDENTIFIER COLON expression RP block

    LP  shift, and go to state 262


state 177

  224 class_or_interface: CLASS_T .

    $default  reduce using rule 224 (class_or_interface)


state 178

  225 class_or_interface: INTERFACE_T .

    $default  reduce using rule 225 (class_or_interface)


state 179

  256 access_modifier: PUBLIC_T .

    $default  reduce using rule 256 (access_modifier)


state 180

  257 access_modifier: PRIVATE_T .

    $default  reduce using rule 257 (access_modifier)


state 181

  221 class_or_member_modifier: VIRTUAL_T .

    $default  reduce using rule 221 (class_or_member_modifier)


state 182

  222 class_or_member_modifier: OVERRIDE_T .

    $default  reduce using rule 222 (class_or_member_modifier)


state 183

  223 class_or_member_modifier: ABSTRACT_T .

    $default  reduce using rule 223 (class_or_member_modifier)


state 184

  213 class_definition: shared class_or_member_modifier_list . class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END
  217                 | shared class_or_member_modifier_list . class_or_interface IDENTIFIER template_list extends CR $@7 END
  219 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier

    CLASS_T      shift, and go to state 177
    INTERFACE_T  shift, and go to state 178
    PUBLIC_T     shift, and go to state 179
    PRIVATE_T    shift, and go to state 180
    VIRTUAL_T    shift, and go to state 181
    OVERRIDE_T   shift, and go to state 182
    ABSTRACT_T   shift, and go to state 183

    class_or_member_modifier  go to state 263
    class_or_interface        go to state 264
    access_modifier           go to state 187


state 185

  218 class_or_member_modifier_list: class_or_member_modifier .

    $default  reduce using rule 218 (class_or_member_modifier_list)


state 186

  211 class_definition: shared class_or_interface . IDENTIFIER template_list extends CR $@4 member_declaration_list END
  215                 | shared class_or_interface . IDENTIFIER template_list extends CR $@6 END

    IDENTIFIER  shift, and go to state 265


state 187

  220 class_or_member_modifier: access_modifier .

    $default  reduce using rule 220 (class_or_member_modifier)


state 188

   43 lib_function: LIB IDENTIFIER . $@1 CR lib_function_declaration_list END

    $default  reduce using rule 42 ($@1)

    $@1  go to state 266


state 189

   12 package_name: package_name DOT IDENTIFIER .

    $default  reduce using rule 12 (package_name)


state 190

   15 rename_declaration: RENAME package_name IDENTIFIER CR .

    $default  reduce using rule 15 (rename_declaration)


state 191

   63 expression: expression . COMMA assignment_expression
  109 primary_no_new_array: IDENTIFIER LB expression . RB

    RB     shift, and go to state 267
    COMMA  shift, and go to state 139


state 192

  160 if_statement: IF expression THEN . myblock
  161             | IF expression THEN . myblock ELSE myblock
  162             | IF expression THEN . myblock elsif_list
  163             | IF expression THEN . myblock elsif_list ELSE myblock

    CR  shift, and go to state 108

    myblock  go to state 268


state 193

  169 switch_statement: SWITCH expression CR . case_list default_opt

    CASE  shift, and go to state 269

    case_list  go to state 270
    one_case   go to state 271


state 194

  183 return_statement: RETURN_T expression_opt CR .

    $default  reduce using rule 183 (return_statement)


state 195

  186 break_statement: BREAK identifier_opt CR .

    $default  reduce using rule 186 (break_statement)


state 196

  187 continue_statement: CONTINUE identifier_opt CR .

    $default  reduce using rule 187 (continue_statement)


state 197

  113 primary_no_new_array: LP expression RP .

    $default  reduce using rule 113 (primary_no_new_array)


state 198

  130 array_literal: LC expression_list RC .

    $default  reduce using rule 130 (array_literal)


state 199

  131 array_literal: LC expression_list COMMA . RC
  145 expression_list: expression_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    RC              shift, and go to state 272
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    assignment_expression      go to state 273
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 200

  280 myblock: CR END .

    $default  reduce using rule 280 (myblock)


state 201

  276 unsafe: UNSAFE . CR

    CR  shift, and go to state 274


state 202

  277 unsafe: SAFE . CR

    CR  shift, and go to state 275


state 203

  279 myblock: CR unsafe . @8 statement_list END

    $default  reduce using rule 278 (@8)

    @8  go to state 276


state 204

  194 catch_clause: CATCH . @2 type_specifier IDENTIFIER myblock

    $default  reduce using rule 193 (@2)

    @2  go to state 277


state 205

  189 try_statement: TRY myblock FINALLY . block

    LC  shift, and go to state 259

    block  go to state 278


state 206

  188 try_statement: TRY myblock catch_list . FINALLY myblock
  190              | TRY myblock catch_list .
  192 catch_list: catch_list . catch_clause

    CATCH    shift, and go to state 204
    FINALLY  shift, and go to state 279

    $default  reduce using rule 190 (try_statement)

    catch_clause  go to state 280


state 207

  191 catch_list: catch_clause .

    $default  reduce using rule 191 (catch_list)


state 208

  195 throw_statement: THROW expression CR .

    $default  reduce using rule 195 (throw_statement)


state 209

  126 primary_no_new_array: NEW IDENTIFIER LP . RP
  127                     | NEW IDENTIFIER LP . argument_list RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    RP              shift, and go to state 281
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    argument_list              go to state 282
    assignment_expression      go to state 251
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 210

   35 template_type_specifier: IDENTIFIER LT . type_list GT

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 283
    type_list                  go to state 284


state 211

  128 primary_no_new_array: NEW IDENTIFIER DOT . IDENTIFIER LP RP
  129                     | NEW IDENTIFIER DOT . IDENTIFIER LP argument_list RP

    IDENTIFIER  shift, and go to state 285


state 212

  125 primary_no_new_array: NEW DELEGATE LP . RP

    RP  shift, and go to state 286


state 213

  140 dimension_expression: LB . expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 287
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 214

  132 array_creation: NEW basic_type_specifier dimension_expression_list .
  133               | NEW basic_type_specifier dimension_expression_list . dimension_list
  139 dimension_expression_list: dimension_expression_list . dimension_expression

    LB  shift, and go to state 288

    $default  reduce using rule 132 (array_creation)

    dimension_expression  go to state 289
    dimension_list        go to state 290


state 215

  138 dimension_expression_list: dimension_expression .

    $default  reduce using rule 138 (dimension_expression_list)


state 216

  134 array_creation: NEW identifier_type_specifier dimension_expression_list .
  135               | NEW identifier_type_specifier dimension_expression_list . dimension_list
  139 dimension_expression_list: dimension_expression_list . dimension_expression

    LB  shift, and go to state 288

    $default  reduce using rule 134 (array_creation)

    dimension_expression  go to state 289
    dimension_list        go to state 291


state 217

  136 array_creation: NEW template_type_specifier dimension_expression_list .
  137               | NEW template_type_specifier dimension_expression_list . dimension_list
  139 dimension_expression_list: dimension_expression_list . dimension_expression

    LB  shift, and go to state 288

    $default  reduce using rule 136 (array_creation)

    dimension_expression  go to state 289
    dimension_list        go to state 292


state 218

  265 delegate_definition: DELEGATE IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause CR
  266                    | DELEGATE IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 293
    COMMA       shift, and go to state 294

    $default  reduce using rule 246 (apostrophe)

    parameter_list  go to state 295
    apostrophe      go to state 296


state 219

  199 declaration_statement: FINAL IDENTIFIER AS . type_specifier CR
  200                      | FINAL IDENTIFIER AS . type_specifier ASSIGN_T expression CR

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 297


state 220

  267 enum_definition: ENUM IDENTIFIER LC . enumerator_list RC
  268                | ENUM IDENTIFIER LC . enumerator_list COMMA RC

    IDENTIFIER  shift, and go to state 298

    enumerator_list  go to state 299


state 221

   32 array_type_specifier: IDENTIFIER LB . RB

    RB  shift, and go to state 300


state 222

  271 const_definition: CONST IDENTIFIER ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 301
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 223

   31 array_type_specifier: basic_type_specifier LB . RB

    RB  shift, and go to state 302


state 224

   33 array_type_specifier: array_type_specifier LB . RB

    RB  shift, and go to state 303


state 225

   34 array_type_specifier: template_type_specifier LB . RB

    RB  shift, and go to state 304


state 226

  272 const_definition: CONST type_specifier IDENTIFIER . CR

    CR  shift, and go to state 305


state 227

   51 function_definition: FUNCTION IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause myblock
   52                    | FUNCTION IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 293
    COMMA       shift, and go to state 294

    $default  reduce using rule 246 (apostrophe)

    parameter_list  go to state 306
    apostrophe      go to state 307


state 228

  197 declaration_statement: DIM IDENTIFIER AS . shared type_specifier CR
  198                      | DIM IDENTIFIER AS . shared type_specifier ASSIGN_T expression CR

    SHARED  shift, and go to state 46

    $default  reduce using rule 273 (shared)

    shared  go to state 308


state 229

   47 function_declaration: DECLARE FUNCTION IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   48                     | DECLARE FUNCTION IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause CR

    LP  shift, and go to state 309


state 230

   49 function_declaration: DECLARE BSUB IDENTIFIER . LP parameter_list apostrophe RP throws_clause CR
   50                     | DECLARE BSUB IDENTIFIER . LP apostrophe RP throws_clause CR

    LP  shift, and go to state 310


state 231

   53 function_definition: BSUB IDENTIFIER LP . parameter_list apostrophe RP throws_clause myblock
   54                    | BSUB IDENTIFIER LP . apostrophe RP throws_clause myblock

    IDENTIFIER  shift, and go to state 293
    COMMA       shift, and go to state 294

    $default  reduce using rule 246 (apostrophe)

    parameter_list  go to state 311
    apostrophe      go to state 312


state 232

   63 expression: expression COMMA assignment_expression .

    $default  reduce using rule 63 (expression)


state 233

   75 logical_or_expression: logical_or_expression LOGICAL_OR logical_and_expression .
   77 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 142

    $default  reduce using rule 75 (logical_or_expression)


state 234

   77 logical_and_expression: logical_and_expression LOGICAL_AND equality_expression .
   79 equality_expression: equality_expression . EQ relational_expression
   80                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 143
    NE  shift, and go to state 144

    $default  reduce using rule 77 (logical_and_expression)


state 235

   79 equality_expression: equality_expression EQ relational_expression .
   82 relational_expression: relational_expression . GT additive_expression
   83                      | relational_expression . GE additive_expression
   84                      | relational_expression . LT additive_expression
   85                      | relational_expression . LE additive_expression

    GT  shift, and go to state 145
    GE  shift, and go to state 146
    LT  shift, and go to state 147
    LE  shift, and go to state 148

    $default  reduce using rule 79 (equality_expression)


state 236

   80 equality_expression: equality_expression NE relational_expression .
   82 relational_expression: relational_expression . GT additive_expression
   83                      | relational_expression . GE additive_expression
   84                      | relational_expression . LT additive_expression
   85                      | relational_expression . LE additive_expression

    GT  shift, and go to state 145
    GE  shift, and go to state 146
    LT  shift, and go to state 147
    LE  shift, and go to state 148

    $default  reduce using rule 80 (equality_expression)


state 237

   82 relational_expression: relational_expression GT additive_expression .
   87 additive_expression: additive_expression . ADD multiplicative_expression
   88                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 149
    SUB  shift, and go to state 150

    $default  reduce using rule 82 (relational_expression)


state 238

   83 relational_expression: relational_expression GE additive_expression .
   87 additive_expression: additive_expression . ADD multiplicative_expression
   88                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 149
    SUB  shift, and go to state 150

    $default  reduce using rule 83 (relational_expression)


state 239

   84 relational_expression: relational_expression LT additive_expression .
   87 additive_expression: additive_expression . ADD multiplicative_expression
   88                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 149
    SUB  shift, and go to state 150

    $default  reduce using rule 84 (relational_expression)


state 240

   85 relational_expression: relational_expression LE additive_expression .
   87 additive_expression: additive_expression . ADD multiplicative_expression
   88                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 149
    SUB  shift, and go to state 150

    $default  reduce using rule 85 (relational_expression)


state 241

   87 additive_expression: additive_expression ADD multiplicative_expression .
   90 multiplicative_expression: multiplicative_expression . MUL unary_expression
   91                          | multiplicative_expression . DIV unary_expression
   92                          | multiplicative_expression . MOD unary_expression
   93                          | multiplicative_expression . BIT_AND unary_expression
   94                          | multiplicative_expression . BIT_OR unary_expression
   95                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 151
    DIV      shift, and go to state 152
    MOD      shift, and go to state 153
    BIT_AND  shift, and go to state 154
    BIT_OR   shift, and go to state 155
    BIT_XOR  shift, and go to state 156

    $default  reduce using rule 87 (additive_expression)


state 242

   88 additive_expression: additive_expression SUB multiplicative_expression .
   90 multiplicative_expression: multiplicative_expression . MUL unary_expression
   91                          | multiplicative_expression . DIV unary_expression
   92                          | multiplicative_expression . MOD unary_expression
   93                          | multiplicative_expression . BIT_AND unary_expression
   94                          | multiplicative_expression . BIT_OR unary_expression
   95                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 151
    DIV      shift, and go to state 152
    MOD      shift, and go to state 153
    BIT_AND  shift, and go to state 154
    BIT_OR   shift, and go to state 155
    BIT_XOR  shift, and go to state 156

    $default  reduce using rule 88 (additive_expression)


state 243

   90 multiplicative_expression: multiplicative_expression MUL unary_expression .

    $default  reduce using rule 90 (multiplicative_expression)


state 244

   91 multiplicative_expression: multiplicative_expression DIV unary_expression .

    $default  reduce using rule 91 (multiplicative_expression)


state 245

   92 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 92 (multiplicative_expression)


state 246

   93 multiplicative_expression: multiplicative_expression BIT_AND unary_expression .

    $default  reduce using rule 93 (multiplicative_expression)


state 247

   94 multiplicative_expression: multiplicative_expression BIT_OR unary_expression .

    $default  reduce using rule 94 (multiplicative_expression)


state 248

   95 multiplicative_expression: multiplicative_expression BIT_XOR unary_expression .

    $default  reduce using rule 95 (multiplicative_expression)


state 249

  112 primary_no_new_array: primary_expression LP RP .

    $default  reduce using rule 112 (primary_no_new_array)


state 250

   59 argument_list: argument_list . COMMA assignment_expression
  111 primary_no_new_array: primary_expression LP argument_list . RP

    RP     shift, and go to state 313
    COMMA  shift, and go to state 314


state 251

   58 argument_list: assignment_expression .

    $default  reduce using rule 58 (argument_list)


state 252

  110 primary_no_new_array: primary_expression DOT IDENTIFIER .

    $default  reduce using rule 110 (primary_no_new_array)


state 253

   30 identifier_type_specifier: IDENTIFIER .
   32 array_type_specifier: IDENTIFIER . LB RB
   35 template_type_specifier: IDENTIFIER . LT type_list GT

    LB  shift, and go to state 221
    LT  shift, and go to state 210

    LT        [reduce using rule 30 (identifier_type_specifier)]
    $default  reduce using rule 30 (identifier_type_specifier)


state 254

  103 postfix_expression: primary_expression INSTANCEOF type_specifier .

    $default  reduce using rule 103 (postfix_expression)


state 255

  114 primary_no_new_array: primary_expression DOWN_CAST_BEGIN type_specifier . DOWN_CAST_END

    DOWN_CAST_END  shift, and go to state 315


state 256

   65 assignment_expression: primary_expression assignment_operator assignment_expression .

    $default  reduce using rule 65 (assignment_expression)


state 257

   63 expression: expression . COMMA assignment_expression
  108 primary_no_new_array: primary_no_new_array LB expression . RB

    RB     shift, and go to state 316
    COMMA  shift, and go to state 139


state 258

   63 expression: expression . COMMA assignment_expression
  177 while_statement: label_opt WHILE expression . myblock

    COMMA  shift, and go to state 139
    CR     shift, and go to state 108

    myblock  go to state 317


state 259

  202 block: LC . @3 statement_list RC
  203      | LC . RC

    RC  shift, and go to state 318

    $default  reduce using rule 201 (@3)

    @3  go to state 319


state 260

  179 do_while_statement: label_opt DO_T block . WHILE LP expression RP CR

    WHILE  shift, and go to state 320


state 261

  178 for_statement: label_opt FOR expression_opt . SEMICOLON expression_opt SEMICOLON expression_opt myblock

    SEMICOLON  shift, and go to state 321


state 262

  180 foreach_statement: label_opt FOREACH LP . IDENTIFIER COLON expression RP block

    IDENTIFIER  shift, and go to state 322


state 263

  219 class_or_member_modifier_list: class_or_member_modifier_list class_or_member_modifier .

    $default  reduce using rule 219 (class_or_member_modifier_list)


state 264

  213 class_definition: shared class_or_member_modifier_list class_or_interface . IDENTIFIER template_list extends CR $@5 member_declaration_list END
  217                 | shared class_or_member_modifier_list class_or_interface . IDENTIFIER template_list extends CR $@7 END

    IDENTIFIER  shift, and go to state 323


state 265

  211 class_definition: shared class_or_interface IDENTIFIER . template_list extends CR $@4 member_declaration_list END
  215                 | shared class_or_interface IDENTIFIER . template_list extends CR $@6 END

    LT  shift, and go to state 324

    $default  reduce using rule 209 (template_list)

    template_list  go to state 325


state 266

   43 lib_function: LIB IDENTIFIER $@1 . CR lib_function_declaration_list END

    CR  shift, and go to state 326


state 267

  109 primary_no_new_array: IDENTIFIER LB expression RB .

    $default  reduce using rule 109 (primary_no_new_array)


state 268

  160 if_statement: IF expression THEN myblock .
  161             | IF expression THEN myblock . ELSE myblock
  162             | IF expression THEN myblock . elsif_list
  163             | IF expression THEN myblock . elsif_list ELSE myblock

    ELSE   shift, and go to state 327
    ELSIF  shift, and go to state 328

    $default  reduce using rule 160 (if_statement)

    elsif_list  go to state 329
    elsif       go to state 330


state 269

  172 one_case: CASE . case_expression_list myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 143 (expression_list)

    assignment_expression      go to state 331
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_list            go to state 332
    case_expression_list       go to state 333


state 270

  169 switch_statement: SWITCH expression CR case_list . default_opt
  171 case_list: case_list . one_case

    CASE       shift, and go to state 269
    DEFAULT_T  shift, and go to state 334

    $default  reduce using rule 173 (default_opt)

    one_case     go to state 335
    default_opt  go to state 336


state 271

  170 case_list: one_case .

    $default  reduce using rule 170 (case_list)


state 272

  131 array_literal: LC expression_list COMMA RC .

    $default  reduce using rule 131 (array_literal)


state 273

  145 expression_list: expression_list COMMA assignment_expression .

    $default  reduce using rule 145 (expression_list)


state 274

  276 unsafe: UNSAFE CR .

    $default  reduce using rule 276 (unsafe)


state 275

  277 unsafe: SAFE CR .

    $default  reduce using rule 277 (unsafe)


state 276

  279 myblock: CR unsafe @8 . statement_list END

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    FINAL           shift, and go to state 38
    DIM             shift, and go to state 42
    CR              shift, and go to state 43

    $default  reduce using rule 167 (label_opt)

    statement_list             go to state 337
    expression                 go to state 50
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    statement                  go to state 338
    if_statement               go to state 65
    label_opt                  go to state 66
    switch_statement           go to state 67
    while_statement            go to state 68
    for_statement              go to state 69
    do_while_statement         go to state 70
    foreach_statement          go to state 71
    return_statement           go to state 72
    break_statement            go to state 73
    continue_statement         go to state 74
    try_statement              go to state 75
    throw_statement            go to state 76
    declaration_statement      go to state 77


state 277

  194 catch_clause: CATCH @2 . type_specifier IDENTIFIER myblock

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 339


state 278

  189 try_statement: TRY myblock FINALLY block .

    $default  reduce using rule 189 (try_statement)


state 279

  188 try_statement: TRY myblock catch_list FINALLY . myblock

    CR  shift, and go to state 108

    myblock  go to state 340


state 280

  192 catch_list: catch_list catch_clause .

    $default  reduce using rule 192 (catch_list)


state 281

  126 primary_no_new_array: NEW IDENTIFIER LP RP .

    $default  reduce using rule 126 (primary_no_new_array)


state 282

   59 argument_list: argument_list . COMMA assignment_expression
  127 primary_no_new_array: NEW IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 341
    COMMA  shift, and go to state 314


state 283

   40 type_list: type_specifier .

    $default  reduce using rule 40 (type_list)


state 284

   35 template_type_specifier: IDENTIFIER LT type_list . GT
   41 type_list: type_list . COMMA type_specifier

    COMMA  shift, and go to state 342
    GT     shift, and go to state 343


state 285

  128 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER . LP RP
  129                     | NEW IDENTIFIER DOT IDENTIFIER . LP argument_list RP

    LP  shift, and go to state 344


state 286

  125 primary_no_new_array: NEW DELEGATE LP RP .

    $default  reduce using rule 125 (primary_no_new_array)


state 287

   63 expression: expression . COMMA assignment_expression
  140 dimension_expression: LB expression . RB

    RB     shift, and go to state 345
    COMMA  shift, and go to state 139


state 288

  140 dimension_expression: LB . expression RB
  141 dimension_list: LB . RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    RB              shift, and go to state 346
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 287
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 289

  139 dimension_expression_list: dimension_expression_list dimension_expression .

    $default  reduce using rule 139 (dimension_expression_list)


state 290

  133 array_creation: NEW basic_type_specifier dimension_expression_list dimension_list .
  142 dimension_list: dimension_list . LB RB

    LB  shift, and go to state 347

    $default  reduce using rule 133 (array_creation)


state 291

  135 array_creation: NEW identifier_type_specifier dimension_expression_list dimension_list .
  142 dimension_list: dimension_list . LB RB

    LB  shift, and go to state 347

    $default  reduce using rule 135 (array_creation)


state 292

  137 array_creation: NEW template_type_specifier dimension_expression_list dimension_list .
  142 dimension_list: dimension_list . LB RB

    LB  shift, and go to state 347

    $default  reduce using rule 137 (array_creation)


state 293

   56 parameter_list: IDENTIFIER . AS type_specifier

    AS  shift, and go to state 348


state 294

  247 apostrophe: COMMA . APOSTROPHE

    APOSTROPHE  shift, and go to state 349


state 295

   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  265 delegate_definition: DELEGATE IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause CR

    COMMA  shift, and go to state 350

    $default  reduce using rule 246 (apostrophe)

    apostrophe  go to state 351


state 296

  266 delegate_definition: DELEGATE IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 352


state 297

  199 declaration_statement: FINAL IDENTIFIER AS type_specifier . CR
  200                      | FINAL IDENTIFIER AS type_specifier . ASSIGN_T expression CR

    ASSIGN_T  shift, and go to state 353
    CR        shift, and go to state 354


state 298

  269 enumerator_list: IDENTIFIER .

    $default  reduce using rule 269 (enumerator_list)


state 299

  267 enum_definition: ENUM IDENTIFIER LC enumerator_list . RC
  268                | ENUM IDENTIFIER LC enumerator_list . COMMA RC
  270 enumerator_list: enumerator_list . COMMA IDENTIFIER

    RC     shift, and go to state 355
    COMMA  shift, and go to state 356


state 300

   32 array_type_specifier: IDENTIFIER LB RB .

    $default  reduce using rule 32 (array_type_specifier)


state 301

   63 expression: expression . COMMA assignment_expression
  271 const_definition: CONST IDENTIFIER ASSIGN_T expression . CR

    COMMA  shift, and go to state 139
    CR     shift, and go to state 357


state 302

   31 array_type_specifier: basic_type_specifier LB RB .

    $default  reduce using rule 31 (array_type_specifier)


state 303

   33 array_type_specifier: array_type_specifier LB RB .

    $default  reduce using rule 33 (array_type_specifier)


state 304

   34 array_type_specifier: template_type_specifier LB RB .

    $default  reduce using rule 34 (array_type_specifier)


state 305

  272 const_definition: CONST type_specifier IDENTIFIER CR .

    $default  reduce using rule 272 (const_definition)


state 306

   51 function_definition: FUNCTION IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause myblock
   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 350

    $default  reduce using rule 246 (apostrophe)

    apostrophe  go to state 358


state 307

   52 function_definition: FUNCTION IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause myblock

    RP  shift, and go to state 359


state 308

  197 declaration_statement: DIM IDENTIFIER AS shared . type_specifier CR
  198                      | DIM IDENTIFIER AS shared . type_specifier ASSIGN_T expression CR

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 360


state 309

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause CR
   48                     | DECLARE FUNCTION IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 293
    COMMA       shift, and go to state 294

    $default  reduce using rule 246 (apostrophe)

    parameter_list  go to state 361
    apostrophe      go to state 362


state 310

   49 function_declaration: DECLARE BSUB IDENTIFIER LP . parameter_list apostrophe RP throws_clause CR
   50                     | DECLARE BSUB IDENTIFIER LP . apostrophe RP throws_clause CR

    IDENTIFIER  shift, and go to state 293
    COMMA       shift, and go to state 294

    $default  reduce using rule 246 (apostrophe)

    parameter_list  go to state 363
    apostrophe      go to state 364


state 311

   53 function_definition: BSUB IDENTIFIER LP parameter_list . apostrophe RP throws_clause myblock
   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 350

    $default  reduce using rule 246 (apostrophe)

    apostrophe  go to state 365


state 312

   54 function_definition: BSUB IDENTIFIER LP apostrophe . RP throws_clause myblock

    RP  shift, and go to state 366


state 313

  111 primary_no_new_array: primary_expression LP argument_list RP .

    $default  reduce using rule 111 (primary_no_new_array)


state 314

   59 argument_list: argument_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    assignment_expression      go to state 367
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 315

  114 primary_no_new_array: primary_expression DOWN_CAST_BEGIN type_specifier DOWN_CAST_END .

    $default  reduce using rule 114 (primary_no_new_array)


state 316

  108 primary_no_new_array: primary_no_new_array LB expression RB .

    $default  reduce using rule 108 (primary_no_new_array)


state 317

  177 while_statement: label_opt WHILE expression myblock .

    $default  reduce using rule 177 (while_statement)


state 318

  203 block: LC RC .

    $default  reduce using rule 203 (block)


state 319

  202 block: LC @3 . statement_list RC

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    FINAL           shift, and go to state 38
    DIM             shift, and go to state 42
    CR              shift, and go to state 43

    $default  reduce using rule 167 (label_opt)

    statement_list             go to state 368
    expression                 go to state 50
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    statement                  go to state 338
    if_statement               go to state 65
    label_opt                  go to state 66
    switch_statement           go to state 67
    while_statement            go to state 68
    for_statement              go to state 69
    do_while_statement         go to state 70
    foreach_statement          go to state 71
    return_statement           go to state 72
    break_statement            go to state 73
    continue_statement         go to state 74
    try_statement              go to state 75
    throw_statement            go to state 76
    declaration_statement      go to state 77


state 320

  179 do_while_statement: label_opt DO_T block WHILE . LP expression RP CR

    LP  shift, and go to state 369


state 321

  178 for_statement: label_opt FOR expression_opt SEMICOLON . expression_opt SEMICOLON expression_opt myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 181 (expression_opt)

    expression                 go to state 96
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_opt             go to state 370


state 322

  180 foreach_statement: label_opt FOREACH LP IDENTIFIER . COLON expression RP block

    COLON  shift, and go to state 371


state 323

  213 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER . template_list extends CR $@5 member_declaration_list END
  217                 | shared class_or_member_modifier_list class_or_interface IDENTIFIER . template_list extends CR $@7 END

    LT  shift, and go to state 324

    $default  reduce using rule 209 (template_list)

    template_list  go to state 372


state 324

  208 template_list: LT . template_def_list GT

    IDENTIFIER  shift, and go to state 373

    template_def_list  go to state 374


state 325

  211 class_definition: shared class_or_interface IDENTIFIER template_list . extends CR $@4 member_declaration_list END
  215                 | shared class_or_interface IDENTIFIER template_list . extends CR $@6 END

    COLON  shift, and go to state 375

    $default  reduce using rule 226 (extends)

    extends  go to state 376


state 326

   43 lib_function: LIB IDENTIFIER $@1 CR . lib_function_declaration_list END

    $default  reduce using rule 44 (lib_function_declaration_list)

    lib_function_declaration_list  go to state 377


state 327

  161 if_statement: IF expression THEN myblock ELSE . myblock

    CR  shift, and go to state 108

    myblock  go to state 378


state 328

  166 elsif: ELSIF . expression THEN myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 379
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 329

  162 if_statement: IF expression THEN myblock elsif_list .
  163             | IF expression THEN myblock elsif_list . ELSE myblock
  165 elsif_list: elsif_list . elsif

    ELSE   shift, and go to state 380
    ELSIF  shift, and go to state 328

    $default  reduce using rule 162 (if_statement)

    elsif  go to state 381


state 330

  164 elsif_list: elsif .

    $default  reduce using rule 164 (elsif_list)


state 331

  144 expression_list: assignment_expression .
  175 case_expression_list: assignment_expression .

    CR        reduce using rule 175 (case_expression_list)
    $default  reduce using rule 144 (expression_list)


state 332

  145 expression_list: expression_list . COMMA assignment_expression
  176 case_expression_list: expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 382


state 333

  172 one_case: CASE case_expression_list . myblock

    CR  shift, and go to state 108

    myblock  go to state 383


state 334

  174 default_opt: DEFAULT_T . myblock

    CR  shift, and go to state 108

    myblock  go to state 384


state 335

  171 case_list: case_list one_case .

    $default  reduce using rule 171 (case_list)


state 336

  169 switch_statement: SWITCH expression CR case_list default_opt .

    $default  reduce using rule 169 (switch_statement)


state 337

   61 statement_list: statement_list . statement
  279 myblock: CR unsafe @8 statement_list . END

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    FINAL           shift, and go to state 38
    DIM             shift, and go to state 42
    END             shift, and go to state 385
    CR              shift, and go to state 43

    $default  reduce using rule 167 (label_opt)

    expression                 go to state 50
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    statement                  go to state 386
    if_statement               go to state 65
    label_opt                  go to state 66
    switch_statement           go to state 67
    while_statement            go to state 68
    for_statement              go to state 69
    do_while_statement         go to state 70
    foreach_statement          go to state 71
    return_statement           go to state 72
    break_statement            go to state 73
    continue_statement         go to state 74
    try_statement              go to state 75
    throw_statement            go to state 76
    declaration_statement      go to state 77


state 338

   60 statement_list: statement .

    $default  reduce using rule 60 (statement_list)


state 339

  194 catch_clause: CATCH @2 type_specifier . IDENTIFIER myblock

    IDENTIFIER  shift, and go to state 387


state 340

  188 try_statement: TRY myblock catch_list FINALLY myblock .

    $default  reduce using rule 188 (try_statement)


state 341

  127 primary_no_new_array: NEW IDENTIFIER LP argument_list RP .

    $default  reduce using rule 127 (primary_no_new_array)


state 342

   41 type_list: type_list COMMA . type_specifier

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 388


state 343

   35 template_type_specifier: IDENTIFIER LT type_list GT .

    $default  reduce using rule 35 (template_type_specifier)


state 344

  128 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP . RP
  129                     | NEW IDENTIFIER DOT IDENTIFIER LP . argument_list RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    RP              shift, and go to state 389
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    argument_list              go to state 390
    assignment_expression      go to state 251
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 345

  140 dimension_expression: LB expression RB .

    $default  reduce using rule 140 (dimension_expression)


state 346

  141 dimension_list: LB RB .

    $default  reduce using rule 141 (dimension_list)


state 347

  142 dimension_list: dimension_list LB . RB

    RB  shift, and go to state 391


state 348

   56 parameter_list: IDENTIFIER AS . type_specifier

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 392


state 349

  247 apostrophe: COMMA APOSTROPHE .

    $default  reduce using rule 247 (apostrophe)


state 350

   57 parameter_list: parameter_list COMMA . IDENTIFIER AS type_specifier
  247 apostrophe: COMMA . APOSTROPHE

    IDENTIFIER  shift, and go to state 393
    APOSTROPHE  shift, and go to state 349


state 351

  265 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 394


state 352

  266 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 395


state 353

  200 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 396
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 354

  199 declaration_statement: FINAL IDENTIFIER AS type_specifier CR .

    $default  reduce using rule 199 (declaration_statement)


state 355

  267 enum_definition: ENUM IDENTIFIER LC enumerator_list RC .

    $default  reduce using rule 267 (enum_definition)


state 356

  268 enum_definition: ENUM IDENTIFIER LC enumerator_list COMMA . RC
  270 enumerator_list: enumerator_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 397
    RC          shift, and go to state 398


state 357

  271 const_definition: CONST IDENTIFIER ASSIGN_T expression CR .

    $default  reduce using rule 271 (const_definition)


state 358

   51 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause myblock

    RP  shift, and go to state 399


state 359

   52 function_definition: FUNCTION IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 400


state 360

  197 declaration_statement: DIM IDENTIFIER AS shared type_specifier . CR
  198                      | DIM IDENTIFIER AS shared type_specifier . ASSIGN_T expression CR

    ASSIGN_T  shift, and go to state 401
    CR        shift, and go to state 402


state 361

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause CR
   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 350

    $default  reduce using rule 246 (apostrophe)

    apostrophe  go to state 403


state 362

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 404


state 363

   49 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list . apostrophe RP throws_clause CR
   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 350

    $default  reduce using rule 246 (apostrophe)

    apostrophe  go to state 405


state 364

   50 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe . RP throws_clause CR

    RP  shift, and go to state 406


state 365

   53 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe . RP throws_clause myblock

    RP  shift, and go to state 407


state 366

   54 function_definition: BSUB IDENTIFIER LP apostrophe RP . throws_clause myblock

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 409


state 367

   59 argument_list: argument_list COMMA assignment_expression .

    $default  reduce using rule 59 (argument_list)


state 368

   61 statement_list: statement_list . statement
  202 block: LC @3 statement_list . RC

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    RC              shift, and go to state 410
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    FINAL           shift, and go to state 38
    DIM             shift, and go to state 42
    CR              shift, and go to state 43

    $default  reduce using rule 167 (label_opt)

    expression                 go to state 50
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    statement                  go to state 386
    if_statement               go to state 65
    label_opt                  go to state 66
    switch_statement           go to state 67
    while_statement            go to state 68
    for_statement              go to state 69
    do_while_statement         go to state 70
    foreach_statement          go to state 71
    return_statement           go to state 72
    break_statement            go to state 73
    continue_statement         go to state 74
    try_statement              go to state 75
    throw_statement            go to state 76
    declaration_statement      go to state 77


state 369

  179 do_while_statement: label_opt DO_T block WHILE LP . expression RP CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 411
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 370

  178 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt . SEMICOLON expression_opt myblock

    SEMICOLON  shift, and go to state 412


state 371

  180 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON . expression RP block

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 413
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 372

  213 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list . extends CR $@5 member_declaration_list END
  217                 | shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list . extends CR $@7 END

    COLON  shift, and go to state 375

    $default  reduce using rule 226 (extends)

    extends  go to state 414


state 373

  204 template_def_list: IDENTIFIER .
  206                  | IDENTIFIER . COLON identifier_type_specifier

    COLON  shift, and go to state 415

    $default  reduce using rule 204 (template_def_list)


state 374

  205 template_def_list: template_def_list . COMMA IDENTIFIER
  207                  | template_def_list . COMMA IDENTIFIER COLON identifier_type_specifier
  208 template_list: LT template_def_list . GT

    COMMA  shift, and go to state 416
    GT     shift, and go to state 417


state 375

  227 extends: COLON . extends_list

    IDENTIFIER  shift, and go to state 418

    extends_list  go to state 419


state 376

  211 class_definition: shared class_or_interface IDENTIFIER template_list extends . CR $@4 member_declaration_list END
  215                 | shared class_or_interface IDENTIFIER template_list extends . CR $@6 END

    CR  shift, and go to state 420


state 377

   43 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list . END
   45 lib_function_declaration_list: lib_function_declaration_list . function_declaration
   46                              | lib_function_declaration_list . class_definition

    END      shift, and go to state 421
    DECLARE  shift, and go to state 44
    SHARED   shift, and go to state 46

    $default  reduce using rule 273 (shared)

    function_declaration  go to state 422
    class_definition      go to state 423
    shared                go to state 82


state 378

  161 if_statement: IF expression THEN myblock ELSE myblock .

    $default  reduce using rule 161 (if_statement)


state 379

   63 expression: expression . COMMA assignment_expression
  166 elsif: ELSIF expression . THEN myblock

    COMMA  shift, and go to state 139
    THEN   shift, and go to state 424


state 380

  163 if_statement: IF expression THEN myblock elsif_list ELSE . myblock

    CR  shift, and go to state 108

    myblock  go to state 425


state 381

  165 elsif_list: elsif_list elsif .

    $default  reduce using rule 165 (elsif_list)


state 382

  145 expression_list: expression_list COMMA . assignment_expression
  176 case_expression_list: expression_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    assignment_expression      go to state 426
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 383

  172 one_case: CASE case_expression_list myblock .

    $default  reduce using rule 172 (one_case)


state 384

  174 default_opt: DEFAULT_T myblock .

    $default  reduce using rule 174 (default_opt)


state 385

  279 myblock: CR unsafe @8 statement_list END .

    $default  reduce using rule 279 (myblock)


state 386

   61 statement_list: statement_list statement .

    $default  reduce using rule 61 (statement_list)


state 387

  194 catch_clause: CATCH @2 type_specifier IDENTIFIER . myblock

    CR  shift, and go to state 108

    myblock  go to state 427


state 388

   41 type_list: type_list COMMA type_specifier .

    $default  reduce using rule 41 (type_list)


state 389

  128 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP RP .

    $default  reduce using rule 128 (primary_no_new_array)


state 390

   59 argument_list: argument_list . COMMA assignment_expression
  129 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 428
    COMMA  shift, and go to state 314


state 391

  142 dimension_list: dimension_list LB RB .

    $default  reduce using rule 142 (dimension_list)


state 392

   56 parameter_list: IDENTIFIER AS type_specifier .

    $default  reduce using rule 56 (parameter_list)


state 393

   57 parameter_list: parameter_list COMMA IDENTIFIER . AS type_specifier

    AS  shift, and go to state 429


state 394

  265 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 430


state 395

  266 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 431


state 396

   63 expression: expression . COMMA assignment_expression
  200 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T expression . CR

    COMMA  shift, and go to state 139
    CR     shift, and go to state 432


state 397

  270 enumerator_list: enumerator_list COMMA IDENTIFIER .

    $default  reduce using rule 270 (enumerator_list)


state 398

  268 enum_definition: ENUM IDENTIFIER LC enumerator_list COMMA RC .

    $default  reduce using rule 268 (enum_definition)


state 399

   51 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 433


state 400

   52 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 434


state 401

  198 declaration_statement: DIM IDENTIFIER AS shared type_specifier ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 435
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 402

  197 declaration_statement: DIM IDENTIFIER AS shared type_specifier CR .

    $default  reduce using rule 197 (declaration_statement)


state 403

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 436


state 404

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 437


state 405

   49 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe . RP throws_clause CR

    RP  shift, and go to state 438


state 406

   50 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP . throws_clause CR

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 439


state 407

   53 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP . throws_clause myblock

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 440


state 408

  249 throws_clause: THROWS . exception_list

    IDENTIFIER  shift, and go to state 441

    exception_list  go to state 442


state 409

   54 function_definition: BSUB IDENTIFIER LP apostrophe RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 443


state 410

  202 block: LC @3 statement_list RC .

    $default  reduce using rule 202 (block)


state 411

   63 expression: expression . COMMA assignment_expression
  179 do_while_statement: label_opt DO_T block WHILE LP expression . RP CR

    RP     shift, and go to state 444
    COMMA  shift, and go to state 139


state 412

  178 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON . expression_opt myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 181 (expression_opt)

    expression                 go to state 96
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_opt             go to state 445


state 413

   63 expression: expression . COMMA assignment_expression
  180 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression . RP block

    RP     shift, and go to state 446
    COMMA  shift, and go to state 139


state 414

  213 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends . CR $@5 member_declaration_list END
  217                 | shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends . CR $@7 END

    CR  shift, and go to state 447


state 415

  206 template_def_list: IDENTIFIER COLON . identifier_type_specifier

    IDENTIFIER  shift, and go to state 448

    identifier_type_specifier  go to state 449


state 416

  205 template_def_list: template_def_list COMMA . IDENTIFIER
  207                  | template_def_list COMMA . IDENTIFIER COLON identifier_type_specifier

    IDENTIFIER  shift, and go to state 450


state 417

  208 template_list: LT template_def_list GT .

    $default  reduce using rule 208 (template_list)


state 418

  228 extends_list: IDENTIFIER .

    $default  reduce using rule 228 (extends_list)


state 419

  227 extends: COLON extends_list .
  229 extends_list: extends_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 451

    $default  reduce using rule 227 (extends)


state 420

  211 class_definition: shared class_or_interface IDENTIFIER template_list extends CR . $@4 member_declaration_list END
  215                 | shared class_or_interface IDENTIFIER template_list extends CR . $@6 END

    END       reduce using rule 214 ($@6)
    $default  reduce using rule 210 ($@4)

    $@4  go to state 452
    $@6  go to state 453


state 421

   43 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list END .

    $default  reduce using rule 43 (lib_function)


state 422

   45 lib_function_declaration_list: lib_function_declaration_list function_declaration .

    $default  reduce using rule 45 (lib_function_declaration_list)


state 423

   46 lib_function_declaration_list: lib_function_declaration_list class_definition .

    $default  reduce using rule 46 (lib_function_declaration_list)


state 424

  166 elsif: ELSIF expression THEN . myblock

    CR  shift, and go to state 108

    myblock  go to state 454


state 425

  163 if_statement: IF expression THEN myblock elsif_list ELSE myblock .

    $default  reduce using rule 163 (if_statement)


state 426

  145 expression_list: expression_list COMMA assignment_expression .
  176 case_expression_list: expression_list COMMA assignment_expression .

    CR        reduce using rule 176 (case_expression_list)
    $default  reduce using rule 145 (expression_list)


state 427

  194 catch_clause: CATCH @2 type_specifier IDENTIFIER myblock .

    $default  reduce using rule 194 (catch_clause)


state 428

  129 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP argument_list RP .

    $default  reduce using rule 129 (primary_no_new_array)


state 429

   57 parameter_list: parameter_list COMMA IDENTIFIER AS . type_specifier

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 455


state 430

  265 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 456


state 431

  266 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 457


state 432

  200 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T expression CR .

    $default  reduce using rule 200 (declaration_statement)


state 433

   51 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 458


state 434

   52 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 459


state 435

   63 expression: expression . COMMA assignment_expression
  198 declaration_statement: DIM IDENTIFIER AS shared type_specifier ASSIGN_T expression . CR

    COMMA  shift, and go to state 139
    CR     shift, and go to state 460


state 436

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 461


state 437

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 462


state 438

   49 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP . throws_clause CR

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 463


state 439

   50 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause . CR

    CR  shift, and go to state 464


state 440

   53 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 465


state 441

  250 exception_list: IDENTIFIER .

    $default  reduce using rule 250 (exception_list)


state 442

  249 throws_clause: THROWS exception_list .
  251 exception_list: exception_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 466

    $default  reduce using rule 249 (throws_clause)


state 443

   54 function_definition: BSUB IDENTIFIER LP apostrophe RP throws_clause myblock .

    $default  reduce using rule 54 (function_definition)


state 444

  179 do_while_statement: label_opt DO_T block WHILE LP expression RP . CR

    CR  shift, and go to state 467


state 445

  178 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt . myblock

    CR  shift, and go to state 108

    myblock  go to state 468


state 446

  180 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP . block

    LC  shift, and go to state 259

    block  go to state 469


state 447

  213 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR . $@5 member_declaration_list END
  217                 | shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR . $@7 END

    END       reduce using rule 216 ($@7)
    $default  reduce using rule 212 ($@5)

    $@5  go to state 470
    $@7  go to state 471


state 448

   30 identifier_type_specifier: IDENTIFIER .

    $default  reduce using rule 30 (identifier_type_specifier)


state 449

  206 template_def_list: IDENTIFIER COLON identifier_type_specifier .

    $default  reduce using rule 206 (template_def_list)


state 450

  205 template_def_list: template_def_list COMMA IDENTIFIER .
  207                  | template_def_list COMMA IDENTIFIER . COLON identifier_type_specifier

    COLON  shift, and go to state 472

    $default  reduce using rule 205 (template_def_list)


state 451

  229 extends_list: extends_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 473


state 452

  211 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@4 . member_declaration_list END

    PUBLIC_T     shift, and go to state 179
    PRIVATE_T    shift, and go to state 180
    VIRTUAL_T    shift, and go to state 181
    OVERRIDE_T   shift, and go to state 182
    ABSTRACT_T   shift, and go to state 183
    CONSTRUCTOR  shift, and go to state 474
    FINAL        shift, and go to state 475
    FUNCTION     shift, and go to state 476
    DIM          shift, and go to state 477
    DECLARE      shift, and go to state 478
    BSUB         shift, and go to state 479

    class_or_member_modifier_list  go to state 480
    class_or_member_modifier       go to state 185
    member_declaration_list        go to state 481
    member_declaration             go to state 482
    method_member                  go to state 483
    method_function_definition     go to state 484
    constructor_definition         go to state 485
    access_modifier                go to state 187
    field_member                   go to state 486


state 453

  215 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@6 . END

    END  shift, and go to state 487


state 454

  166 elsif: ELSIF expression THEN myblock .

    $default  reduce using rule 166 (elsif)


state 455

   57 parameter_list: parameter_list COMMA IDENTIFIER AS type_specifier .

    $default  reduce using rule 57 (parameter_list)


state 456

  265 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 488


state 457

  266 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 489


state 458

   51 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 490


state 459

   52 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 491


state 460

  198 declaration_statement: DIM IDENTIFIER AS shared type_specifier ASSIGN_T expression CR .

    $default  reduce using rule 198 (declaration_statement)


state 461

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 492


state 462

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 493


state 463

   49 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause . CR

    CR  shift, and go to state 494


state 464

   50 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause CR .

    $default  reduce using rule 50 (function_declaration)


state 465

   53 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock .

    $default  reduce using rule 53 (function_definition)


state 466

  251 exception_list: exception_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 495


state 467

  179 do_while_statement: label_opt DO_T block WHILE LP expression RP CR .

    $default  reduce using rule 179 (do_while_statement)


state 468

  178 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock .

    $default  reduce using rule 178 (for_statement)


state 469

  180 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP block .

    $default  reduce using rule 180 (foreach_statement)


state 470

  213 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 . member_declaration_list END

    PUBLIC_T     shift, and go to state 179
    PRIVATE_T    shift, and go to state 180
    VIRTUAL_T    shift, and go to state 181
    OVERRIDE_T   shift, and go to state 182
    ABSTRACT_T   shift, and go to state 183
    CONSTRUCTOR  shift, and go to state 474
    FINAL        shift, and go to state 475
    FUNCTION     shift, and go to state 476
    DIM          shift, and go to state 477
    DECLARE      shift, and go to state 478
    BSUB         shift, and go to state 479

    class_or_member_modifier_list  go to state 480
    class_or_member_modifier       go to state 185
    member_declaration_list        go to state 496
    member_declaration             go to state 482
    method_member                  go to state 483
    method_function_definition     go to state 484
    constructor_definition         go to state 485
    access_modifier                go to state 187
    field_member                   go to state 486


state 471

  217 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 . END

    END  shift, and go to state 497


state 472

  207 template_def_list: template_def_list COMMA IDENTIFIER COLON . identifier_type_specifier

    IDENTIFIER  shift, and go to state 448

    identifier_type_specifier  go to state 498


state 473

  229 extends_list: extends_list COMMA IDENTIFIER .

    $default  reduce using rule 229 (extends_list)


state 474

  252 constructor_definition: CONSTRUCTOR . IDENTIFIER LP parameter_list RP throws_clause myblock
  253                       | CONSTRUCTOR . IDENTIFIER LP RP throws_clause myblock

    IDENTIFIER  shift, and go to state 499


state 475

  262 field_member: FINAL . IDENTIFIER AS type_specifier initializer_opt CR
  264             | FINAL . class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 500
    PUBLIC_T    shift, and go to state 179
    PRIVATE_T   shift, and go to state 180
    VIRTUAL_T   shift, and go to state 181
    OVERRIDE_T  shift, and go to state 182
    ABSTRACT_T  shift, and go to state 183

    class_or_member_modifier_list  go to state 501
    class_or_member_modifier       go to state 185
    access_modifier                go to state 187


state 476

  238 method_function_definition: FUNCTION . IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock
  239                           | FUNCTION . IDENTIFIER LP RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 502


state 477

  260 field_member: DIM . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 503


state 478

  240 method_function_definition: DECLARE . FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  241                           | DECLARE . FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR
  244                           | DECLARE . BSUB IDENTIFIER LP parameter_list RP throws_clause CR
  245                           | DECLARE . BSUB IDENTIFIER LP RP throws_clause CR
  254 constructor_definition: DECLARE . CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR
  255                       | DECLARE . CONSTRUCTOR IDENTIFIER LP RP throws_clause CR

    CONSTRUCTOR  shift, and go to state 504
    FUNCTION     shift, and go to state 505
    BSUB         shift, and go to state 506


state 479

  242 method_function_definition: BSUB . IDENTIFIER LP parameter_list RP throws_clause myblock
  243                           | BSUB . IDENTIFIER LP RP throws_clause myblock

    IDENTIFIER  shift, and go to state 507


state 480

  219 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier
  235 method_member: class_or_member_modifier_list . method_function_definition
  237              | class_or_member_modifier_list . constructor_definition
  261 field_member: class_or_member_modifier_list . IDENTIFIER AS type_specifier initializer_opt CR
  263             | class_or_member_modifier_list . FINAL IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER   shift, and go to state 508
    PUBLIC_T     shift, and go to state 179
    PRIVATE_T    shift, and go to state 180
    VIRTUAL_T    shift, and go to state 181
    OVERRIDE_T   shift, and go to state 182
    ABSTRACT_T   shift, and go to state 183
    CONSTRUCTOR  shift, and go to state 474
    FINAL        shift, and go to state 509
    FUNCTION     shift, and go to state 476
    DECLARE      shift, and go to state 478
    BSUB         shift, and go to state 479

    class_or_member_modifier    go to state 263
    method_function_definition  go to state 510
    constructor_definition      go to state 511
    access_modifier             go to state 187


state 481

  211 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list . END
  231 member_declaration_list: member_declaration_list . member_declaration

    PUBLIC_T     shift, and go to state 179
    PRIVATE_T    shift, and go to state 180
    VIRTUAL_T    shift, and go to state 181
    OVERRIDE_T   shift, and go to state 182
    ABSTRACT_T   shift, and go to state 183
    CONSTRUCTOR  shift, and go to state 474
    FINAL        shift, and go to state 475
    FUNCTION     shift, and go to state 476
    DIM          shift, and go to state 477
    END          shift, and go to state 512
    DECLARE      shift, and go to state 478
    BSUB         shift, and go to state 479

    class_or_member_modifier_list  go to state 480
    class_or_member_modifier       go to state 185
    member_declaration             go to state 513
    method_member                  go to state 483
    method_function_definition     go to state 484
    constructor_definition         go to state 485
    access_modifier                go to state 187
    field_member                   go to state 486


state 482

  230 member_declaration_list: member_declaration .

    $default  reduce using rule 230 (member_declaration_list)


state 483

  232 member_declaration: method_member .

    $default  reduce using rule 232 (member_declaration)


state 484

  234 method_member: method_function_definition .

    $default  reduce using rule 234 (method_member)


state 485

  236 method_member: constructor_definition .

    $default  reduce using rule 236 (method_member)


state 486

  233 member_declaration: field_member .

    $default  reduce using rule 233 (member_declaration)


state 487

  215 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@6 END .

    $default  reduce using rule 215 (class_definition)


state 488

  265 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 514


state 489

  266 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 266 (delegate_definition)


state 490

   51 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 515


state 491

   52 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 52 (function_definition)


state 492

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 516


state 493

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 517


state 494

   49 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR .

    $default  reduce using rule 49 (function_declaration)


state 495

  251 exception_list: exception_list COMMA IDENTIFIER .

    $default  reduce using rule 251 (exception_list)


state 496

  213 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list . END
  231 member_declaration_list: member_declaration_list . member_declaration

    PUBLIC_T     shift, and go to state 179
    PRIVATE_T    shift, and go to state 180
    VIRTUAL_T    shift, and go to state 181
    OVERRIDE_T   shift, and go to state 182
    ABSTRACT_T   shift, and go to state 183
    CONSTRUCTOR  shift, and go to state 474
    FINAL        shift, and go to state 475
    FUNCTION     shift, and go to state 476
    DIM          shift, and go to state 477
    END          shift, and go to state 518
    DECLARE      shift, and go to state 478
    BSUB         shift, and go to state 479

    class_or_member_modifier_list  go to state 480
    class_or_member_modifier       go to state 185
    member_declaration             go to state 513
    method_member                  go to state 483
    method_function_definition     go to state 484
    constructor_definition         go to state 485
    access_modifier                go to state 187
    field_member                   go to state 486


state 497

  217 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 END .

    $default  reduce using rule 217 (class_definition)


state 498

  207 template_def_list: template_def_list COMMA IDENTIFIER COLON identifier_type_specifier .

    $default  reduce using rule 207 (template_def_list)


state 499

  252 constructor_definition: CONSTRUCTOR IDENTIFIER . LP parameter_list RP throws_clause myblock
  253                       | CONSTRUCTOR IDENTIFIER . LP RP throws_clause myblock

    LP  shift, and go to state 519


state 500

  262 field_member: FINAL IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 520


state 501

  219 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier
  264 field_member: FINAL class_or_member_modifier_list . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 521
    PUBLIC_T    shift, and go to state 179
    PRIVATE_T   shift, and go to state 180
    VIRTUAL_T   shift, and go to state 181
    OVERRIDE_T  shift, and go to state 182
    ABSTRACT_T  shift, and go to state 183

    class_or_member_modifier  go to state 263
    access_modifier           go to state 187


state 502

  238 method_function_definition: FUNCTION IDENTIFIER . LP parameter_list RP AS type_specifier throws_clause myblock
  239                           | FUNCTION IDENTIFIER . LP RP AS type_specifier throws_clause myblock

    LP  shift, and go to state 522


state 503

  260 field_member: DIM IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 523


state 504

  254 constructor_definition: DECLARE CONSTRUCTOR . IDENTIFIER LP parameter_list RP throws_clause CR
  255                       | DECLARE CONSTRUCTOR . IDENTIFIER LP RP throws_clause CR

    IDENTIFIER  shift, and go to state 524


state 505

  240 method_function_definition: DECLARE FUNCTION . IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  241                           | DECLARE FUNCTION . IDENTIFIER LP RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 525


state 506

  244 method_function_definition: DECLARE BSUB . IDENTIFIER LP parameter_list RP throws_clause CR
  245                           | DECLARE BSUB . IDENTIFIER LP RP throws_clause CR

    IDENTIFIER  shift, and go to state 526


state 507

  242 method_function_definition: BSUB IDENTIFIER . LP parameter_list RP throws_clause myblock
  243                           | BSUB IDENTIFIER . LP RP throws_clause myblock

    LP  shift, and go to state 527


state 508

  261 field_member: class_or_member_modifier_list IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 528


state 509

  263 field_member: class_or_member_modifier_list FINAL . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 529


state 510

  235 method_member: class_or_member_modifier_list method_function_definition .

    $default  reduce using rule 235 (method_member)


state 511

  237 method_member: class_or_member_modifier_list constructor_definition .

    $default  reduce using rule 237 (method_member)


state 512

  211 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list END .

    $default  reduce using rule 211 (class_definition)


state 513

  231 member_declaration_list: member_declaration_list member_declaration .

    $default  reduce using rule 231 (member_declaration_list)


state 514

  265 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 265 (delegate_definition)


state 515

   51 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 51 (function_definition)


state 516

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 530


state 517

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 48 (function_declaration)


state 518

  213 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END .

    $default  reduce using rule 213 (class_definition)


state 519

  252 constructor_definition: CONSTRUCTOR IDENTIFIER LP . parameter_list RP throws_clause myblock
  253                       | CONSTRUCTOR IDENTIFIER LP . RP throws_clause myblock

    IDENTIFIER  shift, and go to state 293
    RP          shift, and go to state 531

    parameter_list  go to state 532


state 520

  262 field_member: FINAL IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 533


state 521

  264 field_member: FINAL class_or_member_modifier_list IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 534


state 522

  238 method_function_definition: FUNCTION IDENTIFIER LP . parameter_list RP AS type_specifier throws_clause myblock
  239                           | FUNCTION IDENTIFIER LP . RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 293
    RP          shift, and go to state 535

    parameter_list  go to state 536


state 523

  260 field_member: DIM IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 537


state 524

  254 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER . LP parameter_list RP throws_clause CR
  255                       | DECLARE CONSTRUCTOR IDENTIFIER . LP RP throws_clause CR

    LP  shift, and go to state 538


state 525

  240 method_function_definition: DECLARE FUNCTION IDENTIFIER . LP parameter_list RP AS type_specifier throws_clause CR
  241                           | DECLARE FUNCTION IDENTIFIER . LP RP AS type_specifier throws_clause CR

    LP  shift, and go to state 539


state 526

  244 method_function_definition: DECLARE BSUB IDENTIFIER . LP parameter_list RP throws_clause CR
  245                           | DECLARE BSUB IDENTIFIER . LP RP throws_clause CR

    LP  shift, and go to state 540


state 527

  242 method_function_definition: BSUB IDENTIFIER LP . parameter_list RP throws_clause myblock
  243                           | BSUB IDENTIFIER LP . RP throws_clause myblock

    IDENTIFIER  shift, and go to state 293
    RP          shift, and go to state 541

    parameter_list  go to state 542


state 528

  261 field_member: class_or_member_modifier_list IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 543


state 529

  263 field_member: class_or_member_modifier_list FINAL IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 544


state 530

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 47 (function_declaration)


state 531

  253 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP . throws_clause myblock

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 545


state 532

   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  252 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list . RP throws_clause myblock

    RP     shift, and go to state 546
    COMMA  shift, and go to state 547


state 533

  262 field_member: FINAL IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 548

    $default  reduce using rule 258 (initializer_opt)

    initializer_opt  go to state 549


state 534

  264 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 550


state 535

  239 method_function_definition: FUNCTION IDENTIFIER LP RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 551


state 536

   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  238 method_function_definition: FUNCTION IDENTIFIER LP parameter_list . RP AS type_specifier throws_clause myblock

    RP     shift, and go to state 552
    COMMA  shift, and go to state 547


state 537

  260 field_member: DIM IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 548

    $default  reduce using rule 258 (initializer_opt)

    initializer_opt  go to state 553


state 538

  254 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP . parameter_list RP throws_clause CR
  255                       | DECLARE CONSTRUCTOR IDENTIFIER LP . RP throws_clause CR

    IDENTIFIER  shift, and go to state 293
    RP          shift, and go to state 554

    parameter_list  go to state 555


state 539

  240 method_function_definition: DECLARE FUNCTION IDENTIFIER LP . parameter_list RP AS type_specifier throws_clause CR
  241                           | DECLARE FUNCTION IDENTIFIER LP . RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 293
    RP          shift, and go to state 556

    parameter_list  go to state 557


state 540

  244 method_function_definition: DECLARE BSUB IDENTIFIER LP . parameter_list RP throws_clause CR
  245                           | DECLARE BSUB IDENTIFIER LP . RP throws_clause CR

    IDENTIFIER  shift, and go to state 293
    RP          shift, and go to state 558

    parameter_list  go to state 559


state 541

  243 method_function_definition: BSUB IDENTIFIER LP RP . throws_clause myblock

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 560


state 542

   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  242 method_function_definition: BSUB IDENTIFIER LP parameter_list . RP throws_clause myblock

    RP     shift, and go to state 561
    COMMA  shift, and go to state 547


state 543

  261 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 548

    $default  reduce using rule 258 (initializer_opt)

    initializer_opt  go to state 562


state 544

  263 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 563


state 545

  253 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 564


state 546

  252 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP . throws_clause myblock

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 565


state 547

   57 parameter_list: parameter_list COMMA . IDENTIFIER AS type_specifier

    IDENTIFIER  shift, and go to state 393


state 548

  259 initializer_opt: ASSIGN_T . expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 566
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 549

  262 field_member: FINAL IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 567


state 550

  264 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 548

    $default  reduce using rule 258 (initializer_opt)

    initializer_opt  go to state 568


state 551

  239 method_function_definition: FUNCTION IDENTIFIER LP RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 569


state 552

  238 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 570


state 553

  260 field_member: DIM IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 571


state 554

  255 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP . throws_clause CR

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 572


state 555

   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  254 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list . RP throws_clause CR

    RP     shift, and go to state 573
    COMMA  shift, and go to state 547


state 556

  241 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 574


state 557

   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  240 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list . RP AS type_specifier throws_clause CR

    RP     shift, and go to state 575
    COMMA  shift, and go to state 547


state 558

  245 method_function_definition: DECLARE BSUB IDENTIFIER LP RP . throws_clause CR

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 576


state 559

   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  244 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list . RP throws_clause CR

    RP     shift, and go to state 577
    COMMA  shift, and go to state 547


state 560

  243 method_function_definition: BSUB IDENTIFIER LP RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 578


state 561

  242 method_function_definition: BSUB IDENTIFIER LP parameter_list RP . throws_clause myblock

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 579


state 562

  261 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 580


state 563

  263 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 548

    $default  reduce using rule 258 (initializer_opt)

    initializer_opt  go to state 581


state 564

  253 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP throws_clause myblock .

    $default  reduce using rule 253 (constructor_definition)


state 565

  252 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 582


state 566

   63 expression: expression . COMMA assignment_expression
  259 initializer_opt: ASSIGN_T expression .

    COMMA  shift, and go to state 139

    $default  reduce using rule 259 (initializer_opt)


state 567

  262 field_member: FINAL IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 262 (field_member)


state 568

  264 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 583


state 569

  239 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 584


state 570

  238 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 585


state 571

  260 field_member: DIM IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 260 (field_member)


state 572

  255 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause . CR

    CR  shift, and go to state 586


state 573

  254 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP . throws_clause CR

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 587


state 574

  241 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 588


state 575

  240 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 589


state 576

  245 method_function_definition: DECLARE BSUB IDENTIFIER LP RP throws_clause . CR

    CR  shift, and go to state 590


state 577

  244 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP . throws_clause CR

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 591


state 578

  243 method_function_definition: BSUB IDENTIFIER LP RP throws_clause myblock .

    $default  reduce using rule 243 (method_function_definition)


state 579

  242 method_function_definition: BSUB IDENTIFIER LP parameter_list RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 592


state 580

  261 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 261 (field_member)


state 581

  263 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 593


state 582

  252 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause myblock .

    $default  reduce using rule 252 (constructor_definition)


state 583

  264 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 264 (field_member)


state 584

  239 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 594


state 585

  238 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 595


state 586

  255 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause CR .

    $default  reduce using rule 255 (constructor_definition)


state 587

  254 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause . CR

    CR  shift, and go to state 596


state 588

  241 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 597


state 589

  240 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 253
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 598


state 590

  245 method_function_definition: DECLARE BSUB IDENTIFIER LP RP throws_clause CR .

    $default  reduce using rule 245 (method_function_definition)


state 591

  244 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause . CR

    CR  shift, and go to state 599


state 592

  242 method_function_definition: BSUB IDENTIFIER LP parameter_list RP throws_clause myblock .

    $default  reduce using rule 242 (method_function_definition)


state 593

  263 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 263 (field_member)


state 594

  239 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 239 (method_function_definition)


state 595

  238 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 600


state 596

  254 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR .

    $default  reduce using rule 254 (constructor_definition)


state 597

  241 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 601


state 598

  240 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 408

    $default  reduce using rule 248 (throws_clause)

    throws_clause  go to state 602


state 599

  244 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause CR .

    $default  reduce using rule 244 (method_function_definition)


state 600

  238 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 238 (method_function_definition)


state 601

  241 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR .

    $default  reduce using rule 241 (method_function_definition)


state 602

  240 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 603


state 603

  240 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR .

    $default  reduce using rule 240 (method_function_definition)
