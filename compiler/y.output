State 251 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: initial_declaration
    2                 | translation_unit definition_or_statement

    3 initial_declaration: /* empty */
    4                    | require_list rename_list
    5                    | require_list
    6                    | rename_list
    7                    | initial_declaration lib_function

    8 require_list: require_declaration
    9             | require_list require_declaration

   10 require_declaration: REQUIRE package_name CR

   11 package_name: IDENTIFIER
   12             | package_name DOT IDENTIFIER

   13 rename_list: rename_declaration
   14            | rename_list rename_declaration

   15 rename_declaration: RENAME package_name IDENTIFIER CR

   16 definition_or_statement: function_definition
   17                        | class_definition
   18                        | statement
   19                        | delegate_definition
   20                        | enum_definition
   21                        | const_definition

   22 basic_type_specifier: VOID_T
   23                     | BOOLEAN_T
   24                     | INT_T
   25                     | DOUBLE_T
   26                     | STRING_T
   27                     | VARIENT_T
   28                     | NATIVE_POINTER_T
   29                     | DELEGATE

   30 identifier_type_specifier: IDENTIFIER

   31 array_type_specifier: basic_type_specifier LB RB
   32                     | IDENTIFIER LB RB
   33                     | array_type_specifier LB RB
   34                     | template_type_specifier LB RB

   35 template_type_specifier: IDENTIFIER LT type_list GT

   36 type_specifier: basic_type_specifier
   37               | array_type_specifier
   38               | identifier_type_specifier
   39               | template_type_specifier

   40 type_list: type_specifier
   41          | type_list COMMA type_specifier

   42 $@1: /* empty */

   43 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list END

   44 lib_function_declaration_list: /* empty */
   45                              | lib_function_declaration_list function_declaration
   46                              | lib_function_declaration_list class_definition

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   48                     | DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR
   49                     | DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   50                     | DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause CR

   51 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   52                    | FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock
   53                    | BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock
   54                    | BSUB IDENTIFIER LP apostrophe RP throws_clause myblock
   55                    | function_declaration

   56 parameter_list: IDENTIFIER AS type_specifier
   57               | parameter_list COMMA IDENTIFIER AS type_specifier

   58 argument_list: assignment_expression
   59              | argument_list COMMA assignment_expression

   60 statement_list: statement
   61               | statement_list statement

   62 expression: assignment_expression
   63           | expression COMMA assignment_expression

   64 assignment_expression: logical_or_expression
   65                      | primary_expression assignment_operator assignment_expression

   66 assignment_operator: ASSIGN_T
   67                    | ADD_ASSIGN_T
   68                    | SUB_ASSIGN_T
   69                    | MUL_ASSIGN_T
   70                    | DIV_ASSIGN_T
   71                    | MOD_ASSIGN_T

   72 logical_or_expression: logical_and_expression
   73                      | logical_or_expression LOGICAL_OR logical_and_expression

   74 logical_and_expression: equality_expression
   75                       | logical_and_expression LOGICAL_AND equality_expression

   76 equality_expression: relational_expression
   77                    | equality_expression EQ relational_expression
   78                    | equality_expression NE relational_expression

   79 relational_expression: additive_expression
   80                      | relational_expression GT additive_expression
   81                      | relational_expression GE additive_expression
   82                      | relational_expression LT additive_expression
   83                      | relational_expression LE additive_expression

   84 additive_expression: multiplicative_expression
   85                    | additive_expression ADD multiplicative_expression
   86                    | additive_expression SUB multiplicative_expression

   87 multiplicative_expression: unary_expression
   88                          | multiplicative_expression MUL unary_expression
   89                          | multiplicative_expression DIV unary_expression
   90                          | multiplicative_expression MOD unary_expression
   91                          | multiplicative_expression BIT_AND unary_expression
   92                          | multiplicative_expression BIT_OR unary_expression
   93                          | multiplicative_expression BIT_XOR unary_expression

   94 unary_expression: postfix_expression
   95                 | SUB unary_expression
   96                 | EXCLAMATION unary_expression
   97                 | BIT_NOT unary_expression

   98 postfix_expression: primary_expression
   99                   | primary_expression INCREMENT
  100                   | primary_expression DECREMENT
  101                   | primary_expression INSTANCEOF type_specifier

  102 primary_expression: primary_no_new_array
  103                   | array_creation
  104                   | IDENTIFIER
  105                   | AUTOVAR

  106 primary_no_new_array: primary_no_new_array LB expression RB
  107                     | IDENTIFIER LB expression RB
  108                     | primary_expression DOT IDENTIFIER
  109                     | primary_expression LP argument_list RP
  110                     | primary_expression LP RP
  111                     | LP expression RP
  112                     | primary_expression DOWN_CAST_BEGIN type_specifier DOWN_CAST_END
  113                     | INT_LITERAL
  114                     | DOUBLE_LITERAL
  115                     | STRING_LITERAL
  116                     | REGEXP_LITERAL
  117                     | TRUE_T
  118                     | FALSE_T
  119                     | NULL_T
  120                     | array_literal
  121                     | THIS_T
  122                     | SUPER_T
  123                     | NEW DELEGATE LP RP
  124                     | NEW IDENTIFIER LP RP
  125                     | NEW IDENTIFIER LP argument_list RP
  126                     | NEW IDENTIFIER DOT IDENTIFIER LP RP
  127                     | NEW IDENTIFIER DOT IDENTIFIER LP argument_list RP

  128 array_literal: LC expression_list RC
  129              | LC expression_list COMMA RC

  130 array_creation: NEW basic_type_specifier dimension_expression_list
  131               | NEW basic_type_specifier dimension_expression_list dimension_list
  132               | NEW identifier_type_specifier dimension_expression_list
  133               | NEW identifier_type_specifier dimension_expression_list dimension_list
  134               | NEW template_type_specifier dimension_expression_list
  135               | NEW template_type_specifier dimension_expression_list dimension_list

  136 dimension_expression_list: dimension_expression
  137                          | dimension_expression_list dimension_expression

  138 dimension_expression: LB expression RB

  139 dimension_list: LB RB
  140               | dimension_list LB RB

  141 expression_list: /* empty */
  142                | assignment_expression
  143                | expression_list COMMA assignment_expression

  144 statement: expression CR
  145          | if_statement
  146          | switch_statement
  147          | while_statement
  148          | for_statement
  149          | do_while_statement
  150          | foreach_statement
  151          | return_statement
  152          | break_statement
  153          | continue_statement
  154          | try_statement
  155          | throw_statement
  156          | declaration_statement
  157          | CR

  158 if_statement: IF expression THEN myblock
  159             | IF expression THEN myblock ELSE myblock
  160             | IF expression THEN myblock elsif_list
  161             | IF expression THEN myblock elsif_list ELSE myblock

  162 elsif_list: elsif
  163           | elsif_list elsif

  164 elsif: ELSIF expression THEN myblock

  165 label_opt: /* empty */
  166          | IDENTIFIER COLON

  167 switch_statement: SWITCH expression CR case_list default_opt

  168 case_list: one_case
  169          | case_list one_case

  170 one_case: CASE case_expression_list myblock

  171 default_opt: /* empty */
  172            | DEFAULT_T myblock

  173 case_expression_list: assignment_expression
  174                     | expression_list COMMA assignment_expression

  175 while_statement: label_opt WHILE expression myblock

  176 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock

  177 do_while_statement: label_opt DO_T block WHILE LP expression RP CR

  178 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP block

  179 expression_opt: /* empty */
  180               | expression

  181 return_statement: RETURN_T expression_opt CR

  182 identifier_opt: /* empty */
  183               | IDENTIFIER

  184 break_statement: BREAK identifier_opt CR

  185 continue_statement: CONTINUE identifier_opt CR

  186 try_statement: TRY myblock catch_list FINALLY myblock
  187              | TRY myblock FINALLY block
  188              | TRY myblock catch_list

  189 catch_list: catch_clause
  190           | catch_list catch_clause

  191 @2: /* empty */

  192 catch_clause: CATCH @2 type_specifier IDENTIFIER myblock

  193 throw_statement: THROW expression CR
  194                | THROW CR

  195 declaration_statement: DIM IDENTIFIER AS shared type_specifier CR
  196                      | DIM IDENTIFIER AS shared type_specifier ASSIGN_T expression CR
  197                      | FINAL IDENTIFIER AS type_specifier CR
  198                      | FINAL IDENTIFIER AS type_specifier ASSIGN_T expression CR

  199 @3: /* empty */

  200 block: LC @3 statement_list RC
  201      | LC RC

  202 template_def_list: IDENTIFIER
  203                  | template_def_list COMMA IDENTIFIER
  204                  | IDENTIFIER COLON identifier_type_specifier
  205                  | template_def_list COMMA IDENTIFIER COLON identifier_type_specifier

  206 template_list: LT template_def_list GT
  207              | /* empty */

  208 $@4: /* empty */

  209 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list END

  210 $@5: /* empty */

  211 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END

  212 $@6: /* empty */

  213 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@6 END

  214 $@7: /* empty */

  215 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 END

  216 class_or_member_modifier_list: class_or_member_modifier
  217                              | class_or_member_modifier_list class_or_member_modifier

  218 class_or_member_modifier: access_modifier
  219                         | VIRTUAL_T
  220                         | OVERRIDE_T
  221                         | ABSTRACT_T

  222 class_or_interface: CLASS_T
  223                   | INTERFACE_T

  224 extends: /* empty */
  225        | COLON extends_list

  226 extends_list: IDENTIFIER
  227             | extends_list COMMA IDENTIFIER

  228 member_declaration_list: member_declaration
  229                        | member_declaration_list member_declaration

  230 member_declaration: method_member
  231                   | field_member

  232 method_member: method_function_definition
  233              | class_or_member_modifier_list method_function_definition
  234              | constructor_definition
  235              | class_or_member_modifier_list constructor_definition

  236 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock
  237                           | FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause myblock
  238                           | DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  239                           | DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR
  240                           | BSUB IDENTIFIER LP parameter_list RP throws_clause myblock
  241                           | BSUB IDENTIFIER LP RP throws_clause myblock
  242                           | DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause CR
  243                           | DECLARE BSUB IDENTIFIER LP RP throws_clause CR

  244 apostrophe: /* empty */
  245           | COMMA APOSTROPHE

  246 throws_clause: /* empty */
  247              | THROWS exception_list

  248 exception_list: IDENTIFIER
  249               | exception_list COMMA IDENTIFIER

  250 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause myblock
  251                       | CONSTRUCTOR IDENTIFIER LP RP throws_clause myblock
  252                       | DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR
  253                       | DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause CR

  254 access_modifier: PUBLIC_T
  255                | PRIVATE_T

  256 initializer_opt: /* empty */
  257                | ASSIGN_T expression

  258 field_member: DIM IDENTIFIER AS type_specifier initializer_opt CR
  259             | class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR
  260             | FINAL IDENTIFIER AS type_specifier initializer_opt CR
  261             | class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt CR
  262             | FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR

  263 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  264                    | DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

  265 enum_definition: ENUM IDENTIFIER LC enumerator_list RC
  266                | ENUM IDENTIFIER LC enumerator_list COMMA RC

  267 enumerator_list: IDENTIFIER
  268                | enumerator_list COMMA IDENTIFIER

  269 const_definition: CONST IDENTIFIER ASSIGN_T expression CR
  270                 | CONST type_specifier IDENTIFIER CR

  271 shared: /* empty */
  272       | SHARED

  273 unsafe: /* empty */
  274       | UNSAFE CR
  275       | SAFE CR

  276 @8: /* empty */

  277 myblock: CR unsafe @8 statement_list END
  278        | CR END


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 113
DOUBLE_LITERAL (259) 114
STRING_LITERAL (260) 115
REGEXP_LITERAL (261) 116
IDENTIFIER (262) 11 12 15 30 32 35 43 47 48 49 50 51 52 53 54 56 57
    104 107 108 124 125 126 127 166 178 183 192 195 196 197 198 202
    203 204 205 209 211 213 215 226 227 236 237 238 239 240 241 242
    243 248 249 250 251 252 253 258 259 260 261 262 263 264 265 266
    267 268 269 270
AUTOVAR (263) 105
IF (264) 158 159 160 161
ELSE (265) 159 161
ELSIF (266) 164
SWITCH (267) 167
CASE (268) 170
DEFAULT_T (269) 172
WHILE (270) 175 177
DO_T (271) 177
FOR (272) 176
FOREACH (273) 178
RETURN_T (274) 181
BREAK (275) 184
CONTINUE (276) 185
NULL_T (277) 119
LP (278) 47 48 49 50 51 52 53 54 109 110 111 123 124 125 126 127 177
    178 236 237 238 239 240 241 242 243 250 251 252 253 263 264
RP (279) 47 48 49 50 51 52 53 54 109 110 111 123 124 125 126 127 177
    178 236 237 238 239 240 241 242 243 250 251 252 253 263 264
LC (280) 128 129 200 201 265 266
RC (281) 128 129 200 201 265 266
LB (282) 31 32 33 34 106 107 138 139 140
RB (283) 31 32 33 34 106 107 138 139 140
SEMICOLON (284) 176
COLON (285) 166 178 204 205 225
COMMA (286) 41 57 59 63 129 143 174 203 205 227 245 249 266 268
ASSIGN_T (287) 66 196 198 257 269
LOGICAL_AND (288) 75
LOGICAL_OR (289) 73
EQ (290) 77
NE (291) 78
GT (292) 35 80 206
GE (293) 81
LT (294) 35 82 206
LE (295) 83
ADD (296) 85
SUB (297) 86 95
MUL (298) 88
DIV (299) 89
MOD (300) 90
BIT_AND (301) 91
BIT_OR (302) 92
BIT_XOR (303) 93
BIT_NOT (304) 97
TRUE_T (305) 117
FALSE_T (306) 118
EXCLAMATION (307) 96
DOT (308) 12 108 126 127
ADD_ASSIGN_T (309) 67
SUB_ASSIGN_T (310) 68
MUL_ASSIGN_T (311) 69
DIV_ASSIGN_T (312) 70
MOD_ASSIGN_T (313) 71
INCREMENT (314) 99
DECREMENT (315) 100
TRY (316) 186 187 188
CATCH (317) 192
FINALLY (318) 186 187
THROW (319) 193 194
THROWS (320) 247
VOID_T (321) 22
BOOLEAN_T (322) 23
INT_T (323) 24
DOUBLE_T (324) 25
STRING_T (325) 26
VARIENT_T (326) 27
NATIVE_POINTER_T (327) 28
NEW (328) 123 124 125 126 127 130 131 132 133 134 135
REQUIRE (329) 10
RENAME (330) 15
CLASS_T (331) 222
INTERFACE_T (332) 223
PUBLIC_T (333) 254
PRIVATE_T (334) 255
VIRTUAL_T (335) 219
OVERRIDE_T (336) 220
ABSTRACT_T (337) 221
THIS_T (338) 121
SUPER_T (339) 122
CONSTRUCTOR (340) 250 251 252 253
INSTANCEOF (341) 101
DOWN_CAST_BEGIN (342) 112
DOWN_CAST_END (343) 112
DELEGATE (344) 29 123 263 264
FINAL (345) 197 198 260 261 262
ENUM (346) 265 266
CONST (347) 269 270
FUNCTION (348) 47 48 51 52 236 237 238 239
AS (349) 47 48 51 52 56 57 195 196 197 198 236 237 238 239 258 259
    260 261 262 263 264
THEN (350) 158 159 160 161 164
DIM (351) 195 196 258
END (352) 43 209 211 213 215 277 278
CR (353) 10 15 43 47 48 49 50 144 157 167 177 181 184 185 193 194 195
    196 197 198 209 211 213 215 238 239 242 243 252 253 258 259 260
    261 262 263 264 269 270 274 275 277 278
DECLARE (354) 47 48 49 50 238 239 242 243 252 253
BSUB (355) 49 50 53 54 240 241 242 243
APOSTROPHE (356) 245
LIB (357) 43
UNSAFE (358) 274
SAFE (359) 275
SHARED (360) 272


Nonterminals, with rules where they appear

$accept (106)
    on left: 0
translation_unit (107)
    on left: 1 2, on right: 0 2
initial_declaration (108)
    on left: 3 4 5 6 7, on right: 1 7
require_list (109)
    on left: 8 9, on right: 4 5 9
require_declaration (110)
    on left: 10, on right: 8 9
package_name (111)
    on left: 11 12, on right: 10 12 15
rename_list (112)
    on left: 13 14, on right: 4 6 14
rename_declaration (113)
    on left: 15, on right: 13 14
definition_or_statement (114)
    on left: 16 17 18 19 20 21, on right: 2
basic_type_specifier (115)
    on left: 22 23 24 25 26 27 28 29, on right: 31 36 130 131
identifier_type_specifier (116)
    on left: 30, on right: 38 132 133 204 205
array_type_specifier (117)
    on left: 31 32 33 34, on right: 33 37
template_type_specifier (118)
    on left: 35, on right: 34 39 134 135
type_specifier (119)
    on left: 36 37 38 39, on right: 40 41 47 48 51 52 56 57 101 112
    192 195 196 197 198 236 237 238 239 258 259 260 261 262 263 264
    270
type_list (120)
    on left: 40 41, on right: 35 41
lib_function (121)
    on left: 43, on right: 7
$@1 (122)
    on left: 42, on right: 43
lib_function_declaration_list (123)
    on left: 44 45 46, on right: 43 45 46
function_declaration (124)
    on left: 47 48 49 50, on right: 45 55
function_definition (125)
    on left: 51 52 53 54 55, on right: 16
parameter_list (126)
    on left: 56 57, on right: 47 49 51 53 57 236 238 240 242 250 252
    263
argument_list (127)
    on left: 58 59, on right: 59 109 125 127
statement_list (128)
    on left: 60 61, on right: 61 200 277
expression (129)
    on left: 62 63, on right: 63 106 107 111 138 144 158 159 160 161
    164 167 175 177 178 180 193 196 198 257 269
assignment_expression (130)
    on left: 64 65, on right: 58 59 62 63 65 142 143 173 174
assignment_operator (131)
    on left: 66 67 68 69 70 71, on right: 65
logical_or_expression (132)
    on left: 72 73, on right: 64 73
logical_and_expression (133)
    on left: 74 75, on right: 72 73 75
equality_expression (134)
    on left: 76 77 78, on right: 74 75 77 78
relational_expression (135)
    on left: 79 80 81 82 83, on right: 76 77 78 80 81 82 83
additive_expression (136)
    on left: 84 85 86, on right: 79 80 81 82 83 85 86
multiplicative_expression (137)
    on left: 87 88 89 90 91 92 93, on right: 84 85 86 88 89 90 91 92
    93
unary_expression (138)
    on left: 94 95 96 97, on right: 87 88 89 90 91 92 93 95 96 97
postfix_expression (139)
    on left: 98 99 100 101, on right: 94
primary_expression (140)
    on left: 102 103 104 105, on right: 65 98 99 100 101 108 109 110
    112
primary_no_new_array (141)
    on left: 106 107 108 109 110 111 112 113 114 115 116 117 118 119
    120 121 122 123 124 125 126 127, on right: 102 106
array_literal (142)
    on left: 128 129, on right: 120
array_creation (143)
    on left: 130 131 132 133 134 135, on right: 103
dimension_expression_list (144)
    on left: 136 137, on right: 130 131 132 133 134 135 137
dimension_expression (145)
    on left: 138, on right: 136 137
dimension_list (146)
    on left: 139 140, on right: 131 133 135 140
expression_list (147)
    on left: 141 142 143, on right: 128 129 143 174
statement (148)
    on left: 144 145 146 147 148 149 150 151 152 153 154 155 156 157,
    on right: 18 60 61
if_statement (149)
    on left: 158 159 160 161, on right: 145
elsif_list (150)
    on left: 162 163, on right: 160 161 163
elsif (151)
    on left: 164, on right: 162 163
label_opt (152)
    on left: 165 166, on right: 175 176 177 178
switch_statement (153)
    on left: 167, on right: 146
case_list (154)
    on left: 168 169, on right: 167 169
one_case (155)
    on left: 170, on right: 168 169
default_opt (156)
    on left: 171 172, on right: 167
case_expression_list (157)
    on left: 173 174, on right: 170
while_statement (158)
    on left: 175, on right: 147
for_statement (159)
    on left: 176, on right: 148
do_while_statement (160)
    on left: 177, on right: 149
foreach_statement (161)
    on left: 178, on right: 150
expression_opt (162)
    on left: 179 180, on right: 176 181
return_statement (163)
    on left: 181, on right: 151
identifier_opt (164)
    on left: 182 183, on right: 184 185
break_statement (165)
    on left: 184, on right: 152
continue_statement (166)
    on left: 185, on right: 153
try_statement (167)
    on left: 186 187 188, on right: 154
catch_list (168)
    on left: 189 190, on right: 186 188 190
catch_clause (169)
    on left: 192, on right: 189 190
@2 (170)
    on left: 191, on right: 192
throw_statement (171)
    on left: 193 194, on right: 155
declaration_statement (172)
    on left: 195 196 197 198, on right: 156
block (173)
    on left: 200 201, on right: 177 178 187
@3 (174)
    on left: 199, on right: 200
template_def_list (175)
    on left: 202 203 204 205, on right: 203 205 206
template_list (176)
    on left: 206 207, on right: 209 211 213 215
class_definition (177)
    on left: 209 211 213 215, on right: 17 46
$@4 (178)
    on left: 208, on right: 209
$@5 (179)
    on left: 210, on right: 211
$@6 (180)
    on left: 212, on right: 213
$@7 (181)
    on left: 214, on right: 215
class_or_member_modifier_list (182)
    on left: 216 217, on right: 211 215 217 233 235 259 261 262
class_or_member_modifier (183)
    on left: 218 219 220 221, on right: 216 217
class_or_interface (184)
    on left: 222 223, on right: 209 211 213 215
extends (185)
    on left: 224 225, on right: 209 211 213 215
extends_list (186)
    on left: 226 227, on right: 225 227
member_declaration_list (187)
    on left: 228 229, on right: 209 211 229
member_declaration (188)
    on left: 230 231, on right: 228 229
method_member (189)
    on left: 232 233 234 235, on right: 230
method_function_definition (190)
    on left: 236 237 238 239 240 241 242 243, on right: 232 233
apostrophe (191)
    on left: 244 245, on right: 47 48 49 50 51 52 53 54 263 264
throws_clause (192)
    on left: 246 247, on right: 47 48 49 50 51 52 53 54 236 237 238
    239 240 241 242 243 250 251 252 253 263 264
exception_list (193)
    on left: 248 249, on right: 247 249
constructor_definition (194)
    on left: 250 251 252 253, on right: 234 235
access_modifier (195)
    on left: 254 255, on right: 218
initializer_opt (196)
    on left: 256 257, on right: 258 259 260 261 262
field_member (197)
    on left: 258 259 260 261 262, on right: 231
delegate_definition (198)
    on left: 263 264, on right: 19
enum_definition (199)
    on left: 265 266, on right: 20
enumerator_list (200)
    on left: 267 268, on right: 265 266 268
const_definition (201)
    on left: 269 270, on right: 21
shared (202)
    on left: 271 272, on right: 195 196 209 211 213 215
unsafe (203)
    on left: 273 274 275, on right: 277
myblock (204)
    on left: 277 278, on right: 51 52 53 54 158 159 160 161 164 170
    172 175 176 186 187 188 192 236 237 240 241 250 251
@8 (205)
    on left: 276, on right: 277


state 0

    0 $accept: . translation_unit $end

    REQUIRE  shift, and go to state 1
    RENAME   shift, and go to state 2

    $default  reduce using rule 3 (initial_declaration)

    translation_unit     go to state 3
    initial_declaration  go to state 4
    require_list         go to state 5
    require_declaration  go to state 6
    rename_list          go to state 7
    rename_declaration   go to state 8


state 1

   10 require_declaration: REQUIRE . package_name CR

    IDENTIFIER  shift, and go to state 9

    package_name  go to state 10


state 2

   15 rename_declaration: RENAME . package_name IDENTIFIER CR

    IDENTIFIER  shift, and go to state 9

    package_name  go to state 11


state 3

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . definition_or_statement

    $end            shift, and go to state 12
    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    DELEGATE        shift, and go to state 37
    FINAL           shift, and go to state 38
    ENUM            shift, and go to state 39
    CONST           shift, and go to state 40
    FUNCTION        shift, and go to state 41
    DIM             shift, and go to state 42
    CR              shift, and go to state 43
    DECLARE         shift, and go to state 44
    BSUB            shift, and go to state 45
    SHARED          shift, and go to state 46

    WHILE     reduce using rule 165 (label_opt)
    DO_T      reduce using rule 165 (label_opt)
    FOR       reduce using rule 165 (label_opt)
    FOREACH   reduce using rule 165 (label_opt)
    $default  reduce using rule 271 (shared)

    definition_or_statement    go to state 47
    function_declaration       go to state 48
    function_definition        go to state 49
    expression                 go to state 50
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    statement                  go to state 64
    if_statement               go to state 65
    label_opt                  go to state 66
    switch_statement           go to state 67
    while_statement            go to state 68
    for_statement              go to state 69
    do_while_statement         go to state 70
    foreach_statement          go to state 71
    return_statement           go to state 72
    break_statement            go to state 73
    continue_statement         go to state 74
    try_statement              go to state 75
    throw_statement            go to state 76
    declaration_statement      go to state 77
    class_definition           go to state 78
    delegate_definition        go to state 79
    enum_definition            go to state 80
    const_definition           go to state 81
    shared                     go to state 82


state 4

    1 translation_unit: initial_declaration .
    7 initial_declaration: initial_declaration . lib_function

    LIB  shift, and go to state 83

    $default  reduce using rule 1 (translation_unit)

    lib_function  go to state 84


state 5

    4 initial_declaration: require_list . rename_list
    5                    | require_list .
    9 require_list: require_list . require_declaration

    REQUIRE  shift, and go to state 1
    RENAME   shift, and go to state 2

    $default  reduce using rule 5 (initial_declaration)

    require_declaration  go to state 85
    rename_list          go to state 86
    rename_declaration   go to state 8


state 6

    8 require_list: require_declaration .

    $default  reduce using rule 8 (require_list)


state 7

    6 initial_declaration: rename_list .
   14 rename_list: rename_list . rename_declaration

    RENAME  shift, and go to state 2

    $default  reduce using rule 6 (initial_declaration)

    rename_declaration  go to state 87


state 8

   13 rename_list: rename_declaration .

    $default  reduce using rule 13 (rename_list)


state 9

   11 package_name: IDENTIFIER .

    $default  reduce using rule 11 (package_name)


state 10

   10 require_declaration: REQUIRE package_name . CR
   12 package_name: package_name . DOT IDENTIFIER

    DOT  shift, and go to state 88
    CR   shift, and go to state 89


state 11

   12 package_name: package_name . DOT IDENTIFIER
   15 rename_declaration: RENAME package_name . IDENTIFIER CR

    IDENTIFIER  shift, and go to state 90
    DOT         shift, and go to state 88


state 12

    0 $accept: translation_unit $end .

    $default  accept


state 13

  113 primary_no_new_array: INT_LITERAL .

    $default  reduce using rule 113 (primary_no_new_array)


state 14

  114 primary_no_new_array: DOUBLE_LITERAL .

    $default  reduce using rule 114 (primary_no_new_array)


state 15

  115 primary_no_new_array: STRING_LITERAL .

    $default  reduce using rule 115 (primary_no_new_array)


state 16

  116 primary_no_new_array: REGEXP_LITERAL .

    $default  reduce using rule 116 (primary_no_new_array)


state 17

  104 primary_expression: IDENTIFIER .
  107 primary_no_new_array: IDENTIFIER . LB expression RB
  166 label_opt: IDENTIFIER . COLON

    LB     shift, and go to state 91
    COLON  shift, and go to state 92

    $default  reduce using rule 104 (primary_expression)


state 18

  105 primary_expression: AUTOVAR .

    $default  reduce using rule 105 (primary_expression)


state 19

  158 if_statement: IF . expression THEN myblock
  159             | IF . expression THEN myblock ELSE myblock
  160             | IF . expression THEN myblock elsif_list
  161             | IF . expression THEN myblock elsif_list ELSE myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 94
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 20

  167 switch_statement: SWITCH . expression CR case_list default_opt

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 95
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 21

  181 return_statement: RETURN_T . expression_opt CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 179 (expression_opt)

    expression                 go to state 96
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_opt             go to state 97


state 22

  184 break_statement: BREAK . identifier_opt CR

    IDENTIFIER  shift, and go to state 98

    $default  reduce using rule 182 (identifier_opt)

    identifier_opt  go to state 99


state 23

  185 continue_statement: CONTINUE . identifier_opt CR

    IDENTIFIER  shift, and go to state 98

    $default  reduce using rule 182 (identifier_opt)

    identifier_opt  go to state 100


state 24

  119 primary_no_new_array: NULL_T .

    $default  reduce using rule 119 (primary_no_new_array)


state 25

  111 primary_no_new_array: LP . expression RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 101
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 26

  128 array_literal: LC . expression_list RC
  129              | LC . expression_list COMMA RC

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 141 (expression_list)

    assignment_expression      go to state 102
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_list            go to state 103


state 27

   95 unary_expression: SUB . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 104
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 28

   97 unary_expression: BIT_NOT . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 106
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 29

  117 primary_no_new_array: TRUE_T .

    $default  reduce using rule 117 (primary_no_new_array)


state 30

  118 primary_no_new_array: FALSE_T .

    $default  reduce using rule 118 (primary_no_new_array)


state 31

   96 unary_expression: EXCLAMATION . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 107
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 32

  186 try_statement: TRY . myblock catch_list FINALLY myblock
  187              | TRY . myblock FINALLY block
  188              | TRY . myblock catch_list

    CR  shift, and go to state 108

    myblock  go to state 109


state 33

  193 throw_statement: THROW . expression CR
  194                | THROW . CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    CR              shift, and go to state 110

    expression                 go to state 111
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 34

  123 primary_no_new_array: NEW . DELEGATE LP RP
  124                     | NEW . IDENTIFIER LP RP
  125                     | NEW . IDENTIFIER LP argument_list RP
  126                     | NEW . IDENTIFIER DOT IDENTIFIER LP RP
  127                     | NEW . IDENTIFIER DOT IDENTIFIER LP argument_list RP
  130 array_creation: NEW . basic_type_specifier dimension_expression_list
  131               | NEW . basic_type_specifier dimension_expression_list dimension_list
  132               | NEW . identifier_type_specifier dimension_expression_list
  133               | NEW . identifier_type_specifier dimension_expression_list dimension_list
  134               | NEW . template_type_specifier dimension_expression_list
  135               | NEW . template_type_specifier dimension_expression_list dimension_list

    IDENTIFIER        shift, and go to state 112
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 120

    basic_type_specifier       go to state 121
    identifier_type_specifier  go to state 122
    template_type_specifier    go to state 123


state 35

  121 primary_no_new_array: THIS_T .

    $default  reduce using rule 121 (primary_no_new_array)


state 36

  122 primary_no_new_array: SUPER_T .

    $default  reduce using rule 122 (primary_no_new_array)


state 37

  263 delegate_definition: DELEGATE . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  264                    | DELEGATE . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 124


state 38

  197 declaration_statement: FINAL . IDENTIFIER AS type_specifier CR
  198                      | FINAL . IDENTIFIER AS type_specifier ASSIGN_T expression CR

    IDENTIFIER  shift, and go to state 125


state 39

  265 enum_definition: ENUM . IDENTIFIER LC enumerator_list RC
  266                | ENUM . IDENTIFIER LC enumerator_list COMMA RC

    IDENTIFIER  shift, and go to state 126


state 40

  269 const_definition: CONST . IDENTIFIER ASSIGN_T expression CR
  270                 | CONST . type_specifier IDENTIFIER CR

    IDENTIFIER        shift, and go to state 127
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 133


state 41

   51 function_definition: FUNCTION . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   52                    | FUNCTION . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 134


state 42

  195 declaration_statement: DIM . IDENTIFIER AS shared type_specifier CR
  196                      | DIM . IDENTIFIER AS shared type_specifier ASSIGN_T expression CR

    IDENTIFIER  shift, and go to state 135


state 43

  157 statement: CR .

    $default  reduce using rule 157 (statement)


state 44

   47 function_declaration: DECLARE . FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   48                     | DECLARE . FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR
   49                     | DECLARE . BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   50                     | DECLARE . BSUB IDENTIFIER LP apostrophe RP throws_clause CR

    FUNCTION  shift, and go to state 136
    BSUB      shift, and go to state 137


state 45

   53 function_definition: BSUB . IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock
   54                    | BSUB . IDENTIFIER LP apostrophe RP throws_clause myblock

    IDENTIFIER  shift, and go to state 138


state 46

  272 shared: SHARED .

    $default  reduce using rule 272 (shared)


state 47

    2 translation_unit: translation_unit definition_or_statement .

    $default  reduce using rule 2 (translation_unit)


state 48

   55 function_definition: function_declaration .

    $default  reduce using rule 55 (function_definition)


state 49

   16 definition_or_statement: function_definition .

    $default  reduce using rule 16 (definition_or_statement)


state 50

   63 expression: expression . COMMA assignment_expression
  144 statement: expression . CR

    COMMA  shift, and go to state 139
    CR     shift, and go to state 140


state 51

   62 expression: assignment_expression .

    $default  reduce using rule 62 (expression)


state 52

   64 assignment_expression: logical_or_expression .
   73 logical_or_expression: logical_or_expression . LOGICAL_OR logical_and_expression

    LOGICAL_OR  shift, and go to state 141

    $default  reduce using rule 64 (assignment_expression)


state 53

   72 logical_or_expression: logical_and_expression .
   75 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 142

    $default  reduce using rule 72 (logical_or_expression)


state 54

   74 logical_and_expression: equality_expression .
   77 equality_expression: equality_expression . EQ relational_expression
   78                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 143
    NE  shift, and go to state 144

    $default  reduce using rule 74 (logical_and_expression)


state 55

   76 equality_expression: relational_expression .
   80 relational_expression: relational_expression . GT additive_expression
   81                      | relational_expression . GE additive_expression
   82                      | relational_expression . LT additive_expression
   83                      | relational_expression . LE additive_expression

    GT  shift, and go to state 145
    GE  shift, and go to state 146
    LT  shift, and go to state 147
    LE  shift, and go to state 148

    $default  reduce using rule 76 (equality_expression)


state 56

   79 relational_expression: additive_expression .
   85 additive_expression: additive_expression . ADD multiplicative_expression
   86                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 149
    SUB  shift, and go to state 150

    $default  reduce using rule 79 (relational_expression)


state 57

   84 additive_expression: multiplicative_expression .
   88 multiplicative_expression: multiplicative_expression . MUL unary_expression
   89                          | multiplicative_expression . DIV unary_expression
   90                          | multiplicative_expression . MOD unary_expression
   91                          | multiplicative_expression . BIT_AND unary_expression
   92                          | multiplicative_expression . BIT_OR unary_expression
   93                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 151
    DIV      shift, and go to state 152
    MOD      shift, and go to state 153
    BIT_AND  shift, and go to state 154
    BIT_OR   shift, and go to state 155
    BIT_XOR  shift, and go to state 156

    $default  reduce using rule 84 (additive_expression)


state 58

   87 multiplicative_expression: unary_expression .

    $default  reduce using rule 87 (multiplicative_expression)


state 59

   94 unary_expression: postfix_expression .

    $default  reduce using rule 94 (unary_expression)


state 60

   65 assignment_expression: primary_expression . assignment_operator assignment_expression
   98 postfix_expression: primary_expression .
   99                   | primary_expression . INCREMENT
  100                   | primary_expression . DECREMENT
  101                   | primary_expression . INSTANCEOF type_specifier
  108 primary_no_new_array: primary_expression . DOT IDENTIFIER
  109                     | primary_expression . LP argument_list RP
  110                     | primary_expression . LP RP
  112                     | primary_expression . DOWN_CAST_BEGIN type_specifier DOWN_CAST_END

    LP               shift, and go to state 157
    ASSIGN_T         shift, and go to state 158
    DOT              shift, and go to state 159
    ADD_ASSIGN_T     shift, and go to state 160
    SUB_ASSIGN_T     shift, and go to state 161
    MUL_ASSIGN_T     shift, and go to state 162
    DIV_ASSIGN_T     shift, and go to state 163
    MOD_ASSIGN_T     shift, and go to state 164
    INCREMENT        shift, and go to state 165
    DECREMENT        shift, and go to state 166
    INSTANCEOF       shift, and go to state 167
    DOWN_CAST_BEGIN  shift, and go to state 168

    $default  reduce using rule 98 (postfix_expression)

    assignment_operator  go to state 169


state 61

  102 primary_expression: primary_no_new_array .
  106 primary_no_new_array: primary_no_new_array . LB expression RB

    LB  shift, and go to state 170

    $default  reduce using rule 102 (primary_expression)


state 62

  120 primary_no_new_array: array_literal .

    $default  reduce using rule 120 (primary_no_new_array)


state 63

  103 primary_expression: array_creation .

    $default  reduce using rule 103 (primary_expression)


state 64

   18 definition_or_statement: statement .

    $default  reduce using rule 18 (definition_or_statement)


state 65

  145 statement: if_statement .

    $default  reduce using rule 145 (statement)


state 66

  175 while_statement: label_opt . WHILE expression myblock
  176 for_statement: label_opt . FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock
  177 do_while_statement: label_opt . DO_T block WHILE LP expression RP CR
  178 foreach_statement: label_opt . FOREACH LP IDENTIFIER COLON expression RP block

    WHILE    shift, and go to state 171
    DO_T     shift, and go to state 172
    FOR      shift, and go to state 173
    FOREACH  shift, and go to state 174


state 67

  146 statement: switch_statement .

    $default  reduce using rule 146 (statement)


state 68

  147 statement: while_statement .

    $default  reduce using rule 147 (statement)


state 69

  148 statement: for_statement .

    $default  reduce using rule 148 (statement)


state 70

  149 statement: do_while_statement .

    $default  reduce using rule 149 (statement)


state 71

  150 statement: foreach_statement .

    $default  reduce using rule 150 (statement)


state 72

  151 statement: return_statement .

    $default  reduce using rule 151 (statement)


state 73

  152 statement: break_statement .

    $default  reduce using rule 152 (statement)


state 74

  153 statement: continue_statement .

    $default  reduce using rule 153 (statement)


state 75

  154 statement: try_statement .

    $default  reduce using rule 154 (statement)


state 76

  155 statement: throw_statement .

    $default  reduce using rule 155 (statement)


state 77

  156 statement: declaration_statement .

    $default  reduce using rule 156 (statement)


state 78

   17 definition_or_statement: class_definition .

    $default  reduce using rule 17 (definition_or_statement)


state 79

   19 definition_or_statement: delegate_definition .

    $default  reduce using rule 19 (definition_or_statement)


state 80

   20 definition_or_statement: enum_definition .

    $default  reduce using rule 20 (definition_or_statement)


state 81

   21 definition_or_statement: const_definition .

    $default  reduce using rule 21 (definition_or_statement)


state 82

  209 class_definition: shared . class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list END
  211                 | shared . class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END
  213                 | shared . class_or_interface IDENTIFIER template_list extends CR $@6 END
  215                 | shared . class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 END

    CLASS_T      shift, and go to state 175
    INTERFACE_T  shift, and go to state 176
    PUBLIC_T     shift, and go to state 177
    PRIVATE_T    shift, and go to state 178
    VIRTUAL_T    shift, and go to state 179
    OVERRIDE_T   shift, and go to state 180
    ABSTRACT_T   shift, and go to state 181

    class_or_member_modifier_list  go to state 182
    class_or_member_modifier       go to state 183
    class_or_interface             go to state 184
    access_modifier                go to state 185


state 83

   43 lib_function: LIB . IDENTIFIER $@1 CR lib_function_declaration_list END

    IDENTIFIER  shift, and go to state 186


state 84

    7 initial_declaration: initial_declaration lib_function .

    $default  reduce using rule 7 (initial_declaration)


state 85

    9 require_list: require_list require_declaration .

    $default  reduce using rule 9 (require_list)


state 86

    4 initial_declaration: require_list rename_list .
   14 rename_list: rename_list . rename_declaration

    RENAME  shift, and go to state 2

    $default  reduce using rule 4 (initial_declaration)

    rename_declaration  go to state 87


state 87

   14 rename_list: rename_list rename_declaration .

    $default  reduce using rule 14 (rename_list)


state 88

   12 package_name: package_name DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 187


state 89

   10 require_declaration: REQUIRE package_name CR .

    $default  reduce using rule 10 (require_declaration)


state 90

   15 rename_declaration: RENAME package_name IDENTIFIER . CR

    CR  shift, and go to state 188


state 91

  107 primary_no_new_array: IDENTIFIER LB . expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 189
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 92

  166 label_opt: IDENTIFIER COLON .

    $default  reduce using rule 166 (label_opt)


state 93

  104 primary_expression: IDENTIFIER .
  107 primary_no_new_array: IDENTIFIER . LB expression RB

    LB  shift, and go to state 91

    $default  reduce using rule 104 (primary_expression)


state 94

   63 expression: expression . COMMA assignment_expression
  158 if_statement: IF expression . THEN myblock
  159             | IF expression . THEN myblock ELSE myblock
  160             | IF expression . THEN myblock elsif_list
  161             | IF expression . THEN myblock elsif_list ELSE myblock

    COMMA  shift, and go to state 139
    THEN   shift, and go to state 190


state 95

   63 expression: expression . COMMA assignment_expression
  167 switch_statement: SWITCH expression . CR case_list default_opt

    COMMA  shift, and go to state 139
    CR     shift, and go to state 191


state 96

   63 expression: expression . COMMA assignment_expression
  180 expression_opt: expression .

    COMMA  shift, and go to state 139

    $default  reduce using rule 180 (expression_opt)


state 97

  181 return_statement: RETURN_T expression_opt . CR

    CR  shift, and go to state 192


state 98

  183 identifier_opt: IDENTIFIER .

    $default  reduce using rule 183 (identifier_opt)


state 99

  184 break_statement: BREAK identifier_opt . CR

    CR  shift, and go to state 193


state 100

  185 continue_statement: CONTINUE identifier_opt . CR

    CR  shift, and go to state 194


state 101

   63 expression: expression . COMMA assignment_expression
  111 primary_no_new_array: LP expression . RP

    RP     shift, and go to state 195
    COMMA  shift, and go to state 139


state 102

  142 expression_list: assignment_expression .

    $default  reduce using rule 142 (expression_list)


state 103

  128 array_literal: LC expression_list . RC
  129              | LC expression_list . COMMA RC
  143 expression_list: expression_list . COMMA assignment_expression

    RC     shift, and go to state 196
    COMMA  shift, and go to state 197


state 104

   95 unary_expression: SUB unary_expression .

    $default  reduce using rule 95 (unary_expression)


state 105

   98 postfix_expression: primary_expression .
   99                   | primary_expression . INCREMENT
  100                   | primary_expression . DECREMENT
  101                   | primary_expression . INSTANCEOF type_specifier
  108 primary_no_new_array: primary_expression . DOT IDENTIFIER
  109                     | primary_expression . LP argument_list RP
  110                     | primary_expression . LP RP
  112                     | primary_expression . DOWN_CAST_BEGIN type_specifier DOWN_CAST_END

    LP               shift, and go to state 157
    DOT              shift, and go to state 159
    INCREMENT        shift, and go to state 165
    DECREMENT        shift, and go to state 166
    INSTANCEOF       shift, and go to state 167
    DOWN_CAST_BEGIN  shift, and go to state 168

    $default  reduce using rule 98 (postfix_expression)


state 106

   97 unary_expression: BIT_NOT unary_expression .

    $default  reduce using rule 97 (unary_expression)


state 107

   96 unary_expression: EXCLAMATION unary_expression .

    $default  reduce using rule 96 (unary_expression)


state 108

  277 myblock: CR . unsafe @8 statement_list END
  278        | CR . END

    END     shift, and go to state 198
    UNSAFE  shift, and go to state 199
    SAFE    shift, and go to state 200

    $default  reduce using rule 273 (unsafe)

    unsafe  go to state 201


state 109

  186 try_statement: TRY myblock . catch_list FINALLY myblock
  187              | TRY myblock . FINALLY block
  188              | TRY myblock . catch_list

    CATCH    shift, and go to state 202
    FINALLY  shift, and go to state 203

    catch_list    go to state 204
    catch_clause  go to state 205


state 110

  194 throw_statement: THROW CR .

    $default  reduce using rule 194 (throw_statement)


state 111

   63 expression: expression . COMMA assignment_expression
  193 throw_statement: THROW expression . CR

    COMMA  shift, and go to state 139
    CR     shift, and go to state 206


state 112

   30 identifier_type_specifier: IDENTIFIER .
   35 template_type_specifier: IDENTIFIER . LT type_list GT
  124 primary_no_new_array: NEW IDENTIFIER . LP RP
  125                     | NEW IDENTIFIER . LP argument_list RP
  126                     | NEW IDENTIFIER . DOT IDENTIFIER LP RP
  127                     | NEW IDENTIFIER . DOT IDENTIFIER LP argument_list RP

    LP   shift, and go to state 207
    LT   shift, and go to state 208
    DOT  shift, and go to state 209

    $default  reduce using rule 30 (identifier_type_specifier)


state 113

   22 basic_type_specifier: VOID_T .

    $default  reduce using rule 22 (basic_type_specifier)


state 114

   23 basic_type_specifier: BOOLEAN_T .

    $default  reduce using rule 23 (basic_type_specifier)


state 115

   24 basic_type_specifier: INT_T .

    $default  reduce using rule 24 (basic_type_specifier)


state 116

   25 basic_type_specifier: DOUBLE_T .

    $default  reduce using rule 25 (basic_type_specifier)


state 117

   26 basic_type_specifier: STRING_T .

    $default  reduce using rule 26 (basic_type_specifier)


state 118

   27 basic_type_specifier: VARIENT_T .

    $default  reduce using rule 27 (basic_type_specifier)


state 119

   28 basic_type_specifier: NATIVE_POINTER_T .

    $default  reduce using rule 28 (basic_type_specifier)


state 120

   29 basic_type_specifier: DELEGATE .
  123 primary_no_new_array: NEW DELEGATE . LP RP

    LP  shift, and go to state 210

    $default  reduce using rule 29 (basic_type_specifier)


state 121

  130 array_creation: NEW basic_type_specifier . dimension_expression_list
  131               | NEW basic_type_specifier . dimension_expression_list dimension_list

    LB  shift, and go to state 211

    dimension_expression_list  go to state 212
    dimension_expression       go to state 213


state 122

  132 array_creation: NEW identifier_type_specifier . dimension_expression_list
  133               | NEW identifier_type_specifier . dimension_expression_list dimension_list

    LB  shift, and go to state 211

    dimension_expression_list  go to state 214
    dimension_expression       go to state 213


state 123

  134 array_creation: NEW template_type_specifier . dimension_expression_list
  135               | NEW template_type_specifier . dimension_expression_list dimension_list

    LB  shift, and go to state 211

    dimension_expression_list  go to state 215
    dimension_expression       go to state 213


state 124

  263 delegate_definition: DELEGATE IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  264                    | DELEGATE IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause CR

    LP  shift, and go to state 216


state 125

  197 declaration_statement: FINAL IDENTIFIER . AS type_specifier CR
  198                      | FINAL IDENTIFIER . AS type_specifier ASSIGN_T expression CR

    AS  shift, and go to state 217


state 126

  265 enum_definition: ENUM IDENTIFIER . LC enumerator_list RC
  266                | ENUM IDENTIFIER . LC enumerator_list COMMA RC

    LC  shift, and go to state 218


state 127

   30 identifier_type_specifier: IDENTIFIER .
   32 array_type_specifier: IDENTIFIER . LB RB
   35 template_type_specifier: IDENTIFIER . LT type_list GT
  269 const_definition: CONST IDENTIFIER . ASSIGN_T expression CR

    LB        shift, and go to state 219
    ASSIGN_T  shift, and go to state 220
    LT        shift, and go to state 208

    $default  reduce using rule 30 (identifier_type_specifier)


state 128

   29 basic_type_specifier: DELEGATE .

    $default  reduce using rule 29 (basic_type_specifier)


state 129

   31 array_type_specifier: basic_type_specifier . LB RB
   36 type_specifier: basic_type_specifier .

    LB  shift, and go to state 221

    $default  reduce using rule 36 (type_specifier)


state 130

   38 type_specifier: identifier_type_specifier .

    $default  reduce using rule 38 (type_specifier)


state 131

   33 array_type_specifier: array_type_specifier . LB RB
   37 type_specifier: array_type_specifier .

    LB  shift, and go to state 222

    $default  reduce using rule 37 (type_specifier)


state 132

   34 array_type_specifier: template_type_specifier . LB RB
   39 type_specifier: template_type_specifier .

    LB  shift, and go to state 223

    $default  reduce using rule 39 (type_specifier)


state 133

  270 const_definition: CONST type_specifier . IDENTIFIER CR

    IDENTIFIER  shift, and go to state 224


state 134

   51 function_definition: FUNCTION IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   52                    | FUNCTION IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause myblock

    LP  shift, and go to state 225


state 135

  195 declaration_statement: DIM IDENTIFIER . AS shared type_specifier CR
  196                      | DIM IDENTIFIER . AS shared type_specifier ASSIGN_T expression CR

    AS  shift, and go to state 226


state 136

   47 function_declaration: DECLARE FUNCTION . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   48                     | DECLARE FUNCTION . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 227


state 137

   49 function_declaration: DECLARE BSUB . IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   50                     | DECLARE BSUB . IDENTIFIER LP apostrophe RP throws_clause CR

    IDENTIFIER  shift, and go to state 228


state 138

   53 function_definition: BSUB IDENTIFIER . LP parameter_list apostrophe RP throws_clause myblock
   54                    | BSUB IDENTIFIER . LP apostrophe RP throws_clause myblock

    LP  shift, and go to state 229


state 139

   63 expression: expression COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    assignment_expression      go to state 230
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 140

  144 statement: expression CR .

    $default  reduce using rule 144 (statement)


state 141

   73 logical_or_expression: logical_or_expression LOGICAL_OR . logical_and_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    logical_and_expression     go to state 231
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 142

   75 logical_and_expression: logical_and_expression LOGICAL_AND . equality_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    equality_expression        go to state 232
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 143

   77 equality_expression: equality_expression EQ . relational_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    relational_expression      go to state 233
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 144

   78 equality_expression: equality_expression NE . relational_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    relational_expression      go to state 234
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 145

   80 relational_expression: relational_expression GT . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    additive_expression        go to state 235
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 146

   81 relational_expression: relational_expression GE . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    additive_expression        go to state 236
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 147

   82 relational_expression: relational_expression LT . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    additive_expression        go to state 237
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 148

   83 relational_expression: relational_expression LE . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    additive_expression        go to state 238
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 149

   85 additive_expression: additive_expression ADD . multiplicative_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    multiplicative_expression  go to state 239
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 150

   86 additive_expression: additive_expression SUB . multiplicative_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    multiplicative_expression  go to state 240
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 151

   88 multiplicative_expression: multiplicative_expression MUL . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 241
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 152

   89 multiplicative_expression: multiplicative_expression DIV . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 242
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 153

   90 multiplicative_expression: multiplicative_expression MOD . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 243
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 154

   91 multiplicative_expression: multiplicative_expression BIT_AND . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 244
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 155

   92 multiplicative_expression: multiplicative_expression BIT_OR . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 245
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 156

   93 multiplicative_expression: multiplicative_expression BIT_XOR . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 246
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 157

  109 primary_no_new_array: primary_expression LP . argument_list RP
  110                     | primary_expression LP . RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    RP              shift, and go to state 247
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    argument_list              go to state 248
    assignment_expression      go to state 249
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 158

   66 assignment_operator: ASSIGN_T .

    $default  reduce using rule 66 (assignment_operator)


state 159

  108 primary_no_new_array: primary_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 250


state 160

   67 assignment_operator: ADD_ASSIGN_T .

    $default  reduce using rule 67 (assignment_operator)


state 161

   68 assignment_operator: SUB_ASSIGN_T .

    $default  reduce using rule 68 (assignment_operator)


state 162

   69 assignment_operator: MUL_ASSIGN_T .

    $default  reduce using rule 69 (assignment_operator)


state 163

   70 assignment_operator: DIV_ASSIGN_T .

    $default  reduce using rule 70 (assignment_operator)


state 164

   71 assignment_operator: MOD_ASSIGN_T .

    $default  reduce using rule 71 (assignment_operator)


state 165

   99 postfix_expression: primary_expression INCREMENT .

    $default  reduce using rule 99 (postfix_expression)


state 166

  100 postfix_expression: primary_expression DECREMENT .

    $default  reduce using rule 100 (postfix_expression)


state 167

  101 postfix_expression: primary_expression INSTANCEOF . type_specifier

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 252


state 168

  112 primary_no_new_array: primary_expression DOWN_CAST_BEGIN . type_specifier DOWN_CAST_END

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 253


state 169

   65 assignment_expression: primary_expression assignment_operator . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    assignment_expression      go to state 254
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 170

  106 primary_no_new_array: primary_no_new_array LB . expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 255
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 171

  175 while_statement: label_opt WHILE . expression myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 256
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 172

  177 do_while_statement: label_opt DO_T . block WHILE LP expression RP CR

    LC  shift, and go to state 257

    block  go to state 258


state 173

  176 for_statement: label_opt FOR . expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 179 (expression_opt)

    expression                 go to state 96
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_opt             go to state 259


state 174

  178 foreach_statement: label_opt FOREACH . LP IDENTIFIER COLON expression RP block

    LP  shift, and go to state 260


state 175

  222 class_or_interface: CLASS_T .

    $default  reduce using rule 222 (class_or_interface)


state 176

  223 class_or_interface: INTERFACE_T .

    $default  reduce using rule 223 (class_or_interface)


state 177

  254 access_modifier: PUBLIC_T .

    $default  reduce using rule 254 (access_modifier)


state 178

  255 access_modifier: PRIVATE_T .

    $default  reduce using rule 255 (access_modifier)


state 179

  219 class_or_member_modifier: VIRTUAL_T .

    $default  reduce using rule 219 (class_or_member_modifier)


state 180

  220 class_or_member_modifier: OVERRIDE_T .

    $default  reduce using rule 220 (class_or_member_modifier)


state 181

  221 class_or_member_modifier: ABSTRACT_T .

    $default  reduce using rule 221 (class_or_member_modifier)


state 182

  211 class_definition: shared class_or_member_modifier_list . class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END
  215                 | shared class_or_member_modifier_list . class_or_interface IDENTIFIER template_list extends CR $@7 END
  217 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier

    CLASS_T      shift, and go to state 175
    INTERFACE_T  shift, and go to state 176
    PUBLIC_T     shift, and go to state 177
    PRIVATE_T    shift, and go to state 178
    VIRTUAL_T    shift, and go to state 179
    OVERRIDE_T   shift, and go to state 180
    ABSTRACT_T   shift, and go to state 181

    class_or_member_modifier  go to state 261
    class_or_interface        go to state 262
    access_modifier           go to state 185


state 183

  216 class_or_member_modifier_list: class_or_member_modifier .

    $default  reduce using rule 216 (class_or_member_modifier_list)


state 184

  209 class_definition: shared class_or_interface . IDENTIFIER template_list extends CR $@4 member_declaration_list END
  213                 | shared class_or_interface . IDENTIFIER template_list extends CR $@6 END

    IDENTIFIER  shift, and go to state 263


state 185

  218 class_or_member_modifier: access_modifier .

    $default  reduce using rule 218 (class_or_member_modifier)


state 186

   43 lib_function: LIB IDENTIFIER . $@1 CR lib_function_declaration_list END

    $default  reduce using rule 42 ($@1)

    $@1  go to state 264


state 187

   12 package_name: package_name DOT IDENTIFIER .

    $default  reduce using rule 12 (package_name)


state 188

   15 rename_declaration: RENAME package_name IDENTIFIER CR .

    $default  reduce using rule 15 (rename_declaration)


state 189

   63 expression: expression . COMMA assignment_expression
  107 primary_no_new_array: IDENTIFIER LB expression . RB

    RB     shift, and go to state 265
    COMMA  shift, and go to state 139


state 190

  158 if_statement: IF expression THEN . myblock
  159             | IF expression THEN . myblock ELSE myblock
  160             | IF expression THEN . myblock elsif_list
  161             | IF expression THEN . myblock elsif_list ELSE myblock

    CR  shift, and go to state 108

    myblock  go to state 266


state 191

  167 switch_statement: SWITCH expression CR . case_list default_opt

    CASE  shift, and go to state 267

    case_list  go to state 268
    one_case   go to state 269


state 192

  181 return_statement: RETURN_T expression_opt CR .

    $default  reduce using rule 181 (return_statement)


state 193

  184 break_statement: BREAK identifier_opt CR .

    $default  reduce using rule 184 (break_statement)


state 194

  185 continue_statement: CONTINUE identifier_opt CR .

    $default  reduce using rule 185 (continue_statement)


state 195

  111 primary_no_new_array: LP expression RP .

    $default  reduce using rule 111 (primary_no_new_array)


state 196

  128 array_literal: LC expression_list RC .

    $default  reduce using rule 128 (array_literal)


state 197

  129 array_literal: LC expression_list COMMA . RC
  143 expression_list: expression_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    RC              shift, and go to state 270
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    assignment_expression      go to state 271
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 198

  278 myblock: CR END .

    $default  reduce using rule 278 (myblock)


state 199

  274 unsafe: UNSAFE . CR

    CR  shift, and go to state 272


state 200

  275 unsafe: SAFE . CR

    CR  shift, and go to state 273


state 201

  277 myblock: CR unsafe . @8 statement_list END

    $default  reduce using rule 276 (@8)

    @8  go to state 274


state 202

  192 catch_clause: CATCH . @2 type_specifier IDENTIFIER myblock

    $default  reduce using rule 191 (@2)

    @2  go to state 275


state 203

  187 try_statement: TRY myblock FINALLY . block

    LC  shift, and go to state 257

    block  go to state 276


state 204

  186 try_statement: TRY myblock catch_list . FINALLY myblock
  188              | TRY myblock catch_list .
  190 catch_list: catch_list . catch_clause

    CATCH    shift, and go to state 202
    FINALLY  shift, and go to state 277

    $default  reduce using rule 188 (try_statement)

    catch_clause  go to state 278


state 205

  189 catch_list: catch_clause .

    $default  reduce using rule 189 (catch_list)


state 206

  193 throw_statement: THROW expression CR .

    $default  reduce using rule 193 (throw_statement)


state 207

  124 primary_no_new_array: NEW IDENTIFIER LP . RP
  125                     | NEW IDENTIFIER LP . argument_list RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    RP              shift, and go to state 279
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    argument_list              go to state 280
    assignment_expression      go to state 249
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 208

   35 template_type_specifier: IDENTIFIER LT . type_list GT

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 281
    type_list                  go to state 282


state 209

  126 primary_no_new_array: NEW IDENTIFIER DOT . IDENTIFIER LP RP
  127                     | NEW IDENTIFIER DOT . IDENTIFIER LP argument_list RP

    IDENTIFIER  shift, and go to state 283


state 210

  123 primary_no_new_array: NEW DELEGATE LP . RP

    RP  shift, and go to state 284


state 211

  138 dimension_expression: LB . expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 285
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 212

  130 array_creation: NEW basic_type_specifier dimension_expression_list .
  131               | NEW basic_type_specifier dimension_expression_list . dimension_list
  137 dimension_expression_list: dimension_expression_list . dimension_expression

    LB  shift, and go to state 286

    $default  reduce using rule 130 (array_creation)

    dimension_expression  go to state 287
    dimension_list        go to state 288


state 213

  136 dimension_expression_list: dimension_expression .

    $default  reduce using rule 136 (dimension_expression_list)


state 214

  132 array_creation: NEW identifier_type_specifier dimension_expression_list .
  133               | NEW identifier_type_specifier dimension_expression_list . dimension_list
  137 dimension_expression_list: dimension_expression_list . dimension_expression

    LB  shift, and go to state 286

    $default  reduce using rule 132 (array_creation)

    dimension_expression  go to state 287
    dimension_list        go to state 289


state 215

  134 array_creation: NEW template_type_specifier dimension_expression_list .
  135               | NEW template_type_specifier dimension_expression_list . dimension_list
  137 dimension_expression_list: dimension_expression_list . dimension_expression

    LB  shift, and go to state 286

    $default  reduce using rule 134 (array_creation)

    dimension_expression  go to state 287
    dimension_list        go to state 290


state 216

  263 delegate_definition: DELEGATE IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause CR
  264                    | DELEGATE IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 291
    COMMA       shift, and go to state 292

    $default  reduce using rule 244 (apostrophe)

    parameter_list  go to state 293
    apostrophe      go to state 294


state 217

  197 declaration_statement: FINAL IDENTIFIER AS . type_specifier CR
  198                      | FINAL IDENTIFIER AS . type_specifier ASSIGN_T expression CR

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 295


state 218

  265 enum_definition: ENUM IDENTIFIER LC . enumerator_list RC
  266                | ENUM IDENTIFIER LC . enumerator_list COMMA RC

    IDENTIFIER  shift, and go to state 296

    enumerator_list  go to state 297


state 219

   32 array_type_specifier: IDENTIFIER LB . RB

    RB  shift, and go to state 298


state 220

  269 const_definition: CONST IDENTIFIER ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 299
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 221

   31 array_type_specifier: basic_type_specifier LB . RB

    RB  shift, and go to state 300


state 222

   33 array_type_specifier: array_type_specifier LB . RB

    RB  shift, and go to state 301


state 223

   34 array_type_specifier: template_type_specifier LB . RB

    RB  shift, and go to state 302


state 224

  270 const_definition: CONST type_specifier IDENTIFIER . CR

    CR  shift, and go to state 303


state 225

   51 function_definition: FUNCTION IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause myblock
   52                    | FUNCTION IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 291
    COMMA       shift, and go to state 292

    $default  reduce using rule 244 (apostrophe)

    parameter_list  go to state 304
    apostrophe      go to state 305


state 226

  195 declaration_statement: DIM IDENTIFIER AS . shared type_specifier CR
  196                      | DIM IDENTIFIER AS . shared type_specifier ASSIGN_T expression CR

    SHARED  shift, and go to state 46

    $default  reduce using rule 271 (shared)

    shared  go to state 306


state 227

   47 function_declaration: DECLARE FUNCTION IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   48                     | DECLARE FUNCTION IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause CR

    LP  shift, and go to state 307


state 228

   49 function_declaration: DECLARE BSUB IDENTIFIER . LP parameter_list apostrophe RP throws_clause CR
   50                     | DECLARE BSUB IDENTIFIER . LP apostrophe RP throws_clause CR

    LP  shift, and go to state 308


state 229

   53 function_definition: BSUB IDENTIFIER LP . parameter_list apostrophe RP throws_clause myblock
   54                    | BSUB IDENTIFIER LP . apostrophe RP throws_clause myblock

    IDENTIFIER  shift, and go to state 291
    COMMA       shift, and go to state 292

    $default  reduce using rule 244 (apostrophe)

    parameter_list  go to state 309
    apostrophe      go to state 310


state 230

   63 expression: expression COMMA assignment_expression .

    $default  reduce using rule 63 (expression)


state 231

   73 logical_or_expression: logical_or_expression LOGICAL_OR logical_and_expression .
   75 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 142

    $default  reduce using rule 73 (logical_or_expression)


state 232

   75 logical_and_expression: logical_and_expression LOGICAL_AND equality_expression .
   77 equality_expression: equality_expression . EQ relational_expression
   78                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 143
    NE  shift, and go to state 144

    $default  reduce using rule 75 (logical_and_expression)


state 233

   77 equality_expression: equality_expression EQ relational_expression .
   80 relational_expression: relational_expression . GT additive_expression
   81                      | relational_expression . GE additive_expression
   82                      | relational_expression . LT additive_expression
   83                      | relational_expression . LE additive_expression

    GT  shift, and go to state 145
    GE  shift, and go to state 146
    LT  shift, and go to state 147
    LE  shift, and go to state 148

    $default  reduce using rule 77 (equality_expression)


state 234

   78 equality_expression: equality_expression NE relational_expression .
   80 relational_expression: relational_expression . GT additive_expression
   81                      | relational_expression . GE additive_expression
   82                      | relational_expression . LT additive_expression
   83                      | relational_expression . LE additive_expression

    GT  shift, and go to state 145
    GE  shift, and go to state 146
    LT  shift, and go to state 147
    LE  shift, and go to state 148

    $default  reduce using rule 78 (equality_expression)


state 235

   80 relational_expression: relational_expression GT additive_expression .
   85 additive_expression: additive_expression . ADD multiplicative_expression
   86                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 149
    SUB  shift, and go to state 150

    $default  reduce using rule 80 (relational_expression)


state 236

   81 relational_expression: relational_expression GE additive_expression .
   85 additive_expression: additive_expression . ADD multiplicative_expression
   86                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 149
    SUB  shift, and go to state 150

    $default  reduce using rule 81 (relational_expression)


state 237

   82 relational_expression: relational_expression LT additive_expression .
   85 additive_expression: additive_expression . ADD multiplicative_expression
   86                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 149
    SUB  shift, and go to state 150

    $default  reduce using rule 82 (relational_expression)


state 238

   83 relational_expression: relational_expression LE additive_expression .
   85 additive_expression: additive_expression . ADD multiplicative_expression
   86                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 149
    SUB  shift, and go to state 150

    $default  reduce using rule 83 (relational_expression)


state 239

   85 additive_expression: additive_expression ADD multiplicative_expression .
   88 multiplicative_expression: multiplicative_expression . MUL unary_expression
   89                          | multiplicative_expression . DIV unary_expression
   90                          | multiplicative_expression . MOD unary_expression
   91                          | multiplicative_expression . BIT_AND unary_expression
   92                          | multiplicative_expression . BIT_OR unary_expression
   93                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 151
    DIV      shift, and go to state 152
    MOD      shift, and go to state 153
    BIT_AND  shift, and go to state 154
    BIT_OR   shift, and go to state 155
    BIT_XOR  shift, and go to state 156

    $default  reduce using rule 85 (additive_expression)


state 240

   86 additive_expression: additive_expression SUB multiplicative_expression .
   88 multiplicative_expression: multiplicative_expression . MUL unary_expression
   89                          | multiplicative_expression . DIV unary_expression
   90                          | multiplicative_expression . MOD unary_expression
   91                          | multiplicative_expression . BIT_AND unary_expression
   92                          | multiplicative_expression . BIT_OR unary_expression
   93                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 151
    DIV      shift, and go to state 152
    MOD      shift, and go to state 153
    BIT_AND  shift, and go to state 154
    BIT_OR   shift, and go to state 155
    BIT_XOR  shift, and go to state 156

    $default  reduce using rule 86 (additive_expression)


state 241

   88 multiplicative_expression: multiplicative_expression MUL unary_expression .

    $default  reduce using rule 88 (multiplicative_expression)


state 242

   89 multiplicative_expression: multiplicative_expression DIV unary_expression .

    $default  reduce using rule 89 (multiplicative_expression)


state 243

   90 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 90 (multiplicative_expression)


state 244

   91 multiplicative_expression: multiplicative_expression BIT_AND unary_expression .

    $default  reduce using rule 91 (multiplicative_expression)


state 245

   92 multiplicative_expression: multiplicative_expression BIT_OR unary_expression .

    $default  reduce using rule 92 (multiplicative_expression)


state 246

   93 multiplicative_expression: multiplicative_expression BIT_XOR unary_expression .

    $default  reduce using rule 93 (multiplicative_expression)


state 247

  110 primary_no_new_array: primary_expression LP RP .

    $default  reduce using rule 110 (primary_no_new_array)


state 248

   59 argument_list: argument_list . COMMA assignment_expression
  109 primary_no_new_array: primary_expression LP argument_list . RP

    RP     shift, and go to state 311
    COMMA  shift, and go to state 312


state 249

   58 argument_list: assignment_expression .

    $default  reduce using rule 58 (argument_list)


state 250

  108 primary_no_new_array: primary_expression DOT IDENTIFIER .

    $default  reduce using rule 108 (primary_no_new_array)


state 251

   30 identifier_type_specifier: IDENTIFIER .
   32 array_type_specifier: IDENTIFIER . LB RB
   35 template_type_specifier: IDENTIFIER . LT type_list GT

    LB  shift, and go to state 219
    LT  shift, and go to state 208

    LT        [reduce using rule 30 (identifier_type_specifier)]
    $default  reduce using rule 30 (identifier_type_specifier)


state 252

  101 postfix_expression: primary_expression INSTANCEOF type_specifier .

    $default  reduce using rule 101 (postfix_expression)


state 253

  112 primary_no_new_array: primary_expression DOWN_CAST_BEGIN type_specifier . DOWN_CAST_END

    DOWN_CAST_END  shift, and go to state 313


state 254

   65 assignment_expression: primary_expression assignment_operator assignment_expression .

    $default  reduce using rule 65 (assignment_expression)


state 255

   63 expression: expression . COMMA assignment_expression
  106 primary_no_new_array: primary_no_new_array LB expression . RB

    RB     shift, and go to state 314
    COMMA  shift, and go to state 139


state 256

   63 expression: expression . COMMA assignment_expression
  175 while_statement: label_opt WHILE expression . myblock

    COMMA  shift, and go to state 139
    CR     shift, and go to state 108

    myblock  go to state 315


state 257

  200 block: LC . @3 statement_list RC
  201      | LC . RC

    RC  shift, and go to state 316

    $default  reduce using rule 199 (@3)

    @3  go to state 317


state 258

  177 do_while_statement: label_opt DO_T block . WHILE LP expression RP CR

    WHILE  shift, and go to state 318


state 259

  176 for_statement: label_opt FOR expression_opt . SEMICOLON expression_opt SEMICOLON expression_opt myblock

    SEMICOLON  shift, and go to state 319


state 260

  178 foreach_statement: label_opt FOREACH LP . IDENTIFIER COLON expression RP block

    IDENTIFIER  shift, and go to state 320


state 261

  217 class_or_member_modifier_list: class_or_member_modifier_list class_or_member_modifier .

    $default  reduce using rule 217 (class_or_member_modifier_list)


state 262

  211 class_definition: shared class_or_member_modifier_list class_or_interface . IDENTIFIER template_list extends CR $@5 member_declaration_list END
  215                 | shared class_or_member_modifier_list class_or_interface . IDENTIFIER template_list extends CR $@7 END

    IDENTIFIER  shift, and go to state 321


state 263

  209 class_definition: shared class_or_interface IDENTIFIER . template_list extends CR $@4 member_declaration_list END
  213                 | shared class_or_interface IDENTIFIER . template_list extends CR $@6 END

    LT  shift, and go to state 322

    $default  reduce using rule 207 (template_list)

    template_list  go to state 323


state 264

   43 lib_function: LIB IDENTIFIER $@1 . CR lib_function_declaration_list END

    CR  shift, and go to state 324


state 265

  107 primary_no_new_array: IDENTIFIER LB expression RB .

    $default  reduce using rule 107 (primary_no_new_array)


state 266

  158 if_statement: IF expression THEN myblock .
  159             | IF expression THEN myblock . ELSE myblock
  160             | IF expression THEN myblock . elsif_list
  161             | IF expression THEN myblock . elsif_list ELSE myblock

    ELSE   shift, and go to state 325
    ELSIF  shift, and go to state 326

    $default  reduce using rule 158 (if_statement)

    elsif_list  go to state 327
    elsif       go to state 328


state 267

  170 one_case: CASE . case_expression_list myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 141 (expression_list)

    assignment_expression      go to state 329
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_list            go to state 330
    case_expression_list       go to state 331


state 268

  167 switch_statement: SWITCH expression CR case_list . default_opt
  169 case_list: case_list . one_case

    CASE       shift, and go to state 267
    DEFAULT_T  shift, and go to state 332

    $default  reduce using rule 171 (default_opt)

    one_case     go to state 333
    default_opt  go to state 334


state 269

  168 case_list: one_case .

    $default  reduce using rule 168 (case_list)


state 270

  129 array_literal: LC expression_list COMMA RC .

    $default  reduce using rule 129 (array_literal)


state 271

  143 expression_list: expression_list COMMA assignment_expression .

    $default  reduce using rule 143 (expression_list)


state 272

  274 unsafe: UNSAFE CR .

    $default  reduce using rule 274 (unsafe)


state 273

  275 unsafe: SAFE CR .

    $default  reduce using rule 275 (unsafe)


state 274

  277 myblock: CR unsafe @8 . statement_list END

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    FINAL           shift, and go to state 38
    DIM             shift, and go to state 42
    CR              shift, and go to state 43

    $default  reduce using rule 165 (label_opt)

    statement_list             go to state 335
    expression                 go to state 50
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    statement                  go to state 336
    if_statement               go to state 65
    label_opt                  go to state 66
    switch_statement           go to state 67
    while_statement            go to state 68
    for_statement              go to state 69
    do_while_statement         go to state 70
    foreach_statement          go to state 71
    return_statement           go to state 72
    break_statement            go to state 73
    continue_statement         go to state 74
    try_statement              go to state 75
    throw_statement            go to state 76
    declaration_statement      go to state 77


state 275

  192 catch_clause: CATCH @2 . type_specifier IDENTIFIER myblock

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 337


state 276

  187 try_statement: TRY myblock FINALLY block .

    $default  reduce using rule 187 (try_statement)


state 277

  186 try_statement: TRY myblock catch_list FINALLY . myblock

    CR  shift, and go to state 108

    myblock  go to state 338


state 278

  190 catch_list: catch_list catch_clause .

    $default  reduce using rule 190 (catch_list)


state 279

  124 primary_no_new_array: NEW IDENTIFIER LP RP .

    $default  reduce using rule 124 (primary_no_new_array)


state 280

   59 argument_list: argument_list . COMMA assignment_expression
  125 primary_no_new_array: NEW IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 339
    COMMA  shift, and go to state 312


state 281

   40 type_list: type_specifier .

    $default  reduce using rule 40 (type_list)


state 282

   35 template_type_specifier: IDENTIFIER LT type_list . GT
   41 type_list: type_list . COMMA type_specifier

    COMMA  shift, and go to state 340
    GT     shift, and go to state 341


state 283

  126 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER . LP RP
  127                     | NEW IDENTIFIER DOT IDENTIFIER . LP argument_list RP

    LP  shift, and go to state 342


state 284

  123 primary_no_new_array: NEW DELEGATE LP RP .

    $default  reduce using rule 123 (primary_no_new_array)


state 285

   63 expression: expression . COMMA assignment_expression
  138 dimension_expression: LB expression . RB

    RB     shift, and go to state 343
    COMMA  shift, and go to state 139


state 286

  138 dimension_expression: LB . expression RB
  139 dimension_list: LB . RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    RB              shift, and go to state 344
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 285
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 287

  137 dimension_expression_list: dimension_expression_list dimension_expression .

    $default  reduce using rule 137 (dimension_expression_list)


state 288

  131 array_creation: NEW basic_type_specifier dimension_expression_list dimension_list .
  140 dimension_list: dimension_list . LB RB

    LB  shift, and go to state 345

    $default  reduce using rule 131 (array_creation)


state 289

  133 array_creation: NEW identifier_type_specifier dimension_expression_list dimension_list .
  140 dimension_list: dimension_list . LB RB

    LB  shift, and go to state 345

    $default  reduce using rule 133 (array_creation)


state 290

  135 array_creation: NEW template_type_specifier dimension_expression_list dimension_list .
  140 dimension_list: dimension_list . LB RB

    LB  shift, and go to state 345

    $default  reduce using rule 135 (array_creation)


state 291

   56 parameter_list: IDENTIFIER . AS type_specifier

    AS  shift, and go to state 346


state 292

  245 apostrophe: COMMA . APOSTROPHE

    APOSTROPHE  shift, and go to state 347


state 293

   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  263 delegate_definition: DELEGATE IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause CR

    COMMA  shift, and go to state 348

    $default  reduce using rule 244 (apostrophe)

    apostrophe  go to state 349


state 294

  264 delegate_definition: DELEGATE IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 350


state 295

  197 declaration_statement: FINAL IDENTIFIER AS type_specifier . CR
  198                      | FINAL IDENTIFIER AS type_specifier . ASSIGN_T expression CR

    ASSIGN_T  shift, and go to state 351
    CR        shift, and go to state 352


state 296

  267 enumerator_list: IDENTIFIER .

    $default  reduce using rule 267 (enumerator_list)


state 297

  265 enum_definition: ENUM IDENTIFIER LC enumerator_list . RC
  266                | ENUM IDENTIFIER LC enumerator_list . COMMA RC
  268 enumerator_list: enumerator_list . COMMA IDENTIFIER

    RC     shift, and go to state 353
    COMMA  shift, and go to state 354


state 298

   32 array_type_specifier: IDENTIFIER LB RB .

    $default  reduce using rule 32 (array_type_specifier)


state 299

   63 expression: expression . COMMA assignment_expression
  269 const_definition: CONST IDENTIFIER ASSIGN_T expression . CR

    COMMA  shift, and go to state 139
    CR     shift, and go to state 355


state 300

   31 array_type_specifier: basic_type_specifier LB RB .

    $default  reduce using rule 31 (array_type_specifier)


state 301

   33 array_type_specifier: array_type_specifier LB RB .

    $default  reduce using rule 33 (array_type_specifier)


state 302

   34 array_type_specifier: template_type_specifier LB RB .

    $default  reduce using rule 34 (array_type_specifier)


state 303

  270 const_definition: CONST type_specifier IDENTIFIER CR .

    $default  reduce using rule 270 (const_definition)


state 304

   51 function_definition: FUNCTION IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause myblock
   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 348

    $default  reduce using rule 244 (apostrophe)

    apostrophe  go to state 356


state 305

   52 function_definition: FUNCTION IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause myblock

    RP  shift, and go to state 357


state 306

  195 declaration_statement: DIM IDENTIFIER AS shared . type_specifier CR
  196                      | DIM IDENTIFIER AS shared . type_specifier ASSIGN_T expression CR

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 358


state 307

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause CR
   48                     | DECLARE FUNCTION IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 291
    COMMA       shift, and go to state 292

    $default  reduce using rule 244 (apostrophe)

    parameter_list  go to state 359
    apostrophe      go to state 360


state 308

   49 function_declaration: DECLARE BSUB IDENTIFIER LP . parameter_list apostrophe RP throws_clause CR
   50                     | DECLARE BSUB IDENTIFIER LP . apostrophe RP throws_clause CR

    IDENTIFIER  shift, and go to state 291
    COMMA       shift, and go to state 292

    $default  reduce using rule 244 (apostrophe)

    parameter_list  go to state 361
    apostrophe      go to state 362


state 309

   53 function_definition: BSUB IDENTIFIER LP parameter_list . apostrophe RP throws_clause myblock
   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 348

    $default  reduce using rule 244 (apostrophe)

    apostrophe  go to state 363


state 310

   54 function_definition: BSUB IDENTIFIER LP apostrophe . RP throws_clause myblock

    RP  shift, and go to state 364


state 311

  109 primary_no_new_array: primary_expression LP argument_list RP .

    $default  reduce using rule 109 (primary_no_new_array)


state 312

   59 argument_list: argument_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    assignment_expression      go to state 365
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 313

  112 primary_no_new_array: primary_expression DOWN_CAST_BEGIN type_specifier DOWN_CAST_END .

    $default  reduce using rule 112 (primary_no_new_array)


state 314

  106 primary_no_new_array: primary_no_new_array LB expression RB .

    $default  reduce using rule 106 (primary_no_new_array)


state 315

  175 while_statement: label_opt WHILE expression myblock .

    $default  reduce using rule 175 (while_statement)


state 316

  201 block: LC RC .

    $default  reduce using rule 201 (block)


state 317

  200 block: LC @3 . statement_list RC

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    FINAL           shift, and go to state 38
    DIM             shift, and go to state 42
    CR              shift, and go to state 43

    $default  reduce using rule 165 (label_opt)

    statement_list             go to state 366
    expression                 go to state 50
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    statement                  go to state 336
    if_statement               go to state 65
    label_opt                  go to state 66
    switch_statement           go to state 67
    while_statement            go to state 68
    for_statement              go to state 69
    do_while_statement         go to state 70
    foreach_statement          go to state 71
    return_statement           go to state 72
    break_statement            go to state 73
    continue_statement         go to state 74
    try_statement              go to state 75
    throw_statement            go to state 76
    declaration_statement      go to state 77


state 318

  177 do_while_statement: label_opt DO_T block WHILE . LP expression RP CR

    LP  shift, and go to state 367


state 319

  176 for_statement: label_opt FOR expression_opt SEMICOLON . expression_opt SEMICOLON expression_opt myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 179 (expression_opt)

    expression                 go to state 96
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_opt             go to state 368


state 320

  178 foreach_statement: label_opt FOREACH LP IDENTIFIER . COLON expression RP block

    COLON  shift, and go to state 369


state 321

  211 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER . template_list extends CR $@5 member_declaration_list END
  215                 | shared class_or_member_modifier_list class_or_interface IDENTIFIER . template_list extends CR $@7 END

    LT  shift, and go to state 322

    $default  reduce using rule 207 (template_list)

    template_list  go to state 370


state 322

  206 template_list: LT . template_def_list GT

    IDENTIFIER  shift, and go to state 371

    template_def_list  go to state 372


state 323

  209 class_definition: shared class_or_interface IDENTIFIER template_list . extends CR $@4 member_declaration_list END
  213                 | shared class_or_interface IDENTIFIER template_list . extends CR $@6 END

    COLON  shift, and go to state 373

    $default  reduce using rule 224 (extends)

    extends  go to state 374


state 324

   43 lib_function: LIB IDENTIFIER $@1 CR . lib_function_declaration_list END

    $default  reduce using rule 44 (lib_function_declaration_list)

    lib_function_declaration_list  go to state 375


state 325

  159 if_statement: IF expression THEN myblock ELSE . myblock

    CR  shift, and go to state 108

    myblock  go to state 376


state 326

  164 elsif: ELSIF . expression THEN myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 377
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 327

  160 if_statement: IF expression THEN myblock elsif_list .
  161             | IF expression THEN myblock elsif_list . ELSE myblock
  163 elsif_list: elsif_list . elsif

    ELSE   shift, and go to state 378
    ELSIF  shift, and go to state 326

    $default  reduce using rule 160 (if_statement)

    elsif  go to state 379


state 328

  162 elsif_list: elsif .

    $default  reduce using rule 162 (elsif_list)


state 329

  142 expression_list: assignment_expression .
  173 case_expression_list: assignment_expression .

    CR        reduce using rule 173 (case_expression_list)
    $default  reduce using rule 142 (expression_list)


state 330

  143 expression_list: expression_list . COMMA assignment_expression
  174 case_expression_list: expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 380


state 331

  170 one_case: CASE case_expression_list . myblock

    CR  shift, and go to state 108

    myblock  go to state 381


state 332

  172 default_opt: DEFAULT_T . myblock

    CR  shift, and go to state 108

    myblock  go to state 382


state 333

  169 case_list: case_list one_case .

    $default  reduce using rule 169 (case_list)


state 334

  167 switch_statement: SWITCH expression CR case_list default_opt .

    $default  reduce using rule 167 (switch_statement)


state 335

   61 statement_list: statement_list . statement
  277 myblock: CR unsafe @8 statement_list . END

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    FINAL           shift, and go to state 38
    DIM             shift, and go to state 42
    END             shift, and go to state 383
    CR              shift, and go to state 43

    $default  reduce using rule 165 (label_opt)

    expression                 go to state 50
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    statement                  go to state 384
    if_statement               go to state 65
    label_opt                  go to state 66
    switch_statement           go to state 67
    while_statement            go to state 68
    for_statement              go to state 69
    do_while_statement         go to state 70
    foreach_statement          go to state 71
    return_statement           go to state 72
    break_statement            go to state 73
    continue_statement         go to state 74
    try_statement              go to state 75
    throw_statement            go to state 76
    declaration_statement      go to state 77


state 336

   60 statement_list: statement .

    $default  reduce using rule 60 (statement_list)


state 337

  192 catch_clause: CATCH @2 type_specifier . IDENTIFIER myblock

    IDENTIFIER  shift, and go to state 385


state 338

  186 try_statement: TRY myblock catch_list FINALLY myblock .

    $default  reduce using rule 186 (try_statement)


state 339

  125 primary_no_new_array: NEW IDENTIFIER LP argument_list RP .

    $default  reduce using rule 125 (primary_no_new_array)


state 340

   41 type_list: type_list COMMA . type_specifier

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 386


state 341

   35 template_type_specifier: IDENTIFIER LT type_list GT .

    $default  reduce using rule 35 (template_type_specifier)


state 342

  126 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP . RP
  127                     | NEW IDENTIFIER DOT IDENTIFIER LP . argument_list RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    RP              shift, and go to state 387
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    argument_list              go to state 388
    assignment_expression      go to state 249
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 343

  138 dimension_expression: LB expression RB .

    $default  reduce using rule 138 (dimension_expression)


state 344

  139 dimension_list: LB RB .

    $default  reduce using rule 139 (dimension_list)


state 345

  140 dimension_list: dimension_list LB . RB

    RB  shift, and go to state 389


state 346

   56 parameter_list: IDENTIFIER AS . type_specifier

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 390


state 347

  245 apostrophe: COMMA APOSTROPHE .

    $default  reduce using rule 245 (apostrophe)


state 348

   57 parameter_list: parameter_list COMMA . IDENTIFIER AS type_specifier
  245 apostrophe: COMMA . APOSTROPHE

    IDENTIFIER  shift, and go to state 391
    APOSTROPHE  shift, and go to state 347


state 349

  263 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 392


state 350

  264 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 393


state 351

  198 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 394
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 352

  197 declaration_statement: FINAL IDENTIFIER AS type_specifier CR .

    $default  reduce using rule 197 (declaration_statement)


state 353

  265 enum_definition: ENUM IDENTIFIER LC enumerator_list RC .

    $default  reduce using rule 265 (enum_definition)


state 354

  266 enum_definition: ENUM IDENTIFIER LC enumerator_list COMMA . RC
  268 enumerator_list: enumerator_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 395
    RC          shift, and go to state 396


state 355

  269 const_definition: CONST IDENTIFIER ASSIGN_T expression CR .

    $default  reduce using rule 269 (const_definition)


state 356

   51 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause myblock

    RP  shift, and go to state 397


state 357

   52 function_definition: FUNCTION IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 398


state 358

  195 declaration_statement: DIM IDENTIFIER AS shared type_specifier . CR
  196                      | DIM IDENTIFIER AS shared type_specifier . ASSIGN_T expression CR

    ASSIGN_T  shift, and go to state 399
    CR        shift, and go to state 400


state 359

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause CR
   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 348

    $default  reduce using rule 244 (apostrophe)

    apostrophe  go to state 401


state 360

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 402


state 361

   49 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list . apostrophe RP throws_clause CR
   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 348

    $default  reduce using rule 244 (apostrophe)

    apostrophe  go to state 403


state 362

   50 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe . RP throws_clause CR

    RP  shift, and go to state 404


state 363

   53 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe . RP throws_clause myblock

    RP  shift, and go to state 405


state 364

   54 function_definition: BSUB IDENTIFIER LP apostrophe RP . throws_clause myblock

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 407


state 365

   59 argument_list: argument_list COMMA assignment_expression .

    $default  reduce using rule 59 (argument_list)


state 366

   61 statement_list: statement_list . statement
  200 block: LC @3 statement_list . RC

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    RC              shift, and go to state 408
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    FINAL           shift, and go to state 38
    DIM             shift, and go to state 42
    CR              shift, and go to state 43

    $default  reduce using rule 165 (label_opt)

    expression                 go to state 50
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    statement                  go to state 384
    if_statement               go to state 65
    label_opt                  go to state 66
    switch_statement           go to state 67
    while_statement            go to state 68
    for_statement              go to state 69
    do_while_statement         go to state 70
    foreach_statement          go to state 71
    return_statement           go to state 72
    break_statement            go to state 73
    continue_statement         go to state 74
    try_statement              go to state 75
    throw_statement            go to state 76
    declaration_statement      go to state 77


state 367

  177 do_while_statement: label_opt DO_T block WHILE LP . expression RP CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 409
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 368

  176 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt . SEMICOLON expression_opt myblock

    SEMICOLON  shift, and go to state 410


state 369

  178 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON . expression RP block

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 411
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 370

  211 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list . extends CR $@5 member_declaration_list END
  215                 | shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list . extends CR $@7 END

    COLON  shift, and go to state 373

    $default  reduce using rule 224 (extends)

    extends  go to state 412


state 371

  202 template_def_list: IDENTIFIER .
  204                  | IDENTIFIER . COLON identifier_type_specifier

    COLON  shift, and go to state 413

    $default  reduce using rule 202 (template_def_list)


state 372

  203 template_def_list: template_def_list . COMMA IDENTIFIER
  205                  | template_def_list . COMMA IDENTIFIER COLON identifier_type_specifier
  206 template_list: LT template_def_list . GT

    COMMA  shift, and go to state 414
    GT     shift, and go to state 415


state 373

  225 extends: COLON . extends_list

    IDENTIFIER  shift, and go to state 416

    extends_list  go to state 417


state 374

  209 class_definition: shared class_or_interface IDENTIFIER template_list extends . CR $@4 member_declaration_list END
  213                 | shared class_or_interface IDENTIFIER template_list extends . CR $@6 END

    CR  shift, and go to state 418


state 375

   43 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list . END
   45 lib_function_declaration_list: lib_function_declaration_list . function_declaration
   46                              | lib_function_declaration_list . class_definition

    END      shift, and go to state 419
    DECLARE  shift, and go to state 44
    SHARED   shift, and go to state 46

    $default  reduce using rule 271 (shared)

    function_declaration  go to state 420
    class_definition      go to state 421
    shared                go to state 82


state 376

  159 if_statement: IF expression THEN myblock ELSE myblock .

    $default  reduce using rule 159 (if_statement)


state 377

   63 expression: expression . COMMA assignment_expression
  164 elsif: ELSIF expression . THEN myblock

    COMMA  shift, and go to state 139
    THEN   shift, and go to state 422


state 378

  161 if_statement: IF expression THEN myblock elsif_list ELSE . myblock

    CR  shift, and go to state 108

    myblock  go to state 423


state 379

  163 elsif_list: elsif_list elsif .

    $default  reduce using rule 163 (elsif_list)


state 380

  143 expression_list: expression_list COMMA . assignment_expression
  174 case_expression_list: expression_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    assignment_expression      go to state 424
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 381

  170 one_case: CASE case_expression_list myblock .

    $default  reduce using rule 170 (one_case)


state 382

  172 default_opt: DEFAULT_T myblock .

    $default  reduce using rule 172 (default_opt)


state 383

  277 myblock: CR unsafe @8 statement_list END .

    $default  reduce using rule 277 (myblock)


state 384

   61 statement_list: statement_list statement .

    $default  reduce using rule 61 (statement_list)


state 385

  192 catch_clause: CATCH @2 type_specifier IDENTIFIER . myblock

    CR  shift, and go to state 108

    myblock  go to state 425


state 386

   41 type_list: type_list COMMA type_specifier .

    $default  reduce using rule 41 (type_list)


state 387

  126 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP RP .

    $default  reduce using rule 126 (primary_no_new_array)


state 388

   59 argument_list: argument_list . COMMA assignment_expression
  127 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 426
    COMMA  shift, and go to state 312


state 389

  140 dimension_list: dimension_list LB RB .

    $default  reduce using rule 140 (dimension_list)


state 390

   56 parameter_list: IDENTIFIER AS type_specifier .

    $default  reduce using rule 56 (parameter_list)


state 391

   57 parameter_list: parameter_list COMMA IDENTIFIER . AS type_specifier

    AS  shift, and go to state 427


state 392

  263 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 428


state 393

  264 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 429


state 394

   63 expression: expression . COMMA assignment_expression
  198 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T expression . CR

    COMMA  shift, and go to state 139
    CR     shift, and go to state 430


state 395

  268 enumerator_list: enumerator_list COMMA IDENTIFIER .

    $default  reduce using rule 268 (enumerator_list)


state 396

  266 enum_definition: ENUM IDENTIFIER LC enumerator_list COMMA RC .

    $default  reduce using rule 266 (enum_definition)


state 397

   51 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 431


state 398

   52 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 432


state 399

  196 declaration_statement: DIM IDENTIFIER AS shared type_specifier ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 433
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 400

  195 declaration_statement: DIM IDENTIFIER AS shared type_specifier CR .

    $default  reduce using rule 195 (declaration_statement)


state 401

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 434


state 402

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 435


state 403

   49 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe . RP throws_clause CR

    RP  shift, and go to state 436


state 404

   50 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP . throws_clause CR

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 437


state 405

   53 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP . throws_clause myblock

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 438


state 406

  247 throws_clause: THROWS . exception_list

    IDENTIFIER  shift, and go to state 439

    exception_list  go to state 440


state 407

   54 function_definition: BSUB IDENTIFIER LP apostrophe RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 441


state 408

  200 block: LC @3 statement_list RC .

    $default  reduce using rule 200 (block)


state 409

   63 expression: expression . COMMA assignment_expression
  177 do_while_statement: label_opt DO_T block WHILE LP expression . RP CR

    RP     shift, and go to state 442
    COMMA  shift, and go to state 139


state 410

  176 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON . expression_opt myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 179 (expression_opt)

    expression                 go to state 96
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_opt             go to state 443


state 411

   63 expression: expression . COMMA assignment_expression
  178 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression . RP block

    RP     shift, and go to state 444
    COMMA  shift, and go to state 139


state 412

  211 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends . CR $@5 member_declaration_list END
  215                 | shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends . CR $@7 END

    CR  shift, and go to state 445


state 413

  204 template_def_list: IDENTIFIER COLON . identifier_type_specifier

    IDENTIFIER  shift, and go to state 446

    identifier_type_specifier  go to state 447


state 414

  203 template_def_list: template_def_list COMMA . IDENTIFIER
  205                  | template_def_list COMMA . IDENTIFIER COLON identifier_type_specifier

    IDENTIFIER  shift, and go to state 448


state 415

  206 template_list: LT template_def_list GT .

    $default  reduce using rule 206 (template_list)


state 416

  226 extends_list: IDENTIFIER .

    $default  reduce using rule 226 (extends_list)


state 417

  225 extends: COLON extends_list .
  227 extends_list: extends_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 449

    $default  reduce using rule 225 (extends)


state 418

  209 class_definition: shared class_or_interface IDENTIFIER template_list extends CR . $@4 member_declaration_list END
  213                 | shared class_or_interface IDENTIFIER template_list extends CR . $@6 END

    END       reduce using rule 212 ($@6)
    $default  reduce using rule 208 ($@4)

    $@4  go to state 450
    $@6  go to state 451


state 419

   43 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list END .

    $default  reduce using rule 43 (lib_function)


state 420

   45 lib_function_declaration_list: lib_function_declaration_list function_declaration .

    $default  reduce using rule 45 (lib_function_declaration_list)


state 421

   46 lib_function_declaration_list: lib_function_declaration_list class_definition .

    $default  reduce using rule 46 (lib_function_declaration_list)


state 422

  164 elsif: ELSIF expression THEN . myblock

    CR  shift, and go to state 108

    myblock  go to state 452


state 423

  161 if_statement: IF expression THEN myblock elsif_list ELSE myblock .

    $default  reduce using rule 161 (if_statement)


state 424

  143 expression_list: expression_list COMMA assignment_expression .
  174 case_expression_list: expression_list COMMA assignment_expression .

    CR        reduce using rule 174 (case_expression_list)
    $default  reduce using rule 143 (expression_list)


state 425

  192 catch_clause: CATCH @2 type_specifier IDENTIFIER myblock .

    $default  reduce using rule 192 (catch_clause)


state 426

  127 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP argument_list RP .

    $default  reduce using rule 127 (primary_no_new_array)


state 427

   57 parameter_list: parameter_list COMMA IDENTIFIER AS . type_specifier

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 453


state 428

  263 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 454


state 429

  264 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 455


state 430

  198 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T expression CR .

    $default  reduce using rule 198 (declaration_statement)


state 431

   51 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 456


state 432

   52 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 457


state 433

   63 expression: expression . COMMA assignment_expression
  196 declaration_statement: DIM IDENTIFIER AS shared type_specifier ASSIGN_T expression . CR

    COMMA  shift, and go to state 139
    CR     shift, and go to state 458


state 434

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 459


state 435

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 460


state 436

   49 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP . throws_clause CR

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 461


state 437

   50 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause . CR

    CR  shift, and go to state 462


state 438

   53 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 463


state 439

  248 exception_list: IDENTIFIER .

    $default  reduce using rule 248 (exception_list)


state 440

  247 throws_clause: THROWS exception_list .
  249 exception_list: exception_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 464

    $default  reduce using rule 247 (throws_clause)


state 441

   54 function_definition: BSUB IDENTIFIER LP apostrophe RP throws_clause myblock .

    $default  reduce using rule 54 (function_definition)


state 442

  177 do_while_statement: label_opt DO_T block WHILE LP expression RP . CR

    CR  shift, and go to state 465


state 443

  176 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt . myblock

    CR  shift, and go to state 108

    myblock  go to state 466


state 444

  178 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP . block

    LC  shift, and go to state 257

    block  go to state 467


state 445

  211 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR . $@5 member_declaration_list END
  215                 | shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR . $@7 END

    END       reduce using rule 214 ($@7)
    $default  reduce using rule 210 ($@5)

    $@5  go to state 468
    $@7  go to state 469


state 446

   30 identifier_type_specifier: IDENTIFIER .

    $default  reduce using rule 30 (identifier_type_specifier)


state 447

  204 template_def_list: IDENTIFIER COLON identifier_type_specifier .

    $default  reduce using rule 204 (template_def_list)


state 448

  203 template_def_list: template_def_list COMMA IDENTIFIER .
  205                  | template_def_list COMMA IDENTIFIER . COLON identifier_type_specifier

    COLON  shift, and go to state 470

    $default  reduce using rule 203 (template_def_list)


state 449

  227 extends_list: extends_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 471


state 450

  209 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@4 . member_declaration_list END

    PUBLIC_T     shift, and go to state 177
    PRIVATE_T    shift, and go to state 178
    VIRTUAL_T    shift, and go to state 179
    OVERRIDE_T   shift, and go to state 180
    ABSTRACT_T   shift, and go to state 181
    CONSTRUCTOR  shift, and go to state 472
    FINAL        shift, and go to state 473
    FUNCTION     shift, and go to state 474
    DIM          shift, and go to state 475
    DECLARE      shift, and go to state 476
    BSUB         shift, and go to state 477

    class_or_member_modifier_list  go to state 478
    class_or_member_modifier       go to state 183
    member_declaration_list        go to state 479
    member_declaration             go to state 480
    method_member                  go to state 481
    method_function_definition     go to state 482
    constructor_definition         go to state 483
    access_modifier                go to state 185
    field_member                   go to state 484


state 451

  213 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@6 . END

    END  shift, and go to state 485


state 452

  164 elsif: ELSIF expression THEN myblock .

    $default  reduce using rule 164 (elsif)


state 453

   57 parameter_list: parameter_list COMMA IDENTIFIER AS type_specifier .

    $default  reduce using rule 57 (parameter_list)


state 454

  263 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 486


state 455

  264 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 487


state 456

   51 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 488


state 457

   52 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 489


state 458

  196 declaration_statement: DIM IDENTIFIER AS shared type_specifier ASSIGN_T expression CR .

    $default  reduce using rule 196 (declaration_statement)


state 459

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 490


state 460

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 491


state 461

   49 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause . CR

    CR  shift, and go to state 492


state 462

   50 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause CR .

    $default  reduce using rule 50 (function_declaration)


state 463

   53 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock .

    $default  reduce using rule 53 (function_definition)


state 464

  249 exception_list: exception_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 493


state 465

  177 do_while_statement: label_opt DO_T block WHILE LP expression RP CR .

    $default  reduce using rule 177 (do_while_statement)


state 466

  176 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock .

    $default  reduce using rule 176 (for_statement)


state 467

  178 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP block .

    $default  reduce using rule 178 (foreach_statement)


state 468

  211 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 . member_declaration_list END

    PUBLIC_T     shift, and go to state 177
    PRIVATE_T    shift, and go to state 178
    VIRTUAL_T    shift, and go to state 179
    OVERRIDE_T   shift, and go to state 180
    ABSTRACT_T   shift, and go to state 181
    CONSTRUCTOR  shift, and go to state 472
    FINAL        shift, and go to state 473
    FUNCTION     shift, and go to state 474
    DIM          shift, and go to state 475
    DECLARE      shift, and go to state 476
    BSUB         shift, and go to state 477

    class_or_member_modifier_list  go to state 478
    class_or_member_modifier       go to state 183
    member_declaration_list        go to state 494
    member_declaration             go to state 480
    method_member                  go to state 481
    method_function_definition     go to state 482
    constructor_definition         go to state 483
    access_modifier                go to state 185
    field_member                   go to state 484


state 469

  215 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 . END

    END  shift, and go to state 495


state 470

  205 template_def_list: template_def_list COMMA IDENTIFIER COLON . identifier_type_specifier

    IDENTIFIER  shift, and go to state 446

    identifier_type_specifier  go to state 496


state 471

  227 extends_list: extends_list COMMA IDENTIFIER .

    $default  reduce using rule 227 (extends_list)


state 472

  250 constructor_definition: CONSTRUCTOR . IDENTIFIER LP parameter_list RP throws_clause myblock
  251                       | CONSTRUCTOR . IDENTIFIER LP RP throws_clause myblock

    IDENTIFIER  shift, and go to state 497


state 473

  260 field_member: FINAL . IDENTIFIER AS type_specifier initializer_opt CR
  262             | FINAL . class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 498
    PUBLIC_T    shift, and go to state 177
    PRIVATE_T   shift, and go to state 178
    VIRTUAL_T   shift, and go to state 179
    OVERRIDE_T  shift, and go to state 180
    ABSTRACT_T  shift, and go to state 181

    class_or_member_modifier_list  go to state 499
    class_or_member_modifier       go to state 183
    access_modifier                go to state 185


state 474

  236 method_function_definition: FUNCTION . IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock
  237                           | FUNCTION . IDENTIFIER LP RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 500


state 475

  258 field_member: DIM . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 501


state 476

  238 method_function_definition: DECLARE . FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  239                           | DECLARE . FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR
  242                           | DECLARE . BSUB IDENTIFIER LP parameter_list RP throws_clause CR
  243                           | DECLARE . BSUB IDENTIFIER LP RP throws_clause CR
  252 constructor_definition: DECLARE . CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR
  253                       | DECLARE . CONSTRUCTOR IDENTIFIER LP RP throws_clause CR

    CONSTRUCTOR  shift, and go to state 502
    FUNCTION     shift, and go to state 503
    BSUB         shift, and go to state 504


state 477

  240 method_function_definition: BSUB . IDENTIFIER LP parameter_list RP throws_clause myblock
  241                           | BSUB . IDENTIFIER LP RP throws_clause myblock

    IDENTIFIER  shift, and go to state 505


state 478

  217 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier
  233 method_member: class_or_member_modifier_list . method_function_definition
  235              | class_or_member_modifier_list . constructor_definition
  259 field_member: class_or_member_modifier_list . IDENTIFIER AS type_specifier initializer_opt CR
  261             | class_or_member_modifier_list . FINAL IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER   shift, and go to state 506
    PUBLIC_T     shift, and go to state 177
    PRIVATE_T    shift, and go to state 178
    VIRTUAL_T    shift, and go to state 179
    OVERRIDE_T   shift, and go to state 180
    ABSTRACT_T   shift, and go to state 181
    CONSTRUCTOR  shift, and go to state 472
    FINAL        shift, and go to state 507
    FUNCTION     shift, and go to state 474
    DECLARE      shift, and go to state 476
    BSUB         shift, and go to state 477

    class_or_member_modifier    go to state 261
    method_function_definition  go to state 508
    constructor_definition      go to state 509
    access_modifier             go to state 185


state 479

  209 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list . END
  229 member_declaration_list: member_declaration_list . member_declaration

    PUBLIC_T     shift, and go to state 177
    PRIVATE_T    shift, and go to state 178
    VIRTUAL_T    shift, and go to state 179
    OVERRIDE_T   shift, and go to state 180
    ABSTRACT_T   shift, and go to state 181
    CONSTRUCTOR  shift, and go to state 472
    FINAL        shift, and go to state 473
    FUNCTION     shift, and go to state 474
    DIM          shift, and go to state 475
    END          shift, and go to state 510
    DECLARE      shift, and go to state 476
    BSUB         shift, and go to state 477

    class_or_member_modifier_list  go to state 478
    class_or_member_modifier       go to state 183
    member_declaration             go to state 511
    method_member                  go to state 481
    method_function_definition     go to state 482
    constructor_definition         go to state 483
    access_modifier                go to state 185
    field_member                   go to state 484


state 480

  228 member_declaration_list: member_declaration .

    $default  reduce using rule 228 (member_declaration_list)


state 481

  230 member_declaration: method_member .

    $default  reduce using rule 230 (member_declaration)


state 482

  232 method_member: method_function_definition .

    $default  reduce using rule 232 (method_member)


state 483

  234 method_member: constructor_definition .

    $default  reduce using rule 234 (method_member)


state 484

  231 member_declaration: field_member .

    $default  reduce using rule 231 (member_declaration)


state 485

  213 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@6 END .

    $default  reduce using rule 213 (class_definition)


state 486

  263 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 512


state 487

  264 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 264 (delegate_definition)


state 488

   51 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 513


state 489

   52 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 52 (function_definition)


state 490

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 514


state 491

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 515


state 492

   49 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR .

    $default  reduce using rule 49 (function_declaration)


state 493

  249 exception_list: exception_list COMMA IDENTIFIER .

    $default  reduce using rule 249 (exception_list)


state 494

  211 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list . END
  229 member_declaration_list: member_declaration_list . member_declaration

    PUBLIC_T     shift, and go to state 177
    PRIVATE_T    shift, and go to state 178
    VIRTUAL_T    shift, and go to state 179
    OVERRIDE_T   shift, and go to state 180
    ABSTRACT_T   shift, and go to state 181
    CONSTRUCTOR  shift, and go to state 472
    FINAL        shift, and go to state 473
    FUNCTION     shift, and go to state 474
    DIM          shift, and go to state 475
    END          shift, and go to state 516
    DECLARE      shift, and go to state 476
    BSUB         shift, and go to state 477

    class_or_member_modifier_list  go to state 478
    class_or_member_modifier       go to state 183
    member_declaration             go to state 511
    method_member                  go to state 481
    method_function_definition     go to state 482
    constructor_definition         go to state 483
    access_modifier                go to state 185
    field_member                   go to state 484


state 495

  215 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 END .

    $default  reduce using rule 215 (class_definition)


state 496

  205 template_def_list: template_def_list COMMA IDENTIFIER COLON identifier_type_specifier .

    $default  reduce using rule 205 (template_def_list)


state 497

  250 constructor_definition: CONSTRUCTOR IDENTIFIER . LP parameter_list RP throws_clause myblock
  251                       | CONSTRUCTOR IDENTIFIER . LP RP throws_clause myblock

    LP  shift, and go to state 517


state 498

  260 field_member: FINAL IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 518


state 499

  217 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier
  262 field_member: FINAL class_or_member_modifier_list . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 519
    PUBLIC_T    shift, and go to state 177
    PRIVATE_T   shift, and go to state 178
    VIRTUAL_T   shift, and go to state 179
    OVERRIDE_T  shift, and go to state 180
    ABSTRACT_T  shift, and go to state 181

    class_or_member_modifier  go to state 261
    access_modifier           go to state 185


state 500

  236 method_function_definition: FUNCTION IDENTIFIER . LP parameter_list RP AS type_specifier throws_clause myblock
  237                           | FUNCTION IDENTIFIER . LP RP AS type_specifier throws_clause myblock

    LP  shift, and go to state 520


state 501

  258 field_member: DIM IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 521


state 502

  252 constructor_definition: DECLARE CONSTRUCTOR . IDENTIFIER LP parameter_list RP throws_clause CR
  253                       | DECLARE CONSTRUCTOR . IDENTIFIER LP RP throws_clause CR

    IDENTIFIER  shift, and go to state 522


state 503

  238 method_function_definition: DECLARE FUNCTION . IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  239                           | DECLARE FUNCTION . IDENTIFIER LP RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 523


state 504

  242 method_function_definition: DECLARE BSUB . IDENTIFIER LP parameter_list RP throws_clause CR
  243                           | DECLARE BSUB . IDENTIFIER LP RP throws_clause CR

    IDENTIFIER  shift, and go to state 524


state 505

  240 method_function_definition: BSUB IDENTIFIER . LP parameter_list RP throws_clause myblock
  241                           | BSUB IDENTIFIER . LP RP throws_clause myblock

    LP  shift, and go to state 525


state 506

  259 field_member: class_or_member_modifier_list IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 526


state 507

  261 field_member: class_or_member_modifier_list FINAL . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 527


state 508

  233 method_member: class_or_member_modifier_list method_function_definition .

    $default  reduce using rule 233 (method_member)


state 509

  235 method_member: class_or_member_modifier_list constructor_definition .

    $default  reduce using rule 235 (method_member)


state 510

  209 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list END .

    $default  reduce using rule 209 (class_definition)


state 511

  229 member_declaration_list: member_declaration_list member_declaration .

    $default  reduce using rule 229 (member_declaration_list)


state 512

  263 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 263 (delegate_definition)


state 513

   51 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 51 (function_definition)


state 514

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 528


state 515

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 48 (function_declaration)


state 516

  211 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END .

    $default  reduce using rule 211 (class_definition)


state 517

  250 constructor_definition: CONSTRUCTOR IDENTIFIER LP . parameter_list RP throws_clause myblock
  251                       | CONSTRUCTOR IDENTIFIER LP . RP throws_clause myblock

    IDENTIFIER  shift, and go to state 291
    RP          shift, and go to state 529

    parameter_list  go to state 530


state 518

  260 field_member: FINAL IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 531


state 519

  262 field_member: FINAL class_or_member_modifier_list IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 532


state 520

  236 method_function_definition: FUNCTION IDENTIFIER LP . parameter_list RP AS type_specifier throws_clause myblock
  237                           | FUNCTION IDENTIFIER LP . RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 291
    RP          shift, and go to state 533

    parameter_list  go to state 534


state 521

  258 field_member: DIM IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 535


state 522

  252 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER . LP parameter_list RP throws_clause CR
  253                       | DECLARE CONSTRUCTOR IDENTIFIER . LP RP throws_clause CR

    LP  shift, and go to state 536


state 523

  238 method_function_definition: DECLARE FUNCTION IDENTIFIER . LP parameter_list RP AS type_specifier throws_clause CR
  239                           | DECLARE FUNCTION IDENTIFIER . LP RP AS type_specifier throws_clause CR

    LP  shift, and go to state 537


state 524

  242 method_function_definition: DECLARE BSUB IDENTIFIER . LP parameter_list RP throws_clause CR
  243                           | DECLARE BSUB IDENTIFIER . LP RP throws_clause CR

    LP  shift, and go to state 538


state 525

  240 method_function_definition: BSUB IDENTIFIER LP . parameter_list RP throws_clause myblock
  241                           | BSUB IDENTIFIER LP . RP throws_clause myblock

    IDENTIFIER  shift, and go to state 291
    RP          shift, and go to state 539

    parameter_list  go to state 540


state 526

  259 field_member: class_or_member_modifier_list IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 541


state 527

  261 field_member: class_or_member_modifier_list FINAL IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 542


state 528

   47 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 47 (function_declaration)


state 529

  251 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP . throws_clause myblock

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 543


state 530

   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  250 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list . RP throws_clause myblock

    RP     shift, and go to state 544
    COMMA  shift, and go to state 545


state 531

  260 field_member: FINAL IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 546

    $default  reduce using rule 256 (initializer_opt)

    initializer_opt  go to state 547


state 532

  262 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 548


state 533

  237 method_function_definition: FUNCTION IDENTIFIER LP RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 549


state 534

   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  236 method_function_definition: FUNCTION IDENTIFIER LP parameter_list . RP AS type_specifier throws_clause myblock

    RP     shift, and go to state 550
    COMMA  shift, and go to state 545


state 535

  258 field_member: DIM IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 546

    $default  reduce using rule 256 (initializer_opt)

    initializer_opt  go to state 551


state 536

  252 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP . parameter_list RP throws_clause CR
  253                       | DECLARE CONSTRUCTOR IDENTIFIER LP . RP throws_clause CR

    IDENTIFIER  shift, and go to state 291
    RP          shift, and go to state 552

    parameter_list  go to state 553


state 537

  238 method_function_definition: DECLARE FUNCTION IDENTIFIER LP . parameter_list RP AS type_specifier throws_clause CR
  239                           | DECLARE FUNCTION IDENTIFIER LP . RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 291
    RP          shift, and go to state 554

    parameter_list  go to state 555


state 538

  242 method_function_definition: DECLARE BSUB IDENTIFIER LP . parameter_list RP throws_clause CR
  243                           | DECLARE BSUB IDENTIFIER LP . RP throws_clause CR

    IDENTIFIER  shift, and go to state 291
    RP          shift, and go to state 556

    parameter_list  go to state 557


state 539

  241 method_function_definition: BSUB IDENTIFIER LP RP . throws_clause myblock

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 558


state 540

   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  240 method_function_definition: BSUB IDENTIFIER LP parameter_list . RP throws_clause myblock

    RP     shift, and go to state 559
    COMMA  shift, and go to state 545


state 541

  259 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 546

    $default  reduce using rule 256 (initializer_opt)

    initializer_opt  go to state 560


state 542

  261 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 561


state 543

  251 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 562


state 544

  250 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP . throws_clause myblock

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 563


state 545

   57 parameter_list: parameter_list COMMA . IDENTIFIER AS type_specifier

    IDENTIFIER  shift, and go to state 391


state 546

  257 initializer_opt: ASSIGN_T . expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 564
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 547

  260 field_member: FINAL IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 565


state 548

  262 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 546

    $default  reduce using rule 256 (initializer_opt)

    initializer_opt  go to state 566


state 549

  237 method_function_definition: FUNCTION IDENTIFIER LP RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 567


state 550

  236 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 568


state 551

  258 field_member: DIM IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 569


state 552

  253 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP . throws_clause CR

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 570


state 553

   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  252 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list . RP throws_clause CR

    RP     shift, and go to state 571
    COMMA  shift, and go to state 545


state 554

  239 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 572


state 555

   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  238 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list . RP AS type_specifier throws_clause CR

    RP     shift, and go to state 573
    COMMA  shift, and go to state 545


state 556

  243 method_function_definition: DECLARE BSUB IDENTIFIER LP RP . throws_clause CR

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 574


state 557

   57 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  242 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list . RP throws_clause CR

    RP     shift, and go to state 575
    COMMA  shift, and go to state 545


state 558

  241 method_function_definition: BSUB IDENTIFIER LP RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 576


state 559

  240 method_function_definition: BSUB IDENTIFIER LP parameter_list RP . throws_clause myblock

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 577


state 560

  259 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 578


state 561

  261 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 546

    $default  reduce using rule 256 (initializer_opt)

    initializer_opt  go to state 579


state 562

  251 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP throws_clause myblock .

    $default  reduce using rule 251 (constructor_definition)


state 563

  250 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 580


state 564

   63 expression: expression . COMMA assignment_expression
  257 initializer_opt: ASSIGN_T expression .

    COMMA  shift, and go to state 139

    $default  reduce using rule 257 (initializer_opt)


state 565

  260 field_member: FINAL IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 260 (field_member)


state 566

  262 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 581


state 567

  237 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 582


state 568

  236 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 583


state 569

  258 field_member: DIM IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 258 (field_member)


state 570

  253 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause . CR

    CR  shift, and go to state 584


state 571

  252 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP . throws_clause CR

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 585


state 572

  239 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 586


state 573

  238 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 587


state 574

  243 method_function_definition: DECLARE BSUB IDENTIFIER LP RP throws_clause . CR

    CR  shift, and go to state 588


state 575

  242 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP . throws_clause CR

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 589


state 576

  241 method_function_definition: BSUB IDENTIFIER LP RP throws_clause myblock .

    $default  reduce using rule 241 (method_function_definition)


state 577

  240 method_function_definition: BSUB IDENTIFIER LP parameter_list RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 590


state 578

  259 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 259 (field_member)


state 579

  261 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 591


state 580

  250 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause myblock .

    $default  reduce using rule 250 (constructor_definition)


state 581

  262 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 262 (field_member)


state 582

  237 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 592


state 583

  236 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 593


state 584

  253 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause CR .

    $default  reduce using rule 253 (constructor_definition)


state 585

  252 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause . CR

    CR  shift, and go to state 594


state 586

  239 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 595


state 587

  238 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 251
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier       go to state 131
    template_type_specifier    go to state 132
    type_specifier             go to state 596


state 588

  243 method_function_definition: DECLARE BSUB IDENTIFIER LP RP throws_clause CR .

    $default  reduce using rule 243 (method_function_definition)


state 589

  242 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause . CR

    CR  shift, and go to state 597


state 590

  240 method_function_definition: BSUB IDENTIFIER LP parameter_list RP throws_clause myblock .

    $default  reduce using rule 240 (method_function_definition)


state 591

  261 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 261 (field_member)


state 592

  237 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 237 (method_function_definition)


state 593

  236 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 598


state 594

  252 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR .

    $default  reduce using rule 252 (constructor_definition)


state 595

  239 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 599


state 596

  238 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 406

    $default  reduce using rule 246 (throws_clause)

    throws_clause  go to state 600


state 597

  242 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause CR .

    $default  reduce using rule 242 (method_function_definition)


state 598

  236 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 236 (method_function_definition)


state 599

  239 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR .

    $default  reduce using rule 239 (method_function_definition)


state 600

  238 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 601


state 601

  238 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR .

    $default  reduce using rule 238 (method_function_definition)
