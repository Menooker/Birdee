Grammar

    0 $accept: translation_unit $end

    1 translation_unit: initial_declaration definition_or_statement
    2                 | translation_unit definition_or_statement

    3 initial_declaration: /* empty */
    4                    | require_list rename_list
    5                    | require_list
    6                    | rename_list
    7                    | lib_function

    8 require_list: require_declaration
    9             | require_list require_declaration

   10 require_declaration: REQUIRE package_name CR

   11 package_name: IDENTIFIER
   12             | package_name DOT IDENTIFIER

   13 rename_list: rename_declaration
   14            | rename_list rename_declaration

   15 rename_declaration: RENAME package_name IDENTIFIER CR

   16 definition_or_statement: function_definition
   17                        | class_definition
   18                        | statement
   19                        | delegate_definition
   20                        | enum_definition
   21                        | const_definition

   22 basic_type_specifier: VOID_T
   23                     | BOOLEAN_T
   24                     | INT_T
   25                     | DOUBLE_T
   26                     | STRING_T
   27                     | VARIENT_T
   28                     | NATIVE_POINTER_T
   29                     | DELEGATE

   30 identifier_type_specifier: IDENTIFIER

   31 array_type_specifier: basic_type_specifier LB RB
   32                     | IDENTIFIER LB RB
   33                     | array_type_specifier LB RB

   34 type_specifier: basic_type_specifier
   35               | array_type_specifier
   36               | identifier_type_specifier

   37 $@1: /* empty */

   38 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list END

   39 lib_function_declaration_list: /* empty */
   40                              | lib_function_declaration_list function_declaration

   41 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   42                     | DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR
   43                     | DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   44                     | DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause CR

   45 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   46                    | FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock
   47                    | BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock
   48                    | BSUB IDENTIFIER LP apostrophe RP throws_clause myblock
   49                    | function_declaration

   50 parameter_list: IDENTIFIER AS type_specifier
   51               | parameter_list COMMA IDENTIFIER AS type_specifier

   52 argument_list: assignment_expression
   53              | argument_list COMMA assignment_expression

   54 statement_list: statement
   55               | statement_list statement

   56 expression: assignment_expression
   57           | expression COMMA assignment_expression

   58 assignment_expression: logical_or_expression
   59                      | primary_expression assignment_operator assignment_expression

   60 assignment_operator: ASSIGN_T
   61                    | ADD_ASSIGN_T
   62                    | SUB_ASSIGN_T
   63                    | MUL_ASSIGN_T
   64                    | DIV_ASSIGN_T
   65                    | MOD_ASSIGN_T

   66 logical_or_expression: logical_and_expression
   67                      | logical_or_expression LOGICAL_OR logical_and_expression

   68 logical_and_expression: equality_expression
   69                       | logical_and_expression LOGICAL_AND equality_expression

   70 equality_expression: relational_expression
   71                    | equality_expression EQ relational_expression
   72                    | equality_expression NE relational_expression

   73 relational_expression: additive_expression
   74                      | relational_expression GT additive_expression
   75                      | relational_expression GE additive_expression
   76                      | relational_expression LT additive_expression
   77                      | relational_expression LE additive_expression

   78 additive_expression: multiplicative_expression
   79                    | additive_expression ADD multiplicative_expression
   80                    | additive_expression SUB multiplicative_expression

   81 multiplicative_expression: unary_expression
   82                          | multiplicative_expression MUL unary_expression
   83                          | multiplicative_expression DIV unary_expression
   84                          | multiplicative_expression MOD unary_expression
   85                          | multiplicative_expression BIT_AND unary_expression
   86                          | multiplicative_expression BIT_OR unary_expression
   87                          | multiplicative_expression BIT_XOR unary_expression

   88 unary_expression: postfix_expression
   89                 | SUB unary_expression
   90                 | EXCLAMATION unary_expression
   91                 | BIT_NOT unary_expression

   92 postfix_expression: primary_expression
   93                   | primary_expression INCREMENT
   94                   | primary_expression DECREMENT
   95                   | primary_expression INSTANCEOF type_specifier

   96 primary_expression: primary_no_new_array
   97                   | array_creation
   98                   | IDENTIFIER
   99                   | AUTOVAR

  100 primary_no_new_array: primary_no_new_array LB expression RB
  101                     | IDENTIFIER LB expression RB
  102                     | primary_expression DOT IDENTIFIER
  103                     | primary_expression LP argument_list RP
  104                     | primary_expression LP RP
  105                     | LP expression RP
  106                     | primary_expression DOWN_CAST_BEGIN type_specifier DOWN_CAST_END
  107                     | INT_LITERAL
  108                     | DOUBLE_LITERAL
  109                     | STRING_LITERAL
  110                     | REGEXP_LITERAL
  111                     | TRUE_T
  112                     | FALSE_T
  113                     | NULL_T
  114                     | array_literal
  115                     | THIS_T
  116                     | SUPER_T
  117                     | NEW DELEGATE LP RP
  118                     | NEW IDENTIFIER LP RP
  119                     | NEW IDENTIFIER LP argument_list RP
  120                     | NEW IDENTIFIER DOT IDENTIFIER LP RP
  121                     | NEW IDENTIFIER DOT IDENTIFIER LP argument_list RP

  122 array_literal: LC expression_list RC
  123              | LC expression_list COMMA RC

  124 array_creation: NEW basic_type_specifier dimension_expression_list
  125               | NEW basic_type_specifier dimension_expression_list dimension_list
  126               | NEW identifier_type_specifier dimension_expression_list
  127               | NEW identifier_type_specifier dimension_expression_list dimension_list

  128 dimension_expression_list: dimension_expression
  129                          | dimension_expression_list dimension_expression

  130 dimension_expression: LB expression RB

  131 dimension_list: LB RB
  132               | dimension_list LB RB

  133 expression_list: /* empty */
  134                | assignment_expression
  135                | expression_list COMMA assignment_expression

  136 statement: expression CR
  137          | if_statement
  138          | switch_statement
  139          | while_statement
  140          | for_statement
  141          | do_while_statement
  142          | foreach_statement
  143          | return_statement
  144          | break_statement
  145          | continue_statement
  146          | try_statement
  147          | throw_statement
  148          | declaration_statement
  149          | CR

  150 if_statement: IF expression THEN myblock
  151             | IF expression THEN myblock ELSE myblock
  152             | IF expression THEN myblock elsif_list
  153             | IF expression THEN myblock elsif_list ELSE myblock

  154 elsif_list: elsif
  155           | elsif_list elsif

  156 elsif: ELSIF expression THEN myblock

  157 label_opt: /* empty */
  158          | IDENTIFIER COLON

  159 switch_statement: SWITCH expression CR case_list default_opt

  160 case_list: one_case
  161          | case_list one_case

  162 one_case: CASE case_expression_list myblock

  163 default_opt: /* empty */
  164            | DEFAULT_T myblock

  165 case_expression_list: assignment_expression
  166                     | expression_list COMMA assignment_expression

  167 while_statement: label_opt WHILE expression myblock

  168 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock

  169 do_while_statement: label_opt DO_T block WHILE LP expression RP CR

  170 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP block

  171 expression_opt: /* empty */
  172               | expression

  173 return_statement: RETURN_T expression_opt CR

  174 identifier_opt: /* empty */
  175               | IDENTIFIER

  176 break_statement: BREAK identifier_opt CR

  177 continue_statement: CONTINUE identifier_opt CR

  178 try_statement: TRY myblock catch_list FINALLY myblock
  179              | TRY myblock FINALLY block
  180              | TRY myblock catch_list

  181 catch_list: catch_clause
  182           | catch_list catch_clause

  183 @2: /* empty */

  184 catch_clause: CATCH @2 type_specifier IDENTIFIER myblock

  185 throw_statement: THROW expression CR
  186                | THROW CR

  187 declaration_statement: DIM IDENTIFIER AS type_specifier CR
  188                      | DIM IDENTIFIER AS type_specifier ASSIGN_T expression CR
  189                      | FINAL IDENTIFIER AS type_specifier CR
  190                      | FINAL IDENTIFIER AS type_specifier ASSIGN_T expression CR

  191 @3: /* empty */

  192 block: LC @3 statement_list RC
  193      | LC RC

  194 $@4: /* empty */

  195 class_definition: class_or_interface IDENTIFIER extends CR $@4 member_declaration_list END

  196 $@5: /* empty */

  197 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER extends CR $@5 member_declaration_list END

  198 $@6: /* empty */

  199 class_definition: class_or_interface IDENTIFIER extends CR $@6 END

  200 $@7: /* empty */

  201 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER extends CR $@7 END

  202 class_or_member_modifier_list: class_or_member_modifier
  203                              | class_or_member_modifier_list class_or_member_modifier

  204 class_or_member_modifier: access_modifier
  205                         | VIRTUAL_T
  206                         | OVERRIDE_T
  207                         | ABSTRACT_T

  208 class_or_interface: CLASS_T
  209                   | INTERFACE_T

  210 extends: /* empty */
  211        | COLON extends_list

  212 extends_list: IDENTIFIER
  213             | extends_list COMMA IDENTIFIER

  214 member_declaration_list: member_declaration
  215                        | member_declaration_list member_declaration

  216 member_declaration: method_member
  217                   | field_member

  218 method_member: method_function_definition
  219              | class_or_member_modifier_list method_function_definition
  220              | constructor_definition
  221              | class_or_member_modifier_list constructor_definition

  222 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock
  223                           | FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause myblock
  224                           | DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  225                           | DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR
  226                           | BSUB IDENTIFIER LP parameter_list RP throws_clause myblock
  227                           | BSUB IDENTIFIER LP RP throws_clause myblock
  228                           | DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause CR
  229                           | DECLARE BSUB IDENTIFIER LP RP throws_clause CR

  230 apostrophe: /* empty */
  231           | COMMA APOSTROPHE

  232 throws_clause: /* empty */
  233              | THROWS exception_list

  234 exception_list: IDENTIFIER
  235               | exception_list COMMA IDENTIFIER

  236 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause myblock
  237                       | CONSTRUCTOR IDENTIFIER LP RP throws_clause myblock
  238                       | DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR
  239                       | DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause CR

  240 access_modifier: PUBLIC_T
  241                | PRIVATE_T

  242 initializer_opt: /* empty */
  243                | ASSIGN_T expression

  244 field_member: DIM IDENTIFIER AS type_specifier initializer_opt CR
  245             | class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR
  246             | FINAL IDENTIFIER AS type_specifier initializer_opt CR
  247             | class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt CR
  248             | FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR

  249 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  250                    | DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

  251 enum_definition: ENUM IDENTIFIER LC enumerator_list RC
  252                | ENUM IDENTIFIER LC enumerator_list COMMA RC

  253 enumerator_list: IDENTIFIER
  254                | enumerator_list COMMA IDENTIFIER

  255 const_definition: CONST IDENTIFIER ASSIGN_T expression CR
  256                 | CONST type_specifier IDENTIFIER CR

  257 @8: /* empty */

  258 myblock: CR @8 statement_list END
  259        | CR END


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 107
DOUBLE_LITERAL (259) 108
STRING_LITERAL (260) 109
REGEXP_LITERAL (261) 110
IDENTIFIER (262) 11 12 15 30 32 38 41 42 43 44 45 46 47 48 50 51 98
    101 102 118 119 120 121 158 170 175 184 187 188 189 190 195 197
    199 201 212 213 222 223 224 225 226 227 228 229 234 235 236 237
    238 239 244 245 246 247 248 249 250 251 252 253 254 255 256
AUTOVAR (263) 99
IF (264) 150 151 152 153
ELSE (265) 151 153
ELSIF (266) 156
SWITCH (267) 159
CASE (268) 162
DEFAULT_T (269) 164
WHILE (270) 167 169
DO_T (271) 169
FOR (272) 168
FOREACH (273) 170
RETURN_T (274) 173
BREAK (275) 176
CONTINUE (276) 177
NULL_T (277) 113
LP (278) 41 42 43 44 45 46 47 48 103 104 105 117 118 119 120 121 169
    170 222 223 224 225 226 227 228 229 236 237 238 239 249 250
RP (279) 41 42 43 44 45 46 47 48 103 104 105 117 118 119 120 121 169
    170 222 223 224 225 226 227 228 229 236 237 238 239 249 250
LC (280) 122 123 192 193 251 252
RC (281) 122 123 192 193 251 252
LB (282) 31 32 33 100 101 130 131 132
RB (283) 31 32 33 100 101 130 131 132
SEMICOLON (284) 168
COLON (285) 158 170 211
COMMA (286) 51 53 57 123 135 166 213 231 235 252 254
ASSIGN_T (287) 60 188 190 243 255
LOGICAL_AND (288) 69
LOGICAL_OR (289) 67
EQ (290) 71
NE (291) 72
GT (292) 74
GE (293) 75
LT (294) 76
LE (295) 77
ADD (296) 79
SUB (297) 80 89
MUL (298) 82
DIV (299) 83
MOD (300) 84
BIT_AND (301) 85
BIT_OR (302) 86
BIT_XOR (303) 87
BIT_NOT (304) 91
TRUE_T (305) 111
FALSE_T (306) 112
EXCLAMATION (307) 90
DOT (308) 12 102 120 121
ADD_ASSIGN_T (309) 61
SUB_ASSIGN_T (310) 62
MUL_ASSIGN_T (311) 63
DIV_ASSIGN_T (312) 64
MOD_ASSIGN_T (313) 65
INCREMENT (314) 93
DECREMENT (315) 94
TRY (316) 178 179 180
CATCH (317) 184
FINALLY (318) 178 179
THROW (319) 185 186
THROWS (320) 233
VOID_T (321) 22
BOOLEAN_T (322) 23
INT_T (323) 24
DOUBLE_T (324) 25
STRING_T (325) 26
VARIENT_T (326) 27
NATIVE_POINTER_T (327) 28
NEW (328) 117 118 119 120 121 124 125 126 127
REQUIRE (329) 10
RENAME (330) 15
CLASS_T (331) 208
INTERFACE_T (332) 209
PUBLIC_T (333) 240
PRIVATE_T (334) 241
VIRTUAL_T (335) 205
OVERRIDE_T (336) 206
ABSTRACT_T (337) 207
THIS_T (338) 115
SUPER_T (339) 116
CONSTRUCTOR (340) 236 237 238 239
INSTANCEOF (341) 95
DOWN_CAST_BEGIN (342) 106
DOWN_CAST_END (343) 106
DELEGATE (344) 29 117 249 250
FINAL (345) 189 190 246 247 248
ENUM (346) 251 252
CONST (347) 255 256
FUNCTION (348) 41 42 45 46 222 223 224 225
AS (349) 41 42 45 46 50 51 187 188 189 190 222 223 224 225 244 245
    246 247 248 249 250
THEN (350) 150 151 152 153 156
DIM (351) 187 188 244
END (352) 38 195 197 199 201 258 259
CR (353) 10 15 38 41 42 43 44 136 149 159 169 173 176 177 185 186 187
    188 189 190 195 197 199 201 224 225 228 229 238 239 244 245 246
    247 248 249 250 255 256 258 259
DECLARE (354) 41 42 43 44 224 225 228 229 238 239
BSUB (355) 43 44 47 48 226 227 228 229
APOSTROPHE (356) 231
LIB (357) 38


Nonterminals, with rules where they appear

$accept (103)
    on left: 0
translation_unit (104)
    on left: 1 2, on right: 0 2
initial_declaration (105)
    on left: 3 4 5 6 7, on right: 1
require_list (106)
    on left: 8 9, on right: 4 5 9
require_declaration (107)
    on left: 10, on right: 8 9
package_name (108)
    on left: 11 12, on right: 10 12 15
rename_list (109)
    on left: 13 14, on right: 4 6 14
rename_declaration (110)
    on left: 15, on right: 13 14
definition_or_statement (111)
    on left: 16 17 18 19 20 21, on right: 1 2
basic_type_specifier (112)
    on left: 22 23 24 25 26 27 28 29, on right: 31 34 124 125
identifier_type_specifier (113)
    on left: 30, on right: 36 126 127
array_type_specifier (114)
    on left: 31 32 33, on right: 33 35
type_specifier (115)
    on left: 34 35 36, on right: 41 42 45 46 50 51 95 106 184 187 188
    189 190 222 223 224 225 244 245 246 247 248 249 250 256
lib_function (116)
    on left: 38, on right: 7
$@1 (117)
    on left: 37, on right: 38
lib_function_declaration_list (118)
    on left: 39 40, on right: 38 40
function_declaration (119)
    on left: 41 42 43 44, on right: 40 49
function_definition (120)
    on left: 45 46 47 48 49, on right: 16
parameter_list (121)
    on left: 50 51, on right: 41 43 45 47 51 222 224 226 228 236 238
    249
argument_list (122)
    on left: 52 53, on right: 53 103 119 121
statement_list (123)
    on left: 54 55, on right: 55 192 258
expression (124)
    on left: 56 57, on right: 57 100 101 105 130 136 150 151 152 153
    156 159 167 169 170 172 185 188 190 243 255
assignment_expression (125)
    on left: 58 59, on right: 52 53 56 57 59 134 135 165 166
assignment_operator (126)
    on left: 60 61 62 63 64 65, on right: 59
logical_or_expression (127)
    on left: 66 67, on right: 58 67
logical_and_expression (128)
    on left: 68 69, on right: 66 67 69
equality_expression (129)
    on left: 70 71 72, on right: 68 69 71 72
relational_expression (130)
    on left: 73 74 75 76 77, on right: 70 71 72 74 75 76 77
additive_expression (131)
    on left: 78 79 80, on right: 73 74 75 76 77 79 80
multiplicative_expression (132)
    on left: 81 82 83 84 85 86 87, on right: 78 79 80 82 83 84 85 86
    87
unary_expression (133)
    on left: 88 89 90 91, on right: 81 82 83 84 85 86 87 89 90 91
postfix_expression (134)
    on left: 92 93 94 95, on right: 88
primary_expression (135)
    on left: 96 97 98 99, on right: 59 92 93 94 95 102 103 104 106
primary_no_new_array (136)
    on left: 100 101 102 103 104 105 106 107 108 109 110 111 112 113
    114 115 116 117 118 119 120 121, on right: 96 100
array_literal (137)
    on left: 122 123, on right: 114
array_creation (138)
    on left: 124 125 126 127, on right: 97
dimension_expression_list (139)
    on left: 128 129, on right: 124 125 126 127 129
dimension_expression (140)
    on left: 130, on right: 128 129
dimension_list (141)
    on left: 131 132, on right: 125 127 132
expression_list (142)
    on left: 133 134 135, on right: 122 123 135 166
statement (143)
    on left: 136 137 138 139 140 141 142 143 144 145 146 147 148 149,
    on right: 18 54 55
if_statement (144)
    on left: 150 151 152 153, on right: 137
elsif_list (145)
    on left: 154 155, on right: 152 153 155
elsif (146)
    on left: 156, on right: 154 155
label_opt (147)
    on left: 157 158, on right: 167 168 169 170
switch_statement (148)
    on left: 159, on right: 138
case_list (149)
    on left: 160 161, on right: 159 161
one_case (150)
    on left: 162, on right: 160 161
default_opt (151)
    on left: 163 164, on right: 159
case_expression_list (152)
    on left: 165 166, on right: 162
while_statement (153)
    on left: 167, on right: 139
for_statement (154)
    on left: 168, on right: 140
do_while_statement (155)
    on left: 169, on right: 141
foreach_statement (156)
    on left: 170, on right: 142
expression_opt (157)
    on left: 171 172, on right: 168 173
return_statement (158)
    on left: 173, on right: 143
identifier_opt (159)
    on left: 174 175, on right: 176 177
break_statement (160)
    on left: 176, on right: 144
continue_statement (161)
    on left: 177, on right: 145
try_statement (162)
    on left: 178 179 180, on right: 146
catch_list (163)
    on left: 181 182, on right: 178 180 182
catch_clause (164)
    on left: 184, on right: 181 182
@2 (165)
    on left: 183, on right: 184
throw_statement (166)
    on left: 185 186, on right: 147
declaration_statement (167)
    on left: 187 188 189 190, on right: 148
block (168)
    on left: 192 193, on right: 169 170 179
@3 (169)
    on left: 191, on right: 192
class_definition (170)
    on left: 195 197 199 201, on right: 17
$@4 (171)
    on left: 194, on right: 195
$@5 (172)
    on left: 196, on right: 197
$@6 (173)
    on left: 198, on right: 199
$@7 (174)
    on left: 200, on right: 201
class_or_member_modifier_list (175)
    on left: 202 203, on right: 197 201 203 219 221 245 247 248
class_or_member_modifier (176)
    on left: 204 205 206 207, on right: 202 203
class_or_interface (177)
    on left: 208 209, on right: 195 197 199 201
extends (178)
    on left: 210 211, on right: 195 197 199 201
extends_list (179)
    on left: 212 213, on right: 211 213
member_declaration_list (180)
    on left: 214 215, on right: 195 197 215
member_declaration (181)
    on left: 216 217, on right: 214 215
method_member (182)
    on left: 218 219 220 221, on right: 216
method_function_definition (183)
    on left: 222 223 224 225 226 227 228 229, on right: 218 219
apostrophe (184)
    on left: 230 231, on right: 41 42 43 44 45 46 47 48 249 250
throws_clause (185)
    on left: 232 233, on right: 41 42 43 44 45 46 47 48 222 223 224
    225 226 227 228 229 236 237 238 239 249 250
exception_list (186)
    on left: 234 235, on right: 233 235
constructor_definition (187)
    on left: 236 237 238 239, on right: 220 221
access_modifier (188)
    on left: 240 241, on right: 204
initializer_opt (189)
    on left: 242 243, on right: 244 245 246 247 248
field_member (190)
    on left: 244 245 246 247 248, on right: 217
delegate_definition (191)
    on left: 249 250, on right: 19
enum_definition (192)
    on left: 251 252, on right: 20
enumerator_list (193)
    on left: 253 254, on right: 251 252 254
const_definition (194)
    on left: 255 256, on right: 21
myblock (195)
    on left: 258 259, on right: 45 46 47 48 150 151 152 153 156 162
    164 167 168 178 179 180 184 222 223 226 227 236 237
@8 (196)
    on left: 257, on right: 258


state 0

    0 $accept: . translation_unit $end

    REQUIRE  shift, and go to state 1
    RENAME   shift, and go to state 2
    LIB      shift, and go to state 3

    $default  reduce using rule 3 (initial_declaration)

    translation_unit     go to state 4
    initial_declaration  go to state 5
    require_list         go to state 6
    require_declaration  go to state 7
    rename_list          go to state 8
    rename_declaration   go to state 9
    lib_function         go to state 10


state 1

   10 require_declaration: REQUIRE . package_name CR

    IDENTIFIER  shift, and go to state 11

    package_name  go to state 12


state 2

   15 rename_declaration: RENAME . package_name IDENTIFIER CR

    IDENTIFIER  shift, and go to state 11

    package_name  go to state 13


state 3

   38 lib_function: LIB . IDENTIFIER $@1 CR lib_function_declaration_list END

    IDENTIFIER  shift, and go to state 14


state 4

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . definition_or_statement

    $end            shift, and go to state 15
    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 20
    AUTOVAR         shift, and go to state 21
    IF              shift, and go to state 22
    SWITCH          shift, and go to state 23
    RETURN_T        shift, and go to state 24
    BREAK           shift, and go to state 25
    CONTINUE        shift, and go to state 26
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    TRY             shift, and go to state 35
    THROW           shift, and go to state 36
    NEW             shift, and go to state 37
    CLASS_T         shift, and go to state 38
    INTERFACE_T     shift, and go to state 39
    PUBLIC_T        shift, and go to state 40
    PRIVATE_T       shift, and go to state 41
    VIRTUAL_T       shift, and go to state 42
    OVERRIDE_T      shift, and go to state 43
    ABSTRACT_T      shift, and go to state 44
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46
    DELEGATE        shift, and go to state 47
    FINAL           shift, and go to state 48
    ENUM            shift, and go to state 49
    CONST           shift, and go to state 50
    FUNCTION        shift, and go to state 51
    DIM             shift, and go to state 52
    CR              shift, and go to state 53
    DECLARE         shift, and go to state 54
    BSUB            shift, and go to state 55

    $default  reduce using rule 157 (label_opt)

    definition_or_statement        go to state 56
    function_declaration           go to state 57
    function_definition            go to state 58
    expression                     go to state 59
    assignment_expression          go to state 60
    logical_or_expression          go to state 61
    logical_and_expression         go to state 62
    equality_expression            go to state 63
    relational_expression          go to state 64
    additive_expression            go to state 65
    multiplicative_expression      go to state 66
    unary_expression               go to state 67
    postfix_expression             go to state 68
    primary_expression             go to state 69
    primary_no_new_array           go to state 70
    array_literal                  go to state 71
    array_creation                 go to state 72
    statement                      go to state 73
    if_statement                   go to state 74
    label_opt                      go to state 75
    switch_statement               go to state 76
    while_statement                go to state 77
    for_statement                  go to state 78
    do_while_statement             go to state 79
    foreach_statement              go to state 80
    return_statement               go to state 81
    break_statement                go to state 82
    continue_statement             go to state 83
    try_statement                  go to state 84
    throw_statement                go to state 85
    declaration_statement          go to state 86
    class_definition               go to state 87
    class_or_member_modifier_list  go to state 88
    class_or_member_modifier       go to state 89
    class_or_interface             go to state 90
    access_modifier                go to state 91
    delegate_definition            go to state 92
    enum_definition                go to state 93
    const_definition               go to state 94


state 5

    1 translation_unit: initial_declaration . definition_or_statement

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 20
    AUTOVAR         shift, and go to state 21
    IF              shift, and go to state 22
    SWITCH          shift, and go to state 23
    RETURN_T        shift, and go to state 24
    BREAK           shift, and go to state 25
    CONTINUE        shift, and go to state 26
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    TRY             shift, and go to state 35
    THROW           shift, and go to state 36
    NEW             shift, and go to state 37
    CLASS_T         shift, and go to state 38
    INTERFACE_T     shift, and go to state 39
    PUBLIC_T        shift, and go to state 40
    PRIVATE_T       shift, and go to state 41
    VIRTUAL_T       shift, and go to state 42
    OVERRIDE_T      shift, and go to state 43
    ABSTRACT_T      shift, and go to state 44
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46
    DELEGATE        shift, and go to state 47
    FINAL           shift, and go to state 48
    ENUM            shift, and go to state 49
    CONST           shift, and go to state 50
    FUNCTION        shift, and go to state 51
    DIM             shift, and go to state 52
    CR              shift, and go to state 53
    DECLARE         shift, and go to state 54
    BSUB            shift, and go to state 55

    $default  reduce using rule 157 (label_opt)

    definition_or_statement        go to state 95
    function_declaration           go to state 57
    function_definition            go to state 58
    expression                     go to state 59
    assignment_expression          go to state 60
    logical_or_expression          go to state 61
    logical_and_expression         go to state 62
    equality_expression            go to state 63
    relational_expression          go to state 64
    additive_expression            go to state 65
    multiplicative_expression      go to state 66
    unary_expression               go to state 67
    postfix_expression             go to state 68
    primary_expression             go to state 69
    primary_no_new_array           go to state 70
    array_literal                  go to state 71
    array_creation                 go to state 72
    statement                      go to state 73
    if_statement                   go to state 74
    label_opt                      go to state 75
    switch_statement               go to state 76
    while_statement                go to state 77
    for_statement                  go to state 78
    do_while_statement             go to state 79
    foreach_statement              go to state 80
    return_statement               go to state 81
    break_statement                go to state 82
    continue_statement             go to state 83
    try_statement                  go to state 84
    throw_statement                go to state 85
    declaration_statement          go to state 86
    class_definition               go to state 87
    class_or_member_modifier_list  go to state 88
    class_or_member_modifier       go to state 89
    class_or_interface             go to state 90
    access_modifier                go to state 91
    delegate_definition            go to state 92
    enum_definition                go to state 93
    const_definition               go to state 94


state 6

    4 initial_declaration: require_list . rename_list
    5                    | require_list .
    9 require_list: require_list . require_declaration

    REQUIRE  shift, and go to state 1
    RENAME   shift, and go to state 2

    $default  reduce using rule 5 (initial_declaration)

    require_declaration  go to state 96
    rename_list          go to state 97
    rename_declaration   go to state 9


state 7

    8 require_list: require_declaration .

    $default  reduce using rule 8 (require_list)


state 8

    6 initial_declaration: rename_list .
   14 rename_list: rename_list . rename_declaration

    RENAME  shift, and go to state 2

    $default  reduce using rule 6 (initial_declaration)

    rename_declaration  go to state 98


state 9

   13 rename_list: rename_declaration .

    $default  reduce using rule 13 (rename_list)


state 10

    7 initial_declaration: lib_function .

    $default  reduce using rule 7 (initial_declaration)


state 11

   11 package_name: IDENTIFIER .

    $default  reduce using rule 11 (package_name)


state 12

   10 require_declaration: REQUIRE package_name . CR
   12 package_name: package_name . DOT IDENTIFIER

    DOT  shift, and go to state 99
    CR   shift, and go to state 100


state 13

   12 package_name: package_name . DOT IDENTIFIER
   15 rename_declaration: RENAME package_name . IDENTIFIER CR

    IDENTIFIER  shift, and go to state 101
    DOT         shift, and go to state 99


state 14

   38 lib_function: LIB IDENTIFIER . $@1 CR lib_function_declaration_list END

    $default  reduce using rule 37 ($@1)

    $@1  go to state 102


state 15

    0 $accept: translation_unit $end .

    $default  accept


state 16

  107 primary_no_new_array: INT_LITERAL .

    $default  reduce using rule 107 (primary_no_new_array)


state 17

  108 primary_no_new_array: DOUBLE_LITERAL .

    $default  reduce using rule 108 (primary_no_new_array)


state 18

  109 primary_no_new_array: STRING_LITERAL .

    $default  reduce using rule 109 (primary_no_new_array)


state 19

  110 primary_no_new_array: REGEXP_LITERAL .

    $default  reduce using rule 110 (primary_no_new_array)


state 20

   98 primary_expression: IDENTIFIER .
  101 primary_no_new_array: IDENTIFIER . LB expression RB
  158 label_opt: IDENTIFIER . COLON

    LB     shift, and go to state 103
    COLON  shift, and go to state 104

    $default  reduce using rule 98 (primary_expression)


state 21

   99 primary_expression: AUTOVAR .

    $default  reduce using rule 99 (primary_expression)


state 22

  150 if_statement: IF . expression THEN myblock
  151             | IF . expression THEN myblock ELSE myblock
  152             | IF . expression THEN myblock elsif_list
  153             | IF . expression THEN myblock elsif_list ELSE myblock

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 106
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 23

  159 switch_statement: SWITCH . expression CR case_list default_opt

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 107
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 24

  173 return_statement: RETURN_T . expression_opt CR

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    $default  reduce using rule 171 (expression_opt)

    expression                 go to state 108
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72
    expression_opt             go to state 109


state 25

  176 break_statement: BREAK . identifier_opt CR

    IDENTIFIER  shift, and go to state 110

    $default  reduce using rule 174 (identifier_opt)

    identifier_opt  go to state 111


state 26

  177 continue_statement: CONTINUE . identifier_opt CR

    IDENTIFIER  shift, and go to state 110

    $default  reduce using rule 174 (identifier_opt)

    identifier_opt  go to state 112


state 27

  113 primary_no_new_array: NULL_T .

    $default  reduce using rule 113 (primary_no_new_array)


state 28

  105 primary_no_new_array: LP . expression RP

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 113
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 29

  122 array_literal: LC . expression_list RC
  123              | LC . expression_list COMMA RC

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    $default  reduce using rule 133 (expression_list)

    assignment_expression      go to state 114
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72
    expression_list            go to state 115


state 30

   89 unary_expression: SUB . unary_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    unary_expression      go to state 116
    postfix_expression    go to state 68
    primary_expression    go to state 117
    primary_no_new_array  go to state 70
    array_literal         go to state 71
    array_creation        go to state 72


state 31

   91 unary_expression: BIT_NOT . unary_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    unary_expression      go to state 118
    postfix_expression    go to state 68
    primary_expression    go to state 117
    primary_no_new_array  go to state 70
    array_literal         go to state 71
    array_creation        go to state 72


state 32

  111 primary_no_new_array: TRUE_T .

    $default  reduce using rule 111 (primary_no_new_array)


state 33

  112 primary_no_new_array: FALSE_T .

    $default  reduce using rule 112 (primary_no_new_array)


state 34

   90 unary_expression: EXCLAMATION . unary_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    unary_expression      go to state 119
    postfix_expression    go to state 68
    primary_expression    go to state 117
    primary_no_new_array  go to state 70
    array_literal         go to state 71
    array_creation        go to state 72


state 35

  178 try_statement: TRY . myblock catch_list FINALLY myblock
  179              | TRY . myblock FINALLY block
  180              | TRY . myblock catch_list

    CR  shift, and go to state 120

    myblock  go to state 121


state 36

  185 throw_statement: THROW . expression CR
  186                | THROW . CR

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46
    CR              shift, and go to state 122

    expression                 go to state 123
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 37

  117 primary_no_new_array: NEW . DELEGATE LP RP
  118                     | NEW . IDENTIFIER LP RP
  119                     | NEW . IDENTIFIER LP argument_list RP
  120                     | NEW . IDENTIFIER DOT IDENTIFIER LP RP
  121                     | NEW . IDENTIFIER DOT IDENTIFIER LP argument_list RP
  124 array_creation: NEW . basic_type_specifier dimension_expression_list
  125               | NEW . basic_type_specifier dimension_expression_list dimension_list
  126               | NEW . identifier_type_specifier dimension_expression_list
  127               | NEW . identifier_type_specifier dimension_expression_list dimension_list

    IDENTIFIER        shift, and go to state 124
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 132

    basic_type_specifier       go to state 133
    identifier_type_specifier  go to state 134


state 38

  208 class_or_interface: CLASS_T .

    $default  reduce using rule 208 (class_or_interface)


state 39

  209 class_or_interface: INTERFACE_T .

    $default  reduce using rule 209 (class_or_interface)


state 40

  240 access_modifier: PUBLIC_T .

    $default  reduce using rule 240 (access_modifier)


state 41

  241 access_modifier: PRIVATE_T .

    $default  reduce using rule 241 (access_modifier)


state 42

  205 class_or_member_modifier: VIRTUAL_T .

    $default  reduce using rule 205 (class_or_member_modifier)


state 43

  206 class_or_member_modifier: OVERRIDE_T .

    $default  reduce using rule 206 (class_or_member_modifier)


state 44

  207 class_or_member_modifier: ABSTRACT_T .

    $default  reduce using rule 207 (class_or_member_modifier)


state 45

  115 primary_no_new_array: THIS_T .

    $default  reduce using rule 115 (primary_no_new_array)


state 46

  116 primary_no_new_array: SUPER_T .

    $default  reduce using rule 116 (primary_no_new_array)


state 47

  249 delegate_definition: DELEGATE . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  250                    | DELEGATE . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 135


state 48

  189 declaration_statement: FINAL . IDENTIFIER AS type_specifier CR
  190                      | FINAL . IDENTIFIER AS type_specifier ASSIGN_T expression CR

    IDENTIFIER  shift, and go to state 136


state 49

  251 enum_definition: ENUM . IDENTIFIER LC enumerator_list RC
  252                | ENUM . IDENTIFIER LC enumerator_list COMMA RC

    IDENTIFIER  shift, and go to state 137


state 50

  255 const_definition: CONST . IDENTIFIER ASSIGN_T expression CR
  256                 | CONST . type_specifier IDENTIFIER CR

    IDENTIFIER        shift, and go to state 138
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 143


state 51

   45 function_definition: FUNCTION . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   46                    | FUNCTION . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 144


state 52

  187 declaration_statement: DIM . IDENTIFIER AS type_specifier CR
  188                      | DIM . IDENTIFIER AS type_specifier ASSIGN_T expression CR

    IDENTIFIER  shift, and go to state 145


state 53

  149 statement: CR .

    $default  reduce using rule 149 (statement)


state 54

   41 function_declaration: DECLARE . FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   42                     | DECLARE . FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR
   43                     | DECLARE . BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   44                     | DECLARE . BSUB IDENTIFIER LP apostrophe RP throws_clause CR

    FUNCTION  shift, and go to state 146
    BSUB      shift, and go to state 147


state 55

   47 function_definition: BSUB . IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock
   48                    | BSUB . IDENTIFIER LP apostrophe RP throws_clause myblock

    IDENTIFIER  shift, and go to state 148


state 56

    2 translation_unit: translation_unit definition_or_statement .

    $default  reduce using rule 2 (translation_unit)


state 57

   49 function_definition: function_declaration .

    $default  reduce using rule 49 (function_definition)


state 58

   16 definition_or_statement: function_definition .

    $default  reduce using rule 16 (definition_or_statement)


state 59

   57 expression: expression . COMMA assignment_expression
  136 statement: expression . CR

    COMMA  shift, and go to state 149
    CR     shift, and go to state 150


state 60

   56 expression: assignment_expression .

    $default  reduce using rule 56 (expression)


state 61

   58 assignment_expression: logical_or_expression .
   67 logical_or_expression: logical_or_expression . LOGICAL_OR logical_and_expression

    LOGICAL_OR  shift, and go to state 151

    $default  reduce using rule 58 (assignment_expression)


state 62

   66 logical_or_expression: logical_and_expression .
   69 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 152

    $default  reduce using rule 66 (logical_or_expression)


state 63

   68 logical_and_expression: equality_expression .
   71 equality_expression: equality_expression . EQ relational_expression
   72                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 153
    NE  shift, and go to state 154

    $default  reduce using rule 68 (logical_and_expression)


state 64

   70 equality_expression: relational_expression .
   74 relational_expression: relational_expression . GT additive_expression
   75                      | relational_expression . GE additive_expression
   76                      | relational_expression . LT additive_expression
   77                      | relational_expression . LE additive_expression

    GT  shift, and go to state 155
    GE  shift, and go to state 156
    LT  shift, and go to state 157
    LE  shift, and go to state 158

    $default  reduce using rule 70 (equality_expression)


state 65

   73 relational_expression: additive_expression .
   79 additive_expression: additive_expression . ADD multiplicative_expression
   80                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 159
    SUB  shift, and go to state 160

    $default  reduce using rule 73 (relational_expression)


state 66

   78 additive_expression: multiplicative_expression .
   82 multiplicative_expression: multiplicative_expression . MUL unary_expression
   83                          | multiplicative_expression . DIV unary_expression
   84                          | multiplicative_expression . MOD unary_expression
   85                          | multiplicative_expression . BIT_AND unary_expression
   86                          | multiplicative_expression . BIT_OR unary_expression
   87                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 161
    DIV      shift, and go to state 162
    MOD      shift, and go to state 163
    BIT_AND  shift, and go to state 164
    BIT_OR   shift, and go to state 165
    BIT_XOR  shift, and go to state 166

    $default  reduce using rule 78 (additive_expression)


state 67

   81 multiplicative_expression: unary_expression .

    $default  reduce using rule 81 (multiplicative_expression)


state 68

   88 unary_expression: postfix_expression .

    $default  reduce using rule 88 (unary_expression)


state 69

   59 assignment_expression: primary_expression . assignment_operator assignment_expression
   92 postfix_expression: primary_expression .
   93                   | primary_expression . INCREMENT
   94                   | primary_expression . DECREMENT
   95                   | primary_expression . INSTANCEOF type_specifier
  102 primary_no_new_array: primary_expression . DOT IDENTIFIER
  103                     | primary_expression . LP argument_list RP
  104                     | primary_expression . LP RP
  106                     | primary_expression . DOWN_CAST_BEGIN type_specifier DOWN_CAST_END

    LP               shift, and go to state 167
    ASSIGN_T         shift, and go to state 168
    DOT              shift, and go to state 169
    ADD_ASSIGN_T     shift, and go to state 170
    SUB_ASSIGN_T     shift, and go to state 171
    MUL_ASSIGN_T     shift, and go to state 172
    DIV_ASSIGN_T     shift, and go to state 173
    MOD_ASSIGN_T     shift, and go to state 174
    INCREMENT        shift, and go to state 175
    DECREMENT        shift, and go to state 176
    INSTANCEOF       shift, and go to state 177
    DOWN_CAST_BEGIN  shift, and go to state 178

    $default  reduce using rule 92 (postfix_expression)

    assignment_operator  go to state 179


state 70

   96 primary_expression: primary_no_new_array .
  100 primary_no_new_array: primary_no_new_array . LB expression RB

    LB  shift, and go to state 180

    $default  reduce using rule 96 (primary_expression)


state 71

  114 primary_no_new_array: array_literal .

    $default  reduce using rule 114 (primary_no_new_array)


state 72

   97 primary_expression: array_creation .

    $default  reduce using rule 97 (primary_expression)


state 73

   18 definition_or_statement: statement .

    $default  reduce using rule 18 (definition_or_statement)


state 74

  137 statement: if_statement .

    $default  reduce using rule 137 (statement)


state 75

  167 while_statement: label_opt . WHILE expression myblock
  168 for_statement: label_opt . FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock
  169 do_while_statement: label_opt . DO_T block WHILE LP expression RP CR
  170 foreach_statement: label_opt . FOREACH LP IDENTIFIER COLON expression RP block

    WHILE    shift, and go to state 181
    DO_T     shift, and go to state 182
    FOR      shift, and go to state 183
    FOREACH  shift, and go to state 184


state 76

  138 statement: switch_statement .

    $default  reduce using rule 138 (statement)


state 77

  139 statement: while_statement .

    $default  reduce using rule 139 (statement)


state 78

  140 statement: for_statement .

    $default  reduce using rule 140 (statement)


state 79

  141 statement: do_while_statement .

    $default  reduce using rule 141 (statement)


state 80

  142 statement: foreach_statement .

    $default  reduce using rule 142 (statement)


state 81

  143 statement: return_statement .

    $default  reduce using rule 143 (statement)


state 82

  144 statement: break_statement .

    $default  reduce using rule 144 (statement)


state 83

  145 statement: continue_statement .

    $default  reduce using rule 145 (statement)


state 84

  146 statement: try_statement .

    $default  reduce using rule 146 (statement)


state 85

  147 statement: throw_statement .

    $default  reduce using rule 147 (statement)


state 86

  148 statement: declaration_statement .

    $default  reduce using rule 148 (statement)


state 87

   17 definition_or_statement: class_definition .

    $default  reduce using rule 17 (definition_or_statement)


state 88

  197 class_definition: class_or_member_modifier_list . class_or_interface IDENTIFIER extends CR $@5 member_declaration_list END
  201                 | class_or_member_modifier_list . class_or_interface IDENTIFIER extends CR $@7 END
  203 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier

    CLASS_T      shift, and go to state 38
    INTERFACE_T  shift, and go to state 39
    PUBLIC_T     shift, and go to state 40
    PRIVATE_T    shift, and go to state 41
    VIRTUAL_T    shift, and go to state 42
    OVERRIDE_T   shift, and go to state 43
    ABSTRACT_T   shift, and go to state 44

    class_or_member_modifier  go to state 185
    class_or_interface        go to state 186
    access_modifier           go to state 91


state 89

  202 class_or_member_modifier_list: class_or_member_modifier .

    $default  reduce using rule 202 (class_or_member_modifier_list)


state 90

  195 class_definition: class_or_interface . IDENTIFIER extends CR $@4 member_declaration_list END
  199                 | class_or_interface . IDENTIFIER extends CR $@6 END

    IDENTIFIER  shift, and go to state 187


state 91

  204 class_or_member_modifier: access_modifier .

    $default  reduce using rule 204 (class_or_member_modifier)


state 92

   19 definition_or_statement: delegate_definition .

    $default  reduce using rule 19 (definition_or_statement)


state 93

   20 definition_or_statement: enum_definition .

    $default  reduce using rule 20 (definition_or_statement)


state 94

   21 definition_or_statement: const_definition .

    $default  reduce using rule 21 (definition_or_statement)


state 95

    1 translation_unit: initial_declaration definition_or_statement .

    $default  reduce using rule 1 (translation_unit)


state 96

    9 require_list: require_list require_declaration .

    $default  reduce using rule 9 (require_list)


state 97

    4 initial_declaration: require_list rename_list .
   14 rename_list: rename_list . rename_declaration

    RENAME  shift, and go to state 2

    $default  reduce using rule 4 (initial_declaration)

    rename_declaration  go to state 98


state 98

   14 rename_list: rename_list rename_declaration .

    $default  reduce using rule 14 (rename_list)


state 99

   12 package_name: package_name DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 188


state 100

   10 require_declaration: REQUIRE package_name CR .

    $default  reduce using rule 10 (require_declaration)


state 101

   15 rename_declaration: RENAME package_name IDENTIFIER . CR

    CR  shift, and go to state 189


state 102

   38 lib_function: LIB IDENTIFIER $@1 . CR lib_function_declaration_list END

    CR  shift, and go to state 190


state 103

  101 primary_no_new_array: IDENTIFIER LB . expression RB

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 191
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 104

  158 label_opt: IDENTIFIER COLON .

    $default  reduce using rule 158 (label_opt)


state 105

   98 primary_expression: IDENTIFIER .
  101 primary_no_new_array: IDENTIFIER . LB expression RB

    LB  shift, and go to state 103

    $default  reduce using rule 98 (primary_expression)


state 106

   57 expression: expression . COMMA assignment_expression
  150 if_statement: IF expression . THEN myblock
  151             | IF expression . THEN myblock ELSE myblock
  152             | IF expression . THEN myblock elsif_list
  153             | IF expression . THEN myblock elsif_list ELSE myblock

    COMMA  shift, and go to state 149
    THEN   shift, and go to state 192


state 107

   57 expression: expression . COMMA assignment_expression
  159 switch_statement: SWITCH expression . CR case_list default_opt

    COMMA  shift, and go to state 149
    CR     shift, and go to state 193


state 108

   57 expression: expression . COMMA assignment_expression
  172 expression_opt: expression .

    COMMA  shift, and go to state 149

    $default  reduce using rule 172 (expression_opt)


state 109

  173 return_statement: RETURN_T expression_opt . CR

    CR  shift, and go to state 194


state 110

  175 identifier_opt: IDENTIFIER .

    $default  reduce using rule 175 (identifier_opt)


state 111

  176 break_statement: BREAK identifier_opt . CR

    CR  shift, and go to state 195


state 112

  177 continue_statement: CONTINUE identifier_opt . CR

    CR  shift, and go to state 196


state 113

   57 expression: expression . COMMA assignment_expression
  105 primary_no_new_array: LP expression . RP

    RP     shift, and go to state 197
    COMMA  shift, and go to state 149


state 114

  134 expression_list: assignment_expression .

    $default  reduce using rule 134 (expression_list)


state 115

  122 array_literal: LC expression_list . RC
  123              | LC expression_list . COMMA RC
  135 expression_list: expression_list . COMMA assignment_expression

    RC     shift, and go to state 198
    COMMA  shift, and go to state 199


state 116

   89 unary_expression: SUB unary_expression .

    $default  reduce using rule 89 (unary_expression)


state 117

   92 postfix_expression: primary_expression .
   93                   | primary_expression . INCREMENT
   94                   | primary_expression . DECREMENT
   95                   | primary_expression . INSTANCEOF type_specifier
  102 primary_no_new_array: primary_expression . DOT IDENTIFIER
  103                     | primary_expression . LP argument_list RP
  104                     | primary_expression . LP RP
  106                     | primary_expression . DOWN_CAST_BEGIN type_specifier DOWN_CAST_END

    LP               shift, and go to state 167
    DOT              shift, and go to state 169
    INCREMENT        shift, and go to state 175
    DECREMENT        shift, and go to state 176
    INSTANCEOF       shift, and go to state 177
    DOWN_CAST_BEGIN  shift, and go to state 178

    $default  reduce using rule 92 (postfix_expression)


state 118

   91 unary_expression: BIT_NOT unary_expression .

    $default  reduce using rule 91 (unary_expression)


state 119

   90 unary_expression: EXCLAMATION unary_expression .

    $default  reduce using rule 90 (unary_expression)


state 120

  258 myblock: CR . @8 statement_list END
  259        | CR . END

    END  shift, and go to state 200

    $default  reduce using rule 257 (@8)

    @8  go to state 201


state 121

  178 try_statement: TRY myblock . catch_list FINALLY myblock
  179              | TRY myblock . FINALLY block
  180              | TRY myblock . catch_list

    CATCH    shift, and go to state 202
    FINALLY  shift, and go to state 203

    catch_list    go to state 204
    catch_clause  go to state 205


state 122

  186 throw_statement: THROW CR .

    $default  reduce using rule 186 (throw_statement)


state 123

   57 expression: expression . COMMA assignment_expression
  185 throw_statement: THROW expression . CR

    COMMA  shift, and go to state 149
    CR     shift, and go to state 206


state 124

   30 identifier_type_specifier: IDENTIFIER .
  118 primary_no_new_array: NEW IDENTIFIER . LP RP
  119                     | NEW IDENTIFIER . LP argument_list RP
  120                     | NEW IDENTIFIER . DOT IDENTIFIER LP RP
  121                     | NEW IDENTIFIER . DOT IDENTIFIER LP argument_list RP

    LP   shift, and go to state 207
    DOT  shift, and go to state 208

    $default  reduce using rule 30 (identifier_type_specifier)


state 125

   22 basic_type_specifier: VOID_T .

    $default  reduce using rule 22 (basic_type_specifier)


state 126

   23 basic_type_specifier: BOOLEAN_T .

    $default  reduce using rule 23 (basic_type_specifier)


state 127

   24 basic_type_specifier: INT_T .

    $default  reduce using rule 24 (basic_type_specifier)


state 128

   25 basic_type_specifier: DOUBLE_T .

    $default  reduce using rule 25 (basic_type_specifier)


state 129

   26 basic_type_specifier: STRING_T .

    $default  reduce using rule 26 (basic_type_specifier)


state 130

   27 basic_type_specifier: VARIENT_T .

    $default  reduce using rule 27 (basic_type_specifier)


state 131

   28 basic_type_specifier: NATIVE_POINTER_T .

    $default  reduce using rule 28 (basic_type_specifier)


state 132

   29 basic_type_specifier: DELEGATE .
  117 primary_no_new_array: NEW DELEGATE . LP RP

    LP  shift, and go to state 209

    $default  reduce using rule 29 (basic_type_specifier)


state 133

  124 array_creation: NEW basic_type_specifier . dimension_expression_list
  125               | NEW basic_type_specifier . dimension_expression_list dimension_list

    LB  shift, and go to state 210

    dimension_expression_list  go to state 211
    dimension_expression       go to state 212


state 134

  126 array_creation: NEW identifier_type_specifier . dimension_expression_list
  127               | NEW identifier_type_specifier . dimension_expression_list dimension_list

    LB  shift, and go to state 210

    dimension_expression_list  go to state 213
    dimension_expression       go to state 212


state 135

  249 delegate_definition: DELEGATE IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  250                    | DELEGATE IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause CR

    LP  shift, and go to state 214


state 136

  189 declaration_statement: FINAL IDENTIFIER . AS type_specifier CR
  190                      | FINAL IDENTIFIER . AS type_specifier ASSIGN_T expression CR

    AS  shift, and go to state 215


state 137

  251 enum_definition: ENUM IDENTIFIER . LC enumerator_list RC
  252                | ENUM IDENTIFIER . LC enumerator_list COMMA RC

    LC  shift, and go to state 216


state 138

   30 identifier_type_specifier: IDENTIFIER .
   32 array_type_specifier: IDENTIFIER . LB RB
  255 const_definition: CONST IDENTIFIER . ASSIGN_T expression CR

    LB        shift, and go to state 217
    ASSIGN_T  shift, and go to state 218

    $default  reduce using rule 30 (identifier_type_specifier)


state 139

   29 basic_type_specifier: DELEGATE .

    $default  reduce using rule 29 (basic_type_specifier)


state 140

   31 array_type_specifier: basic_type_specifier . LB RB
   34 type_specifier: basic_type_specifier .

    LB  shift, and go to state 219

    $default  reduce using rule 34 (type_specifier)


state 141

   36 type_specifier: identifier_type_specifier .

    $default  reduce using rule 36 (type_specifier)


state 142

   33 array_type_specifier: array_type_specifier . LB RB
   35 type_specifier: array_type_specifier .

    LB  shift, and go to state 220

    $default  reduce using rule 35 (type_specifier)


state 143

  256 const_definition: CONST type_specifier . IDENTIFIER CR

    IDENTIFIER  shift, and go to state 221


state 144

   45 function_definition: FUNCTION IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   46                    | FUNCTION IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause myblock

    LP  shift, and go to state 222


state 145

  187 declaration_statement: DIM IDENTIFIER . AS type_specifier CR
  188                      | DIM IDENTIFIER . AS type_specifier ASSIGN_T expression CR

    AS  shift, and go to state 223


state 146

   41 function_declaration: DECLARE FUNCTION . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   42                     | DECLARE FUNCTION . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 224


state 147

   43 function_declaration: DECLARE BSUB . IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   44                     | DECLARE BSUB . IDENTIFIER LP apostrophe RP throws_clause CR

    IDENTIFIER  shift, and go to state 225


state 148

   47 function_definition: BSUB IDENTIFIER . LP parameter_list apostrophe RP throws_clause myblock
   48                    | BSUB IDENTIFIER . LP apostrophe RP throws_clause myblock

    LP  shift, and go to state 226


state 149

   57 expression: expression COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    assignment_expression      go to state 227
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 150

  136 statement: expression CR .

    $default  reduce using rule 136 (statement)


state 151

   67 logical_or_expression: logical_or_expression LOGICAL_OR . logical_and_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    logical_and_expression     go to state 228
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 117
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 152

   69 logical_and_expression: logical_and_expression LOGICAL_AND . equality_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    equality_expression        go to state 229
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 117
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 153

   71 equality_expression: equality_expression EQ . relational_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    relational_expression      go to state 230
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 117
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 154

   72 equality_expression: equality_expression NE . relational_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    relational_expression      go to state 231
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 117
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 155

   74 relational_expression: relational_expression GT . additive_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    additive_expression        go to state 232
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 117
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 156

   75 relational_expression: relational_expression GE . additive_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    additive_expression        go to state 233
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 117
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 157

   76 relational_expression: relational_expression LT . additive_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    additive_expression        go to state 234
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 117
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 158

   77 relational_expression: relational_expression LE . additive_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    additive_expression        go to state 235
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 117
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 159

   79 additive_expression: additive_expression ADD . multiplicative_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    multiplicative_expression  go to state 236
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 117
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 160

   80 additive_expression: additive_expression SUB . multiplicative_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    multiplicative_expression  go to state 237
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 117
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 161

   82 multiplicative_expression: multiplicative_expression MUL . unary_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    unary_expression      go to state 238
    postfix_expression    go to state 68
    primary_expression    go to state 117
    primary_no_new_array  go to state 70
    array_literal         go to state 71
    array_creation        go to state 72


state 162

   83 multiplicative_expression: multiplicative_expression DIV . unary_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    unary_expression      go to state 239
    postfix_expression    go to state 68
    primary_expression    go to state 117
    primary_no_new_array  go to state 70
    array_literal         go to state 71
    array_creation        go to state 72


state 163

   84 multiplicative_expression: multiplicative_expression MOD . unary_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    unary_expression      go to state 240
    postfix_expression    go to state 68
    primary_expression    go to state 117
    primary_no_new_array  go to state 70
    array_literal         go to state 71
    array_creation        go to state 72


state 164

   85 multiplicative_expression: multiplicative_expression BIT_AND . unary_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    unary_expression      go to state 241
    postfix_expression    go to state 68
    primary_expression    go to state 117
    primary_no_new_array  go to state 70
    array_literal         go to state 71
    array_creation        go to state 72


state 165

   86 multiplicative_expression: multiplicative_expression BIT_OR . unary_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    unary_expression      go to state 242
    postfix_expression    go to state 68
    primary_expression    go to state 117
    primary_no_new_array  go to state 70
    array_literal         go to state 71
    array_creation        go to state 72


state 166

   87 multiplicative_expression: multiplicative_expression BIT_XOR . unary_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    unary_expression      go to state 243
    postfix_expression    go to state 68
    primary_expression    go to state 117
    primary_no_new_array  go to state 70
    array_literal         go to state 71
    array_creation        go to state 72


state 167

  103 primary_no_new_array: primary_expression LP . argument_list RP
  104                     | primary_expression LP . RP

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    RP              shift, and go to state 244
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    argument_list              go to state 245
    assignment_expression      go to state 246
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 168

   60 assignment_operator: ASSIGN_T .

    $default  reduce using rule 60 (assignment_operator)


state 169

  102 primary_no_new_array: primary_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 247


state 170

   61 assignment_operator: ADD_ASSIGN_T .

    $default  reduce using rule 61 (assignment_operator)


state 171

   62 assignment_operator: SUB_ASSIGN_T .

    $default  reduce using rule 62 (assignment_operator)


state 172

   63 assignment_operator: MUL_ASSIGN_T .

    $default  reduce using rule 63 (assignment_operator)


state 173

   64 assignment_operator: DIV_ASSIGN_T .

    $default  reduce using rule 64 (assignment_operator)


state 174

   65 assignment_operator: MOD_ASSIGN_T .

    $default  reduce using rule 65 (assignment_operator)


state 175

   93 postfix_expression: primary_expression INCREMENT .

    $default  reduce using rule 93 (postfix_expression)


state 176

   94 postfix_expression: primary_expression DECREMENT .

    $default  reduce using rule 94 (postfix_expression)


state 177

   95 postfix_expression: primary_expression INSTANCEOF . type_specifier

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 249


state 178

  106 primary_no_new_array: primary_expression DOWN_CAST_BEGIN . type_specifier DOWN_CAST_END

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 250


state 179

   59 assignment_expression: primary_expression assignment_operator . assignment_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    assignment_expression      go to state 251
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 180

  100 primary_no_new_array: primary_no_new_array LB . expression RB

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 252
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 181

  167 while_statement: label_opt WHILE . expression myblock

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 253
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 182

  169 do_while_statement: label_opt DO_T . block WHILE LP expression RP CR

    LC  shift, and go to state 254

    block  go to state 255


state 183

  168 for_statement: label_opt FOR . expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    $default  reduce using rule 171 (expression_opt)

    expression                 go to state 108
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72
    expression_opt             go to state 256


state 184

  170 foreach_statement: label_opt FOREACH . LP IDENTIFIER COLON expression RP block

    LP  shift, and go to state 257


state 185

  203 class_or_member_modifier_list: class_or_member_modifier_list class_or_member_modifier .

    $default  reduce using rule 203 (class_or_member_modifier_list)


state 186

  197 class_definition: class_or_member_modifier_list class_or_interface . IDENTIFIER extends CR $@5 member_declaration_list END
  201                 | class_or_member_modifier_list class_or_interface . IDENTIFIER extends CR $@7 END

    IDENTIFIER  shift, and go to state 258


state 187

  195 class_definition: class_or_interface IDENTIFIER . extends CR $@4 member_declaration_list END
  199                 | class_or_interface IDENTIFIER . extends CR $@6 END

    COLON  shift, and go to state 259

    $default  reduce using rule 210 (extends)

    extends  go to state 260


state 188

   12 package_name: package_name DOT IDENTIFIER .

    $default  reduce using rule 12 (package_name)


state 189

   15 rename_declaration: RENAME package_name IDENTIFIER CR .

    $default  reduce using rule 15 (rename_declaration)


state 190

   38 lib_function: LIB IDENTIFIER $@1 CR . lib_function_declaration_list END

    $default  reduce using rule 39 (lib_function_declaration_list)

    lib_function_declaration_list  go to state 261


state 191

   57 expression: expression . COMMA assignment_expression
  101 primary_no_new_array: IDENTIFIER LB expression . RB

    RB     shift, and go to state 262
    COMMA  shift, and go to state 149


state 192

  150 if_statement: IF expression THEN . myblock
  151             | IF expression THEN . myblock ELSE myblock
  152             | IF expression THEN . myblock elsif_list
  153             | IF expression THEN . myblock elsif_list ELSE myblock

    CR  shift, and go to state 120

    myblock  go to state 263


state 193

  159 switch_statement: SWITCH expression CR . case_list default_opt

    CASE  shift, and go to state 264

    case_list  go to state 265
    one_case   go to state 266


state 194

  173 return_statement: RETURN_T expression_opt CR .

    $default  reduce using rule 173 (return_statement)


state 195

  176 break_statement: BREAK identifier_opt CR .

    $default  reduce using rule 176 (break_statement)


state 196

  177 continue_statement: CONTINUE identifier_opt CR .

    $default  reduce using rule 177 (continue_statement)


state 197

  105 primary_no_new_array: LP expression RP .

    $default  reduce using rule 105 (primary_no_new_array)


state 198

  122 array_literal: LC expression_list RC .

    $default  reduce using rule 122 (array_literal)


state 199

  123 array_literal: LC expression_list COMMA . RC
  135 expression_list: expression_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    RC              shift, and go to state 267
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    assignment_expression      go to state 268
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 200

  259 myblock: CR END .

    $default  reduce using rule 259 (myblock)


state 201

  258 myblock: CR @8 . statement_list END

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 20
    AUTOVAR         shift, and go to state 21
    IF              shift, and go to state 22
    SWITCH          shift, and go to state 23
    RETURN_T        shift, and go to state 24
    BREAK           shift, and go to state 25
    CONTINUE        shift, and go to state 26
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    TRY             shift, and go to state 35
    THROW           shift, and go to state 36
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46
    FINAL           shift, and go to state 48
    DIM             shift, and go to state 52
    CR              shift, and go to state 53

    $default  reduce using rule 157 (label_opt)

    statement_list             go to state 269
    expression                 go to state 59
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72
    statement                  go to state 270
    if_statement               go to state 74
    label_opt                  go to state 75
    switch_statement           go to state 76
    while_statement            go to state 77
    for_statement              go to state 78
    do_while_statement         go to state 79
    foreach_statement          go to state 80
    return_statement           go to state 81
    break_statement            go to state 82
    continue_statement         go to state 83
    try_statement              go to state 84
    throw_statement            go to state 85
    declaration_statement      go to state 86


state 202

  184 catch_clause: CATCH . @2 type_specifier IDENTIFIER myblock

    $default  reduce using rule 183 (@2)

    @2  go to state 271


state 203

  179 try_statement: TRY myblock FINALLY . block

    LC  shift, and go to state 254

    block  go to state 272


state 204

  178 try_statement: TRY myblock catch_list . FINALLY myblock
  180              | TRY myblock catch_list .
  182 catch_list: catch_list . catch_clause

    CATCH    shift, and go to state 202
    FINALLY  shift, and go to state 273

    $default  reduce using rule 180 (try_statement)

    catch_clause  go to state 274


state 205

  181 catch_list: catch_clause .

    $default  reduce using rule 181 (catch_list)


state 206

  185 throw_statement: THROW expression CR .

    $default  reduce using rule 185 (throw_statement)


state 207

  118 primary_no_new_array: NEW IDENTIFIER LP . RP
  119                     | NEW IDENTIFIER LP . argument_list RP

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    RP              shift, and go to state 275
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    argument_list              go to state 276
    assignment_expression      go to state 246
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 208

  120 primary_no_new_array: NEW IDENTIFIER DOT . IDENTIFIER LP RP
  121                     | NEW IDENTIFIER DOT . IDENTIFIER LP argument_list RP

    IDENTIFIER  shift, and go to state 277


state 209

  117 primary_no_new_array: NEW DELEGATE LP . RP

    RP  shift, and go to state 278


state 210

  130 dimension_expression: LB . expression RB

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 279
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 211

  124 array_creation: NEW basic_type_specifier dimension_expression_list .
  125               | NEW basic_type_specifier dimension_expression_list . dimension_list
  129 dimension_expression_list: dimension_expression_list . dimension_expression

    LB  shift, and go to state 280

    $default  reduce using rule 124 (array_creation)

    dimension_expression  go to state 281
    dimension_list        go to state 282


state 212

  128 dimension_expression_list: dimension_expression .

    $default  reduce using rule 128 (dimension_expression_list)


state 213

  126 array_creation: NEW identifier_type_specifier dimension_expression_list .
  127               | NEW identifier_type_specifier dimension_expression_list . dimension_list
  129 dimension_expression_list: dimension_expression_list . dimension_expression

    LB  shift, and go to state 280

    $default  reduce using rule 126 (array_creation)

    dimension_expression  go to state 281
    dimension_list        go to state 283


state 214

  249 delegate_definition: DELEGATE IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause CR
  250                    | DELEGATE IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 284
    COMMA       shift, and go to state 285

    $default  reduce using rule 230 (apostrophe)

    parameter_list  go to state 286
    apostrophe      go to state 287


state 215

  189 declaration_statement: FINAL IDENTIFIER AS . type_specifier CR
  190                      | FINAL IDENTIFIER AS . type_specifier ASSIGN_T expression CR

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 288


state 216

  251 enum_definition: ENUM IDENTIFIER LC . enumerator_list RC
  252                | ENUM IDENTIFIER LC . enumerator_list COMMA RC

    IDENTIFIER  shift, and go to state 289

    enumerator_list  go to state 290


state 217

   32 array_type_specifier: IDENTIFIER LB . RB

    RB  shift, and go to state 291


state 218

  255 const_definition: CONST IDENTIFIER ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 292
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 219

   31 array_type_specifier: basic_type_specifier LB . RB

    RB  shift, and go to state 293


state 220

   33 array_type_specifier: array_type_specifier LB . RB

    RB  shift, and go to state 294


state 221

  256 const_definition: CONST type_specifier IDENTIFIER . CR

    CR  shift, and go to state 295


state 222

   45 function_definition: FUNCTION IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause myblock
   46                    | FUNCTION IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 284
    COMMA       shift, and go to state 285

    $default  reduce using rule 230 (apostrophe)

    parameter_list  go to state 296
    apostrophe      go to state 297


state 223

  187 declaration_statement: DIM IDENTIFIER AS . type_specifier CR
  188                      | DIM IDENTIFIER AS . type_specifier ASSIGN_T expression CR

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 298


state 224

   41 function_declaration: DECLARE FUNCTION IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   42                     | DECLARE FUNCTION IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause CR

    LP  shift, and go to state 299


state 225

   43 function_declaration: DECLARE BSUB IDENTIFIER . LP parameter_list apostrophe RP throws_clause CR
   44                     | DECLARE BSUB IDENTIFIER . LP apostrophe RP throws_clause CR

    LP  shift, and go to state 300


state 226

   47 function_definition: BSUB IDENTIFIER LP . parameter_list apostrophe RP throws_clause myblock
   48                    | BSUB IDENTIFIER LP . apostrophe RP throws_clause myblock

    IDENTIFIER  shift, and go to state 284
    COMMA       shift, and go to state 285

    $default  reduce using rule 230 (apostrophe)

    parameter_list  go to state 301
    apostrophe      go to state 302


state 227

   57 expression: expression COMMA assignment_expression .

    $default  reduce using rule 57 (expression)


state 228

   67 logical_or_expression: logical_or_expression LOGICAL_OR logical_and_expression .
   69 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 152

    $default  reduce using rule 67 (logical_or_expression)


state 229

   69 logical_and_expression: logical_and_expression LOGICAL_AND equality_expression .
   71 equality_expression: equality_expression . EQ relational_expression
   72                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 153
    NE  shift, and go to state 154

    $default  reduce using rule 69 (logical_and_expression)


state 230

   71 equality_expression: equality_expression EQ relational_expression .
   74 relational_expression: relational_expression . GT additive_expression
   75                      | relational_expression . GE additive_expression
   76                      | relational_expression . LT additive_expression
   77                      | relational_expression . LE additive_expression

    GT  shift, and go to state 155
    GE  shift, and go to state 156
    LT  shift, and go to state 157
    LE  shift, and go to state 158

    $default  reduce using rule 71 (equality_expression)


state 231

   72 equality_expression: equality_expression NE relational_expression .
   74 relational_expression: relational_expression . GT additive_expression
   75                      | relational_expression . GE additive_expression
   76                      | relational_expression . LT additive_expression
   77                      | relational_expression . LE additive_expression

    GT  shift, and go to state 155
    GE  shift, and go to state 156
    LT  shift, and go to state 157
    LE  shift, and go to state 158

    $default  reduce using rule 72 (equality_expression)


state 232

   74 relational_expression: relational_expression GT additive_expression .
   79 additive_expression: additive_expression . ADD multiplicative_expression
   80                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 159
    SUB  shift, and go to state 160

    $default  reduce using rule 74 (relational_expression)


state 233

   75 relational_expression: relational_expression GE additive_expression .
   79 additive_expression: additive_expression . ADD multiplicative_expression
   80                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 159
    SUB  shift, and go to state 160

    $default  reduce using rule 75 (relational_expression)


state 234

   76 relational_expression: relational_expression LT additive_expression .
   79 additive_expression: additive_expression . ADD multiplicative_expression
   80                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 159
    SUB  shift, and go to state 160

    $default  reduce using rule 76 (relational_expression)


state 235

   77 relational_expression: relational_expression LE additive_expression .
   79 additive_expression: additive_expression . ADD multiplicative_expression
   80                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 159
    SUB  shift, and go to state 160

    $default  reduce using rule 77 (relational_expression)


state 236

   79 additive_expression: additive_expression ADD multiplicative_expression .
   82 multiplicative_expression: multiplicative_expression . MUL unary_expression
   83                          | multiplicative_expression . DIV unary_expression
   84                          | multiplicative_expression . MOD unary_expression
   85                          | multiplicative_expression . BIT_AND unary_expression
   86                          | multiplicative_expression . BIT_OR unary_expression
   87                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 161
    DIV      shift, and go to state 162
    MOD      shift, and go to state 163
    BIT_AND  shift, and go to state 164
    BIT_OR   shift, and go to state 165
    BIT_XOR  shift, and go to state 166

    $default  reduce using rule 79 (additive_expression)


state 237

   80 additive_expression: additive_expression SUB multiplicative_expression .
   82 multiplicative_expression: multiplicative_expression . MUL unary_expression
   83                          | multiplicative_expression . DIV unary_expression
   84                          | multiplicative_expression . MOD unary_expression
   85                          | multiplicative_expression . BIT_AND unary_expression
   86                          | multiplicative_expression . BIT_OR unary_expression
   87                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 161
    DIV      shift, and go to state 162
    MOD      shift, and go to state 163
    BIT_AND  shift, and go to state 164
    BIT_OR   shift, and go to state 165
    BIT_XOR  shift, and go to state 166

    $default  reduce using rule 80 (additive_expression)


state 238

   82 multiplicative_expression: multiplicative_expression MUL unary_expression .

    $default  reduce using rule 82 (multiplicative_expression)


state 239

   83 multiplicative_expression: multiplicative_expression DIV unary_expression .

    $default  reduce using rule 83 (multiplicative_expression)


state 240

   84 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 84 (multiplicative_expression)


state 241

   85 multiplicative_expression: multiplicative_expression BIT_AND unary_expression .

    $default  reduce using rule 85 (multiplicative_expression)


state 242

   86 multiplicative_expression: multiplicative_expression BIT_OR unary_expression .

    $default  reduce using rule 86 (multiplicative_expression)


state 243

   87 multiplicative_expression: multiplicative_expression BIT_XOR unary_expression .

    $default  reduce using rule 87 (multiplicative_expression)


state 244

  104 primary_no_new_array: primary_expression LP RP .

    $default  reduce using rule 104 (primary_no_new_array)


state 245

   53 argument_list: argument_list . COMMA assignment_expression
  103 primary_no_new_array: primary_expression LP argument_list . RP

    RP     shift, and go to state 303
    COMMA  shift, and go to state 304


state 246

   52 argument_list: assignment_expression .

    $default  reduce using rule 52 (argument_list)


state 247

  102 primary_no_new_array: primary_expression DOT IDENTIFIER .

    $default  reduce using rule 102 (primary_no_new_array)


state 248

   30 identifier_type_specifier: IDENTIFIER .
   32 array_type_specifier: IDENTIFIER . LB RB

    LB  shift, and go to state 217

    $default  reduce using rule 30 (identifier_type_specifier)


state 249

   95 postfix_expression: primary_expression INSTANCEOF type_specifier .

    $default  reduce using rule 95 (postfix_expression)


state 250

  106 primary_no_new_array: primary_expression DOWN_CAST_BEGIN type_specifier . DOWN_CAST_END

    DOWN_CAST_END  shift, and go to state 305


state 251

   59 assignment_expression: primary_expression assignment_operator assignment_expression .

    $default  reduce using rule 59 (assignment_expression)


state 252

   57 expression: expression . COMMA assignment_expression
  100 primary_no_new_array: primary_no_new_array LB expression . RB

    RB     shift, and go to state 306
    COMMA  shift, and go to state 149


state 253

   57 expression: expression . COMMA assignment_expression
  167 while_statement: label_opt WHILE expression . myblock

    COMMA  shift, and go to state 149
    CR     shift, and go to state 120

    myblock  go to state 307


state 254

  192 block: LC . @3 statement_list RC
  193      | LC . RC

    RC  shift, and go to state 308

    $default  reduce using rule 191 (@3)

    @3  go to state 309


state 255

  169 do_while_statement: label_opt DO_T block . WHILE LP expression RP CR

    WHILE  shift, and go to state 310


state 256

  168 for_statement: label_opt FOR expression_opt . SEMICOLON expression_opt SEMICOLON expression_opt myblock

    SEMICOLON  shift, and go to state 311


state 257

  170 foreach_statement: label_opt FOREACH LP . IDENTIFIER COLON expression RP block

    IDENTIFIER  shift, and go to state 312


state 258

  197 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER . extends CR $@5 member_declaration_list END
  201                 | class_or_member_modifier_list class_or_interface IDENTIFIER . extends CR $@7 END

    COLON  shift, and go to state 259

    $default  reduce using rule 210 (extends)

    extends  go to state 313


state 259

  211 extends: COLON . extends_list

    IDENTIFIER  shift, and go to state 314

    extends_list  go to state 315


state 260

  195 class_definition: class_or_interface IDENTIFIER extends . CR $@4 member_declaration_list END
  199                 | class_or_interface IDENTIFIER extends . CR $@6 END

    CR  shift, and go to state 316


state 261

   38 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list . END
   40 lib_function_declaration_list: lib_function_declaration_list . function_declaration

    END      shift, and go to state 317
    DECLARE  shift, and go to state 54

    function_declaration  go to state 318


state 262

  101 primary_no_new_array: IDENTIFIER LB expression RB .

    $default  reduce using rule 101 (primary_no_new_array)


state 263

  150 if_statement: IF expression THEN myblock .
  151             | IF expression THEN myblock . ELSE myblock
  152             | IF expression THEN myblock . elsif_list
  153             | IF expression THEN myblock . elsif_list ELSE myblock

    ELSE   shift, and go to state 319
    ELSIF  shift, and go to state 320

    $default  reduce using rule 150 (if_statement)

    elsif_list  go to state 321
    elsif       go to state 322


state 264

  162 one_case: CASE . case_expression_list myblock

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    $default  reduce using rule 133 (expression_list)

    assignment_expression      go to state 323
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72
    expression_list            go to state 324
    case_expression_list       go to state 325


state 265

  159 switch_statement: SWITCH expression CR case_list . default_opt
  161 case_list: case_list . one_case

    CASE       shift, and go to state 264
    DEFAULT_T  shift, and go to state 326

    $default  reduce using rule 163 (default_opt)

    one_case     go to state 327
    default_opt  go to state 328


state 266

  160 case_list: one_case .

    $default  reduce using rule 160 (case_list)


state 267

  123 array_literal: LC expression_list COMMA RC .

    $default  reduce using rule 123 (array_literal)


state 268

  135 expression_list: expression_list COMMA assignment_expression .

    $default  reduce using rule 135 (expression_list)


state 269

   55 statement_list: statement_list . statement
  258 myblock: CR @8 statement_list . END

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 20
    AUTOVAR         shift, and go to state 21
    IF              shift, and go to state 22
    SWITCH          shift, and go to state 23
    RETURN_T        shift, and go to state 24
    BREAK           shift, and go to state 25
    CONTINUE        shift, and go to state 26
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    TRY             shift, and go to state 35
    THROW           shift, and go to state 36
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46
    FINAL           shift, and go to state 48
    DIM             shift, and go to state 52
    END             shift, and go to state 329
    CR              shift, and go to state 53

    $default  reduce using rule 157 (label_opt)

    expression                 go to state 59
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72
    statement                  go to state 330
    if_statement               go to state 74
    label_opt                  go to state 75
    switch_statement           go to state 76
    while_statement            go to state 77
    for_statement              go to state 78
    do_while_statement         go to state 79
    foreach_statement          go to state 80
    return_statement           go to state 81
    break_statement            go to state 82
    continue_statement         go to state 83
    try_statement              go to state 84
    throw_statement            go to state 85
    declaration_statement      go to state 86


state 270

   54 statement_list: statement .

    $default  reduce using rule 54 (statement_list)


state 271

  184 catch_clause: CATCH @2 . type_specifier IDENTIFIER myblock

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 331


state 272

  179 try_statement: TRY myblock FINALLY block .

    $default  reduce using rule 179 (try_statement)


state 273

  178 try_statement: TRY myblock catch_list FINALLY . myblock

    CR  shift, and go to state 120

    myblock  go to state 332


state 274

  182 catch_list: catch_list catch_clause .

    $default  reduce using rule 182 (catch_list)


state 275

  118 primary_no_new_array: NEW IDENTIFIER LP RP .

    $default  reduce using rule 118 (primary_no_new_array)


state 276

   53 argument_list: argument_list . COMMA assignment_expression
  119 primary_no_new_array: NEW IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 333
    COMMA  shift, and go to state 304


state 277

  120 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER . LP RP
  121                     | NEW IDENTIFIER DOT IDENTIFIER . LP argument_list RP

    LP  shift, and go to state 334


state 278

  117 primary_no_new_array: NEW DELEGATE LP RP .

    $default  reduce using rule 117 (primary_no_new_array)


state 279

   57 expression: expression . COMMA assignment_expression
  130 dimension_expression: LB expression . RB

    RB     shift, and go to state 335
    COMMA  shift, and go to state 149


state 280

  130 dimension_expression: LB . expression RB
  131 dimension_list: LB . RB

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    RB              shift, and go to state 336
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 279
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 281

  129 dimension_expression_list: dimension_expression_list dimension_expression .

    $default  reduce using rule 129 (dimension_expression_list)


state 282

  125 array_creation: NEW basic_type_specifier dimension_expression_list dimension_list .
  132 dimension_list: dimension_list . LB RB

    LB  shift, and go to state 337

    $default  reduce using rule 125 (array_creation)


state 283

  127 array_creation: NEW identifier_type_specifier dimension_expression_list dimension_list .
  132 dimension_list: dimension_list . LB RB

    LB  shift, and go to state 337

    $default  reduce using rule 127 (array_creation)


state 284

   50 parameter_list: IDENTIFIER . AS type_specifier

    AS  shift, and go to state 338


state 285

  231 apostrophe: COMMA . APOSTROPHE

    APOSTROPHE  shift, and go to state 339


state 286

   51 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  249 delegate_definition: DELEGATE IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause CR

    COMMA  shift, and go to state 340

    $default  reduce using rule 230 (apostrophe)

    apostrophe  go to state 341


state 287

  250 delegate_definition: DELEGATE IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 342


state 288

  189 declaration_statement: FINAL IDENTIFIER AS type_specifier . CR
  190                      | FINAL IDENTIFIER AS type_specifier . ASSIGN_T expression CR

    ASSIGN_T  shift, and go to state 343
    CR        shift, and go to state 344


state 289

  253 enumerator_list: IDENTIFIER .

    $default  reduce using rule 253 (enumerator_list)


state 290

  251 enum_definition: ENUM IDENTIFIER LC enumerator_list . RC
  252                | ENUM IDENTIFIER LC enumerator_list . COMMA RC
  254 enumerator_list: enumerator_list . COMMA IDENTIFIER

    RC     shift, and go to state 345
    COMMA  shift, and go to state 346


state 291

   32 array_type_specifier: IDENTIFIER LB RB .

    $default  reduce using rule 32 (array_type_specifier)


state 292

   57 expression: expression . COMMA assignment_expression
  255 const_definition: CONST IDENTIFIER ASSIGN_T expression . CR

    COMMA  shift, and go to state 149
    CR     shift, and go to state 347


state 293

   31 array_type_specifier: basic_type_specifier LB RB .

    $default  reduce using rule 31 (array_type_specifier)


state 294

   33 array_type_specifier: array_type_specifier LB RB .

    $default  reduce using rule 33 (array_type_specifier)


state 295

  256 const_definition: CONST type_specifier IDENTIFIER CR .

    $default  reduce using rule 256 (const_definition)


state 296

   45 function_definition: FUNCTION IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause myblock
   51 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 340

    $default  reduce using rule 230 (apostrophe)

    apostrophe  go to state 348


state 297

   46 function_definition: FUNCTION IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause myblock

    RP  shift, and go to state 349


state 298

  187 declaration_statement: DIM IDENTIFIER AS type_specifier . CR
  188                      | DIM IDENTIFIER AS type_specifier . ASSIGN_T expression CR

    ASSIGN_T  shift, and go to state 350
    CR        shift, and go to state 351


state 299

   41 function_declaration: DECLARE FUNCTION IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause CR
   42                     | DECLARE FUNCTION IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 284
    COMMA       shift, and go to state 285

    $default  reduce using rule 230 (apostrophe)

    parameter_list  go to state 352
    apostrophe      go to state 353


state 300

   43 function_declaration: DECLARE BSUB IDENTIFIER LP . parameter_list apostrophe RP throws_clause CR
   44                     | DECLARE BSUB IDENTIFIER LP . apostrophe RP throws_clause CR

    IDENTIFIER  shift, and go to state 284
    COMMA       shift, and go to state 285

    $default  reduce using rule 230 (apostrophe)

    parameter_list  go to state 354
    apostrophe      go to state 355


state 301

   47 function_definition: BSUB IDENTIFIER LP parameter_list . apostrophe RP throws_clause myblock
   51 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 340

    $default  reduce using rule 230 (apostrophe)

    apostrophe  go to state 356


state 302

   48 function_definition: BSUB IDENTIFIER LP apostrophe . RP throws_clause myblock

    RP  shift, and go to state 357


state 303

  103 primary_no_new_array: primary_expression LP argument_list RP .

    $default  reduce using rule 103 (primary_no_new_array)


state 304

   53 argument_list: argument_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    assignment_expression      go to state 358
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 305

  106 primary_no_new_array: primary_expression DOWN_CAST_BEGIN type_specifier DOWN_CAST_END .

    $default  reduce using rule 106 (primary_no_new_array)


state 306

  100 primary_no_new_array: primary_no_new_array LB expression RB .

    $default  reduce using rule 100 (primary_no_new_array)


state 307

  167 while_statement: label_opt WHILE expression myblock .

    $default  reduce using rule 167 (while_statement)


state 308

  193 block: LC RC .

    $default  reduce using rule 193 (block)


state 309

  192 block: LC @3 . statement_list RC

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 20
    AUTOVAR         shift, and go to state 21
    IF              shift, and go to state 22
    SWITCH          shift, and go to state 23
    RETURN_T        shift, and go to state 24
    BREAK           shift, and go to state 25
    CONTINUE        shift, and go to state 26
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    TRY             shift, and go to state 35
    THROW           shift, and go to state 36
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46
    FINAL           shift, and go to state 48
    DIM             shift, and go to state 52
    CR              shift, and go to state 53

    $default  reduce using rule 157 (label_opt)

    statement_list             go to state 359
    expression                 go to state 59
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72
    statement                  go to state 270
    if_statement               go to state 74
    label_opt                  go to state 75
    switch_statement           go to state 76
    while_statement            go to state 77
    for_statement              go to state 78
    do_while_statement         go to state 79
    foreach_statement          go to state 80
    return_statement           go to state 81
    break_statement            go to state 82
    continue_statement         go to state 83
    try_statement              go to state 84
    throw_statement            go to state 85
    declaration_statement      go to state 86


state 310

  169 do_while_statement: label_opt DO_T block WHILE . LP expression RP CR

    LP  shift, and go to state 360


state 311

  168 for_statement: label_opt FOR expression_opt SEMICOLON . expression_opt SEMICOLON expression_opt myblock

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    $default  reduce using rule 171 (expression_opt)

    expression                 go to state 108
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72
    expression_opt             go to state 361


state 312

  170 foreach_statement: label_opt FOREACH LP IDENTIFIER . COLON expression RP block

    COLON  shift, and go to state 362


state 313

  197 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER extends . CR $@5 member_declaration_list END
  201                 | class_or_member_modifier_list class_or_interface IDENTIFIER extends . CR $@7 END

    CR  shift, and go to state 363


state 314

  212 extends_list: IDENTIFIER .

    $default  reduce using rule 212 (extends_list)


state 315

  211 extends: COLON extends_list .
  213 extends_list: extends_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 364

    $default  reduce using rule 211 (extends)


state 316

  195 class_definition: class_or_interface IDENTIFIER extends CR . $@4 member_declaration_list END
  199                 | class_or_interface IDENTIFIER extends CR . $@6 END

    END       reduce using rule 198 ($@6)
    $default  reduce using rule 194 ($@4)

    $@4  go to state 365
    $@6  go to state 366


state 317

   38 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list END .

    $default  reduce using rule 38 (lib_function)


state 318

   40 lib_function_declaration_list: lib_function_declaration_list function_declaration .

    $default  reduce using rule 40 (lib_function_declaration_list)


state 319

  151 if_statement: IF expression THEN myblock ELSE . myblock

    CR  shift, and go to state 120

    myblock  go to state 367


state 320

  156 elsif: ELSIF . expression THEN myblock

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 368
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 321

  152 if_statement: IF expression THEN myblock elsif_list .
  153             | IF expression THEN myblock elsif_list . ELSE myblock
  155 elsif_list: elsif_list . elsif

    ELSE   shift, and go to state 369
    ELSIF  shift, and go to state 320

    $default  reduce using rule 152 (if_statement)

    elsif  go to state 370


state 322

  154 elsif_list: elsif .

    $default  reduce using rule 154 (elsif_list)


state 323

  134 expression_list: assignment_expression .
  165 case_expression_list: assignment_expression .

    CR        reduce using rule 165 (case_expression_list)
    $default  reduce using rule 134 (expression_list)


state 324

  135 expression_list: expression_list . COMMA assignment_expression
  166 case_expression_list: expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 371


state 325

  162 one_case: CASE case_expression_list . myblock

    CR  shift, and go to state 120

    myblock  go to state 372


state 326

  164 default_opt: DEFAULT_T . myblock

    CR  shift, and go to state 120

    myblock  go to state 373


state 327

  161 case_list: case_list one_case .

    $default  reduce using rule 161 (case_list)


state 328

  159 switch_statement: SWITCH expression CR case_list default_opt .

    $default  reduce using rule 159 (switch_statement)


state 329

  258 myblock: CR @8 statement_list END .

    $default  reduce using rule 258 (myblock)


state 330

   55 statement_list: statement_list statement .

    $default  reduce using rule 55 (statement_list)


state 331

  184 catch_clause: CATCH @2 type_specifier . IDENTIFIER myblock

    IDENTIFIER  shift, and go to state 374


state 332

  178 try_statement: TRY myblock catch_list FINALLY myblock .

    $default  reduce using rule 178 (try_statement)


state 333

  119 primary_no_new_array: NEW IDENTIFIER LP argument_list RP .

    $default  reduce using rule 119 (primary_no_new_array)


state 334

  120 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP . RP
  121                     | NEW IDENTIFIER DOT IDENTIFIER LP . argument_list RP

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    RP              shift, and go to state 375
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    argument_list              go to state 376
    assignment_expression      go to state 246
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 335

  130 dimension_expression: LB expression RB .

    $default  reduce using rule 130 (dimension_expression)


state 336

  131 dimension_list: LB RB .

    $default  reduce using rule 131 (dimension_list)


state 337

  132 dimension_list: dimension_list LB . RB

    RB  shift, and go to state 377


state 338

   50 parameter_list: IDENTIFIER AS . type_specifier

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 378


state 339

  231 apostrophe: COMMA APOSTROPHE .

    $default  reduce using rule 231 (apostrophe)


state 340

   51 parameter_list: parameter_list COMMA . IDENTIFIER AS type_specifier
  231 apostrophe: COMMA . APOSTROPHE

    IDENTIFIER  shift, and go to state 379
    APOSTROPHE  shift, and go to state 339


state 341

  249 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 380


state 342

  250 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 381


state 343

  190 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 382
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 344

  189 declaration_statement: FINAL IDENTIFIER AS type_specifier CR .

    $default  reduce using rule 189 (declaration_statement)


state 345

  251 enum_definition: ENUM IDENTIFIER LC enumerator_list RC .

    $default  reduce using rule 251 (enum_definition)


state 346

  252 enum_definition: ENUM IDENTIFIER LC enumerator_list COMMA . RC
  254 enumerator_list: enumerator_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 383
    RC          shift, and go to state 384


state 347

  255 const_definition: CONST IDENTIFIER ASSIGN_T expression CR .

    $default  reduce using rule 255 (const_definition)


state 348

   45 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause myblock

    RP  shift, and go to state 385


state 349

   46 function_definition: FUNCTION IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 386


state 350

  188 declaration_statement: DIM IDENTIFIER AS type_specifier ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 387
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 351

  187 declaration_statement: DIM IDENTIFIER AS type_specifier CR .

    $default  reduce using rule 187 (declaration_statement)


state 352

   41 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause CR
   51 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 340

    $default  reduce using rule 230 (apostrophe)

    apostrophe  go to state 388


state 353

   42 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 389


state 354

   43 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list . apostrophe RP throws_clause CR
   51 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 340

    $default  reduce using rule 230 (apostrophe)

    apostrophe  go to state 390


state 355

   44 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe . RP throws_clause CR

    RP  shift, and go to state 391


state 356

   47 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe . RP throws_clause myblock

    RP  shift, and go to state 392


state 357

   48 function_definition: BSUB IDENTIFIER LP apostrophe RP . throws_clause myblock

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 394


state 358

   53 argument_list: argument_list COMMA assignment_expression .

    $default  reduce using rule 53 (argument_list)


state 359

   55 statement_list: statement_list . statement
  192 block: LC @3 statement_list . RC

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 20
    AUTOVAR         shift, and go to state 21
    IF              shift, and go to state 22
    SWITCH          shift, and go to state 23
    RETURN_T        shift, and go to state 24
    BREAK           shift, and go to state 25
    CONTINUE        shift, and go to state 26
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    RC              shift, and go to state 395
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    TRY             shift, and go to state 35
    THROW           shift, and go to state 36
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46
    FINAL           shift, and go to state 48
    DIM             shift, and go to state 52
    CR              shift, and go to state 53

    $default  reduce using rule 157 (label_opt)

    expression                 go to state 59
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72
    statement                  go to state 330
    if_statement               go to state 74
    label_opt                  go to state 75
    switch_statement           go to state 76
    while_statement            go to state 77
    for_statement              go to state 78
    do_while_statement         go to state 79
    foreach_statement          go to state 80
    return_statement           go to state 81
    break_statement            go to state 82
    continue_statement         go to state 83
    try_statement              go to state 84
    throw_statement            go to state 85
    declaration_statement      go to state 86


state 360

  169 do_while_statement: label_opt DO_T block WHILE LP . expression RP CR

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 396
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 361

  168 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt . SEMICOLON expression_opt myblock

    SEMICOLON  shift, and go to state 397


state 362

  170 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON . expression RP block

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 398
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 363

  197 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER extends CR . $@5 member_declaration_list END
  201                 | class_or_member_modifier_list class_or_interface IDENTIFIER extends CR . $@7 END

    END       reduce using rule 200 ($@7)
    $default  reduce using rule 196 ($@5)

    $@5  go to state 399
    $@7  go to state 400


state 364

  213 extends_list: extends_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 401


state 365

  195 class_definition: class_or_interface IDENTIFIER extends CR $@4 . member_declaration_list END

    PUBLIC_T     shift, and go to state 40
    PRIVATE_T    shift, and go to state 41
    VIRTUAL_T    shift, and go to state 42
    OVERRIDE_T   shift, and go to state 43
    ABSTRACT_T   shift, and go to state 44
    CONSTRUCTOR  shift, and go to state 402
    FINAL        shift, and go to state 403
    FUNCTION     shift, and go to state 404
    DIM          shift, and go to state 405
    DECLARE      shift, and go to state 406
    BSUB         shift, and go to state 407

    class_or_member_modifier_list  go to state 408
    class_or_member_modifier       go to state 89
    member_declaration_list        go to state 409
    member_declaration             go to state 410
    method_member                  go to state 411
    method_function_definition     go to state 412
    constructor_definition         go to state 413
    access_modifier                go to state 91
    field_member                   go to state 414


state 366

  199 class_definition: class_or_interface IDENTIFIER extends CR $@6 . END

    END  shift, and go to state 415


state 367

  151 if_statement: IF expression THEN myblock ELSE myblock .

    $default  reduce using rule 151 (if_statement)


state 368

   57 expression: expression . COMMA assignment_expression
  156 elsif: ELSIF expression . THEN myblock

    COMMA  shift, and go to state 149
    THEN   shift, and go to state 416


state 369

  153 if_statement: IF expression THEN myblock elsif_list ELSE . myblock

    CR  shift, and go to state 120

    myblock  go to state 417


state 370

  155 elsif_list: elsif_list elsif .

    $default  reduce using rule 155 (elsif_list)


state 371

  135 expression_list: expression_list COMMA . assignment_expression
  166 case_expression_list: expression_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    assignment_expression      go to state 418
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 372

  162 one_case: CASE case_expression_list myblock .

    $default  reduce using rule 162 (one_case)


state 373

  164 default_opt: DEFAULT_T myblock .

    $default  reduce using rule 164 (default_opt)


state 374

  184 catch_clause: CATCH @2 type_specifier IDENTIFIER . myblock

    CR  shift, and go to state 120

    myblock  go to state 419


state 375

  120 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP RP .

    $default  reduce using rule 120 (primary_no_new_array)


state 376

   53 argument_list: argument_list . COMMA assignment_expression
  121 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 420
    COMMA  shift, and go to state 304


state 377

  132 dimension_list: dimension_list LB RB .

    $default  reduce using rule 132 (dimension_list)


state 378

   50 parameter_list: IDENTIFIER AS type_specifier .

    $default  reduce using rule 50 (parameter_list)


state 379

   51 parameter_list: parameter_list COMMA IDENTIFIER . AS type_specifier

    AS  shift, and go to state 421


state 380

  249 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 422


state 381

  250 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 423


state 382

   57 expression: expression . COMMA assignment_expression
  190 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T expression . CR

    COMMA  shift, and go to state 149
    CR     shift, and go to state 424


state 383

  254 enumerator_list: enumerator_list COMMA IDENTIFIER .

    $default  reduce using rule 254 (enumerator_list)


state 384

  252 enum_definition: ENUM IDENTIFIER LC enumerator_list COMMA RC .

    $default  reduce using rule 252 (enum_definition)


state 385

   45 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 425


state 386

   46 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 426


state 387

   57 expression: expression . COMMA assignment_expression
  188 declaration_statement: DIM IDENTIFIER AS type_specifier ASSIGN_T expression . CR

    COMMA  shift, and go to state 149
    CR     shift, and go to state 427


state 388

   41 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 428


state 389

   42 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 429


state 390

   43 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe . RP throws_clause CR

    RP  shift, and go to state 430


state 391

   44 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 431


state 392

   47 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP . throws_clause myblock

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 432


state 393

  233 throws_clause: THROWS . exception_list

    IDENTIFIER  shift, and go to state 433

    exception_list  go to state 434


state 394

   48 function_definition: BSUB IDENTIFIER LP apostrophe RP throws_clause . myblock

    CR  shift, and go to state 120

    myblock  go to state 435


state 395

  192 block: LC @3 statement_list RC .

    $default  reduce using rule 192 (block)


state 396

   57 expression: expression . COMMA assignment_expression
  169 do_while_statement: label_opt DO_T block WHILE LP expression . RP CR

    RP     shift, and go to state 436
    COMMA  shift, and go to state 149


state 397

  168 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON . expression_opt myblock

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    $default  reduce using rule 171 (expression_opt)

    expression                 go to state 108
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72
    expression_opt             go to state 437


state 398

   57 expression: expression . COMMA assignment_expression
  170 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression . RP block

    RP     shift, and go to state 438
    COMMA  shift, and go to state 149


state 399

  197 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER extends CR $@5 . member_declaration_list END

    PUBLIC_T     shift, and go to state 40
    PRIVATE_T    shift, and go to state 41
    VIRTUAL_T    shift, and go to state 42
    OVERRIDE_T   shift, and go to state 43
    ABSTRACT_T   shift, and go to state 44
    CONSTRUCTOR  shift, and go to state 402
    FINAL        shift, and go to state 403
    FUNCTION     shift, and go to state 404
    DIM          shift, and go to state 405
    DECLARE      shift, and go to state 406
    BSUB         shift, and go to state 407

    class_or_member_modifier_list  go to state 408
    class_or_member_modifier       go to state 89
    member_declaration_list        go to state 439
    member_declaration             go to state 410
    method_member                  go to state 411
    method_function_definition     go to state 412
    constructor_definition         go to state 413
    access_modifier                go to state 91
    field_member                   go to state 414


state 400

  201 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER extends CR $@7 . END

    END  shift, and go to state 440


state 401

  213 extends_list: extends_list COMMA IDENTIFIER .

    $default  reduce using rule 213 (extends_list)


state 402

  236 constructor_definition: CONSTRUCTOR . IDENTIFIER LP parameter_list RP throws_clause myblock
  237                       | CONSTRUCTOR . IDENTIFIER LP RP throws_clause myblock

    IDENTIFIER  shift, and go to state 441


state 403

  246 field_member: FINAL . IDENTIFIER AS type_specifier initializer_opt CR
  248             | FINAL . class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 442
    PUBLIC_T    shift, and go to state 40
    PRIVATE_T   shift, and go to state 41
    VIRTUAL_T   shift, and go to state 42
    OVERRIDE_T  shift, and go to state 43
    ABSTRACT_T  shift, and go to state 44

    class_or_member_modifier_list  go to state 443
    class_or_member_modifier       go to state 89
    access_modifier                go to state 91


state 404

  222 method_function_definition: FUNCTION . IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock
  223                           | FUNCTION . IDENTIFIER LP RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 444


state 405

  244 field_member: DIM . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 445


state 406

  224 method_function_definition: DECLARE . FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  225                           | DECLARE . FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR
  228                           | DECLARE . BSUB IDENTIFIER LP parameter_list RP throws_clause CR
  229                           | DECLARE . BSUB IDENTIFIER LP RP throws_clause CR
  238 constructor_definition: DECLARE . CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR
  239                       | DECLARE . CONSTRUCTOR IDENTIFIER LP RP throws_clause CR

    CONSTRUCTOR  shift, and go to state 446
    FUNCTION     shift, and go to state 447
    BSUB         shift, and go to state 448


state 407

  226 method_function_definition: BSUB . IDENTIFIER LP parameter_list RP throws_clause myblock
  227                           | BSUB . IDENTIFIER LP RP throws_clause myblock

    IDENTIFIER  shift, and go to state 449


state 408

  203 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier
  219 method_member: class_or_member_modifier_list . method_function_definition
  221              | class_or_member_modifier_list . constructor_definition
  245 field_member: class_or_member_modifier_list . IDENTIFIER AS type_specifier initializer_opt CR
  247             | class_or_member_modifier_list . FINAL IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER   shift, and go to state 450
    PUBLIC_T     shift, and go to state 40
    PRIVATE_T    shift, and go to state 41
    VIRTUAL_T    shift, and go to state 42
    OVERRIDE_T   shift, and go to state 43
    ABSTRACT_T   shift, and go to state 44
    CONSTRUCTOR  shift, and go to state 402
    FINAL        shift, and go to state 451
    FUNCTION     shift, and go to state 404
    DECLARE      shift, and go to state 406
    BSUB         shift, and go to state 407

    class_or_member_modifier    go to state 185
    method_function_definition  go to state 452
    constructor_definition      go to state 453
    access_modifier             go to state 91


state 409

  195 class_definition: class_or_interface IDENTIFIER extends CR $@4 member_declaration_list . END
  215 member_declaration_list: member_declaration_list . member_declaration

    PUBLIC_T     shift, and go to state 40
    PRIVATE_T    shift, and go to state 41
    VIRTUAL_T    shift, and go to state 42
    OVERRIDE_T   shift, and go to state 43
    ABSTRACT_T   shift, and go to state 44
    CONSTRUCTOR  shift, and go to state 402
    FINAL        shift, and go to state 403
    FUNCTION     shift, and go to state 404
    DIM          shift, and go to state 405
    END          shift, and go to state 454
    DECLARE      shift, and go to state 406
    BSUB         shift, and go to state 407

    class_or_member_modifier_list  go to state 408
    class_or_member_modifier       go to state 89
    member_declaration             go to state 455
    method_member                  go to state 411
    method_function_definition     go to state 412
    constructor_definition         go to state 413
    access_modifier                go to state 91
    field_member                   go to state 414


state 410

  214 member_declaration_list: member_declaration .

    $default  reduce using rule 214 (member_declaration_list)


state 411

  216 member_declaration: method_member .

    $default  reduce using rule 216 (member_declaration)


state 412

  218 method_member: method_function_definition .

    $default  reduce using rule 218 (method_member)


state 413

  220 method_member: constructor_definition .

    $default  reduce using rule 220 (method_member)


state 414

  217 member_declaration: field_member .

    $default  reduce using rule 217 (member_declaration)


state 415

  199 class_definition: class_or_interface IDENTIFIER extends CR $@6 END .

    $default  reduce using rule 199 (class_definition)


state 416

  156 elsif: ELSIF expression THEN . myblock

    CR  shift, and go to state 120

    myblock  go to state 456


state 417

  153 if_statement: IF expression THEN myblock elsif_list ELSE myblock .

    $default  reduce using rule 153 (if_statement)


state 418

  135 expression_list: expression_list COMMA assignment_expression .
  166 case_expression_list: expression_list COMMA assignment_expression .

    CR        reduce using rule 166 (case_expression_list)
    $default  reduce using rule 135 (expression_list)


state 419

  184 catch_clause: CATCH @2 type_specifier IDENTIFIER myblock .

    $default  reduce using rule 184 (catch_clause)


state 420

  121 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP argument_list RP .

    $default  reduce using rule 121 (primary_no_new_array)


state 421

   51 parameter_list: parameter_list COMMA IDENTIFIER AS . type_specifier

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 457


state 422

  249 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 458


state 423

  250 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 459


state 424

  190 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T expression CR .

    $default  reduce using rule 190 (declaration_statement)


state 425

   45 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 460


state 426

   46 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 461


state 427

  188 declaration_statement: DIM IDENTIFIER AS type_specifier ASSIGN_T expression CR .

    $default  reduce using rule 188 (declaration_statement)


state 428

   41 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 462


state 429

   42 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 463


state 430

   43 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 464


state 431

   44 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause . CR

    CR  shift, and go to state 465


state 432

   47 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause . myblock

    CR  shift, and go to state 120

    myblock  go to state 466


state 433

  234 exception_list: IDENTIFIER .

    $default  reduce using rule 234 (exception_list)


state 434

  233 throws_clause: THROWS exception_list .
  235 exception_list: exception_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 467

    $default  reduce using rule 233 (throws_clause)


state 435

   48 function_definition: BSUB IDENTIFIER LP apostrophe RP throws_clause myblock .

    $default  reduce using rule 48 (function_definition)


state 436

  169 do_while_statement: label_opt DO_T block WHILE LP expression RP . CR

    CR  shift, and go to state 468


state 437

  168 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt . myblock

    CR  shift, and go to state 120

    myblock  go to state 469


state 438

  170 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP . block

    LC  shift, and go to state 254

    block  go to state 470


state 439

  197 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER extends CR $@5 member_declaration_list . END
  215 member_declaration_list: member_declaration_list . member_declaration

    PUBLIC_T     shift, and go to state 40
    PRIVATE_T    shift, and go to state 41
    VIRTUAL_T    shift, and go to state 42
    OVERRIDE_T   shift, and go to state 43
    ABSTRACT_T   shift, and go to state 44
    CONSTRUCTOR  shift, and go to state 402
    FINAL        shift, and go to state 403
    FUNCTION     shift, and go to state 404
    DIM          shift, and go to state 405
    END          shift, and go to state 471
    DECLARE      shift, and go to state 406
    BSUB         shift, and go to state 407

    class_or_member_modifier_list  go to state 408
    class_or_member_modifier       go to state 89
    member_declaration             go to state 455
    method_member                  go to state 411
    method_function_definition     go to state 412
    constructor_definition         go to state 413
    access_modifier                go to state 91
    field_member                   go to state 414


state 440

  201 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER extends CR $@7 END .

    $default  reduce using rule 201 (class_definition)


state 441

  236 constructor_definition: CONSTRUCTOR IDENTIFIER . LP parameter_list RP throws_clause myblock
  237                       | CONSTRUCTOR IDENTIFIER . LP RP throws_clause myblock

    LP  shift, and go to state 472


state 442

  246 field_member: FINAL IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 473


state 443

  203 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier
  248 field_member: FINAL class_or_member_modifier_list . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 474
    PUBLIC_T    shift, and go to state 40
    PRIVATE_T   shift, and go to state 41
    VIRTUAL_T   shift, and go to state 42
    OVERRIDE_T  shift, and go to state 43
    ABSTRACT_T  shift, and go to state 44

    class_or_member_modifier  go to state 185
    access_modifier           go to state 91


state 444

  222 method_function_definition: FUNCTION IDENTIFIER . LP parameter_list RP AS type_specifier throws_clause myblock
  223                           | FUNCTION IDENTIFIER . LP RP AS type_specifier throws_clause myblock

    LP  shift, and go to state 475


state 445

  244 field_member: DIM IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 476


state 446

  238 constructor_definition: DECLARE CONSTRUCTOR . IDENTIFIER LP parameter_list RP throws_clause CR
  239                       | DECLARE CONSTRUCTOR . IDENTIFIER LP RP throws_clause CR

    IDENTIFIER  shift, and go to state 477


state 447

  224 method_function_definition: DECLARE FUNCTION . IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  225                           | DECLARE FUNCTION . IDENTIFIER LP RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 478


state 448

  228 method_function_definition: DECLARE BSUB . IDENTIFIER LP parameter_list RP throws_clause CR
  229                           | DECLARE BSUB . IDENTIFIER LP RP throws_clause CR

    IDENTIFIER  shift, and go to state 479


state 449

  226 method_function_definition: BSUB IDENTIFIER . LP parameter_list RP throws_clause myblock
  227                           | BSUB IDENTIFIER . LP RP throws_clause myblock

    LP  shift, and go to state 480


state 450

  245 field_member: class_or_member_modifier_list IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 481


state 451

  247 field_member: class_or_member_modifier_list FINAL . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 482


state 452

  219 method_member: class_or_member_modifier_list method_function_definition .

    $default  reduce using rule 219 (method_member)


state 453

  221 method_member: class_or_member_modifier_list constructor_definition .

    $default  reduce using rule 221 (method_member)


state 454

  195 class_definition: class_or_interface IDENTIFIER extends CR $@4 member_declaration_list END .

    $default  reduce using rule 195 (class_definition)


state 455

  215 member_declaration_list: member_declaration_list member_declaration .

    $default  reduce using rule 215 (member_declaration_list)


state 456

  156 elsif: ELSIF expression THEN myblock .

    $default  reduce using rule 156 (elsif)


state 457

   51 parameter_list: parameter_list COMMA IDENTIFIER AS type_specifier .

    $default  reduce using rule 51 (parameter_list)


state 458

  249 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 483


state 459

  250 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 484


state 460

   45 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 485


state 461

   46 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 120

    myblock  go to state 486


state 462

   41 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 487


state 463

   42 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 488


state 464

   43 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause . CR

    CR  shift, and go to state 489


state 465

   44 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause CR .

    $default  reduce using rule 44 (function_declaration)


state 466

   47 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock .

    $default  reduce using rule 47 (function_definition)


state 467

  235 exception_list: exception_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 490


state 468

  169 do_while_statement: label_opt DO_T block WHILE LP expression RP CR .

    $default  reduce using rule 169 (do_while_statement)


state 469

  168 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock .

    $default  reduce using rule 168 (for_statement)


state 470

  170 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP block .

    $default  reduce using rule 170 (foreach_statement)


state 471

  197 class_definition: class_or_member_modifier_list class_or_interface IDENTIFIER extends CR $@5 member_declaration_list END .

    $default  reduce using rule 197 (class_definition)


state 472

  236 constructor_definition: CONSTRUCTOR IDENTIFIER LP . parameter_list RP throws_clause myblock
  237                       | CONSTRUCTOR IDENTIFIER LP . RP throws_clause myblock

    IDENTIFIER  shift, and go to state 284
    RP          shift, and go to state 491

    parameter_list  go to state 492


state 473

  246 field_member: FINAL IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 493


state 474

  248 field_member: FINAL class_or_member_modifier_list IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 494


state 475

  222 method_function_definition: FUNCTION IDENTIFIER LP . parameter_list RP AS type_specifier throws_clause myblock
  223                           | FUNCTION IDENTIFIER LP . RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 284
    RP          shift, and go to state 495

    parameter_list  go to state 496


state 476

  244 field_member: DIM IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 497


state 477

  238 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER . LP parameter_list RP throws_clause CR
  239                       | DECLARE CONSTRUCTOR IDENTIFIER . LP RP throws_clause CR

    LP  shift, and go to state 498


state 478

  224 method_function_definition: DECLARE FUNCTION IDENTIFIER . LP parameter_list RP AS type_specifier throws_clause CR
  225                           | DECLARE FUNCTION IDENTIFIER . LP RP AS type_specifier throws_clause CR

    LP  shift, and go to state 499


state 479

  228 method_function_definition: DECLARE BSUB IDENTIFIER . LP parameter_list RP throws_clause CR
  229                           | DECLARE BSUB IDENTIFIER . LP RP throws_clause CR

    LP  shift, and go to state 500


state 480

  226 method_function_definition: BSUB IDENTIFIER LP . parameter_list RP throws_clause myblock
  227                           | BSUB IDENTIFIER LP . RP throws_clause myblock

    IDENTIFIER  shift, and go to state 284
    RP          shift, and go to state 501

    parameter_list  go to state 502


state 481

  245 field_member: class_or_member_modifier_list IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 503


state 482

  247 field_member: class_or_member_modifier_list FINAL IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 504


state 483

  249 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 505


state 484

  250 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 250 (delegate_definition)


state 485

   45 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 120

    myblock  go to state 506


state 486

   46 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 46 (function_definition)


state 487

   41 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 507


state 488

   42 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 508


state 489

   43 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR .

    $default  reduce using rule 43 (function_declaration)


state 490

  235 exception_list: exception_list COMMA IDENTIFIER .

    $default  reduce using rule 235 (exception_list)


state 491

  237 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP . throws_clause myblock

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 509


state 492

   51 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  236 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list . RP throws_clause myblock

    RP     shift, and go to state 510
    COMMA  shift, and go to state 511


state 493

  246 field_member: FINAL IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 512

    $default  reduce using rule 242 (initializer_opt)

    initializer_opt  go to state 513


state 494

  248 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 514


state 495

  223 method_function_definition: FUNCTION IDENTIFIER LP RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 515


state 496

   51 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  222 method_function_definition: FUNCTION IDENTIFIER LP parameter_list . RP AS type_specifier throws_clause myblock

    RP     shift, and go to state 516
    COMMA  shift, and go to state 511


state 497

  244 field_member: DIM IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 512

    $default  reduce using rule 242 (initializer_opt)

    initializer_opt  go to state 517


state 498

  238 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP . parameter_list RP throws_clause CR
  239                       | DECLARE CONSTRUCTOR IDENTIFIER LP . RP throws_clause CR

    IDENTIFIER  shift, and go to state 284
    RP          shift, and go to state 518

    parameter_list  go to state 519


state 499

  224 method_function_definition: DECLARE FUNCTION IDENTIFIER LP . parameter_list RP AS type_specifier throws_clause CR
  225                           | DECLARE FUNCTION IDENTIFIER LP . RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 284
    RP          shift, and go to state 520

    parameter_list  go to state 521


state 500

  228 method_function_definition: DECLARE BSUB IDENTIFIER LP . parameter_list RP throws_clause CR
  229                           | DECLARE BSUB IDENTIFIER LP . RP throws_clause CR

    IDENTIFIER  shift, and go to state 284
    RP          shift, and go to state 522

    parameter_list  go to state 523


state 501

  227 method_function_definition: BSUB IDENTIFIER LP RP . throws_clause myblock

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 524


state 502

   51 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  226 method_function_definition: BSUB IDENTIFIER LP parameter_list . RP throws_clause myblock

    RP     shift, and go to state 525
    COMMA  shift, and go to state 511


state 503

  245 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 512

    $default  reduce using rule 242 (initializer_opt)

    initializer_opt  go to state 526


state 504

  247 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 527


state 505

  249 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 249 (delegate_definition)


state 506

   45 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 45 (function_definition)


state 507

   41 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 528


state 508

   42 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 42 (function_declaration)


state 509

  237 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP throws_clause . myblock

    CR  shift, and go to state 120

    myblock  go to state 529


state 510

  236 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP . throws_clause myblock

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 530


state 511

   51 parameter_list: parameter_list COMMA . IDENTIFIER AS type_specifier

    IDENTIFIER  shift, and go to state 379


state 512

  243 initializer_opt: ASSIGN_T . expression

    INT_LITERAL     shift, and go to state 16
    DOUBLE_LITERAL  shift, and go to state 17
    STRING_LITERAL  shift, and go to state 18
    REGEXP_LITERAL  shift, and go to state 19
    IDENTIFIER      shift, and go to state 105
    AUTOVAR         shift, and go to state 21
    NULL_T          shift, and go to state 27
    LP              shift, and go to state 28
    LC              shift, and go to state 29
    SUB             shift, and go to state 30
    BIT_NOT         shift, and go to state 31
    TRUE_T          shift, and go to state 32
    FALSE_T         shift, and go to state 33
    EXCLAMATION     shift, and go to state 34
    NEW             shift, and go to state 37
    THIS_T          shift, and go to state 45
    SUPER_T         shift, and go to state 46

    expression                 go to state 531
    assignment_expression      go to state 60
    logical_or_expression      go to state 61
    logical_and_expression     go to state 62
    equality_expression        go to state 63
    relational_expression      go to state 64
    additive_expression        go to state 65
    multiplicative_expression  go to state 66
    unary_expression           go to state 67
    postfix_expression         go to state 68
    primary_expression         go to state 69
    primary_no_new_array       go to state 70
    array_literal              go to state 71
    array_creation             go to state 72


state 513

  246 field_member: FINAL IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 532


state 514

  248 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 512

    $default  reduce using rule 242 (initializer_opt)

    initializer_opt  go to state 533


state 515

  223 method_function_definition: FUNCTION IDENTIFIER LP RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 534


state 516

  222 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 535


state 517

  244 field_member: DIM IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 536


state 518

  239 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 537


state 519

   51 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  238 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list . RP throws_clause CR

    RP     shift, and go to state 538
    COMMA  shift, and go to state 511


state 520

  225 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 539


state 521

   51 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  224 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list . RP AS type_specifier throws_clause CR

    RP     shift, and go to state 540
    COMMA  shift, and go to state 511


state 522

  229 method_function_definition: DECLARE BSUB IDENTIFIER LP RP . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 541


state 523

   51 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  228 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list . RP throws_clause CR

    RP     shift, and go to state 542
    COMMA  shift, and go to state 511


state 524

  227 method_function_definition: BSUB IDENTIFIER LP RP throws_clause . myblock

    CR  shift, and go to state 120

    myblock  go to state 543


state 525

  226 method_function_definition: BSUB IDENTIFIER LP parameter_list RP . throws_clause myblock

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 544


state 526

  245 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 545


state 527

  247 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 512

    $default  reduce using rule 242 (initializer_opt)

    initializer_opt  go to state 546


state 528

   41 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 41 (function_declaration)


state 529

  237 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP throws_clause myblock .

    $default  reduce using rule 237 (constructor_definition)


state 530

  236 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause . myblock

    CR  shift, and go to state 120

    myblock  go to state 547


state 531

   57 expression: expression . COMMA assignment_expression
  243 initializer_opt: ASSIGN_T expression .

    COMMA  shift, and go to state 149

    $default  reduce using rule 243 (initializer_opt)


state 532

  246 field_member: FINAL IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 246 (field_member)


state 533

  248 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 548


state 534

  223 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 549


state 535

  222 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 550


state 536

  244 field_member: DIM IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 244 (field_member)


state 537

  239 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause . CR

    CR  shift, and go to state 551


state 538

  238 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 552


state 539

  225 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 553


state 540

  224 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 554


state 541

  229 method_function_definition: DECLARE BSUB IDENTIFIER LP RP throws_clause . CR

    CR  shift, and go to state 555


state 542

  228 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 556


state 543

  227 method_function_definition: BSUB IDENTIFIER LP RP throws_clause myblock .

    $default  reduce using rule 227 (method_function_definition)


state 544

  226 method_function_definition: BSUB IDENTIFIER LP parameter_list RP throws_clause . myblock

    CR  shift, and go to state 120

    myblock  go to state 557


state 545

  245 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 245 (field_member)


state 546

  247 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 558


state 547

  236 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause myblock .

    $default  reduce using rule 236 (constructor_definition)


state 548

  248 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 248 (field_member)


state 549

  223 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 120

    myblock  go to state 559


state 550

  222 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 560


state 551

  239 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause CR .

    $default  reduce using rule 239 (constructor_definition)


state 552

  238 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause . CR

    CR  shift, and go to state 561


state 553

  225 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 562


state 554

  224 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 248
    VOID_T            shift, and go to state 125
    BOOLEAN_T         shift, and go to state 126
    INT_T             shift, and go to state 127
    DOUBLE_T          shift, and go to state 128
    STRING_T          shift, and go to state 129
    VARIENT_T         shift, and go to state 130
    NATIVE_POINTER_T  shift, and go to state 131
    DELEGATE          shift, and go to state 139

    basic_type_specifier       go to state 140
    identifier_type_specifier  go to state 141
    array_type_specifier       go to state 142
    type_specifier             go to state 563


state 555

  229 method_function_definition: DECLARE BSUB IDENTIFIER LP RP throws_clause CR .

    $default  reduce using rule 229 (method_function_definition)


state 556

  228 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause . CR

    CR  shift, and go to state 564


state 557

  226 method_function_definition: BSUB IDENTIFIER LP parameter_list RP throws_clause myblock .

    $default  reduce using rule 226 (method_function_definition)


state 558

  247 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 247 (field_member)


state 559

  223 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 223 (method_function_definition)


state 560

  222 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 120

    myblock  go to state 565


state 561

  238 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR .

    $default  reduce using rule 238 (constructor_definition)


state 562

  225 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 566


state 563

  224 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 393

    $default  reduce using rule 232 (throws_clause)

    throws_clause  go to state 567


state 564

  228 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause CR .

    $default  reduce using rule 228 (method_function_definition)


state 565

  222 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 222 (method_function_definition)


state 566

  225 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR .

    $default  reduce using rule 225 (method_function_definition)


state 567

  224 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 568


state 568

  224 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR .

    $default  reduce using rule 224 (method_function_definition)
