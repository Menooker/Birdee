; ModuleID = 'diksam.lang'

%Stack = type { i32, i32 }

@bpc = weak thread_local(localdynamic) externally_initialized global i32* null
@bei = weak thread_local(localdynamic) externally_initialized global i32* null
@beo = weak thread_local(localdynamic) externally_initialized global %Stack* null
@bsp = weak thread_local(localdynamic) externally_initialized global %Stack** null
@arr_sp = weak thread_local(localdynamic) externally_initialized global i32** null
@retvar = weak thread_local(localdynamic) externally_initialized global %Stack* null
@pstatic = external constant %Stack*
@mid = external constant i32

declare void @"string!LoadStringFromPool"(i32)

declare %Stack @"system!DownCast"(i32)

declare %Stack @"system!UpCast"(i32)

declare %Stack @"system!NewDelegate"(i32)

declare i1 @"system!Instanceof"(i32)

declare i1 @"system!Instanceof2"(i32, i32)

declare void @"string!ChainString"()

declare i32 @"string!CompareString"()

declare i32 @"object!CompareObject"()

declare void @"system!ArrayLiteral"(i32, i32)

declare void @"system!NewArray"(i32, i32)

declare void @"shared!NewArray"(i32, i32)

declare void @"object!New"(i32, i32)

declare void @"shared!New"(i32, i32)

declare void @"shared!GlobalArrBoundaryCheck"(i32, i32)

declare i32* @"system!PushException"()

declare i32 @"system!Setjmp"(i32*)

declare void @"system!Raise"(i32)

declare void @"system!SystemRaise"(i32)

declare void @"system!LeaveTry"()

declare i32 @"system!ArrGetCh"(i32)

declare void @"system!CopyArray"(i32, i32, i32, i32, i32, i32)

declare void @"system!InvokeDelegate"()

declare void @"system!GetSuper"()

declare void @"system!ArrPuti"(i32, i32)

declare void @"system!Failure"()

declare void @"system!Reraise"()

declare void @"system!IntToStr"(i32)

declare void @"system!DoubleToStr"(double)

declare void @"system!BoolToStr"(i32)

declare void @"system!AtmInc"(i32*, i32)

declare void @"system!AtmDec"(i32*, i32)

declare void @"system!Invoke"(i32)

declare void @"system!Call"(i32)

declare void @"system!DoInvoke"(i32)

declare void @"autovar!get"(i8*)

declare void @"autovar!getorcreate"(i8*)

declare void @"shared!seti"(i32, i32, i32)

declare void @"shared!vseti"(i32, i32, i32)

declare void @"shared!seto"(i32, i32, i32)

declare void @"shared!setd"(i32, i32, double)

declare void @"shared!vsetd"(i32, i32, double)

declare void @"shared!sets"(i32, i32, %Stack)

declare i32 @"shared!geti"(i32, i32)

declare i32 @"shared!vgeti"(i32, i32)

declare double @"shared!getd"(i32, i32)

declare double @"shared!vgetd"(i32, i32)

declare void @"shared!gets"(i32, i32)

declare void @"shared!geto"(i32, i32, i32)

define linkonce void @"Object!init"(...) {
  ret void
}

define linkonce void @"CSVReader!init"(...) {
  ret void
}

define void @println(%Stack*) {
  %2 = getelementptr %Stack* %0, i32 0
  %3 = load volatile %Stack* %2
  call void @"systemi!Pusho"(%Stack %3)
  call void @"system!Invoke"(i32 0), !dbg !9
  call void @"string!LoadStringFromPool"(i32 0)
  %4 = load %Stack** @retvar
  %5 = load %Stack* %4
  call void @"systemi!Pusho"(%Stack %5)
  call void @"system!Invoke"(i32 0), !dbg !10
  %6 = load %Stack** @retvar, !dbg !11
  %7 = bitcast %Stack* %6 to i32*
  store i32 0, i32* %7, !dbg !11
  ret void, !dbg !11
}

declare void @"systemi!Pusho"(%Stack)

define void @"system!main"(%Stack*) {
  ret void
}

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!8}

!0 = metadata !{i32 786449, metadata !1, i32 32769, metadata !"Birdee", i1 false, metadata !"", i32 0, metadata !2, metadata !2, metadata !3, metadata !2, metadata !2, metadata !""} ; [ DW_TAG_compile_unit ] [/$unknown] [lang 0x8001]
!1 = metadata !{metadata !"$unknown", metadata !""}
!2 = metadata !{i32 0}
!3 = metadata !{metadata !4, metadata !7}
!4 = metadata !{i32 786478, metadata !1, metadata !5, metadata !"println", metadata !"println", metadata !"", i32 18, metadata !6, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%Stack*)* @println, null, null, metadata !2, i32 18} ; [ DW_TAG_subprogram ] [line 18] [local] [def] [println]
!5 = metadata !{i32 786473, metadata !1}          ; [ DW_TAG_file_type ] [/$unknown]
!6 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, null, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!7 = metadata !{i32 786478, metadata !1, metadata !5, metadata !"system!main", metadata !"system!main", metadata !"", i32 0, metadata !6, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%Stack*)* @"system!main", null, null, metadata !2, i32 0} ; [ DW_TAG_subprogram ] [line 0] [local] [def] [system!main]
!8 = metadata !{i32 2, metadata !"Debug Info Version", i32 1}
!9 = metadata !{i32 15, i32 0, metadata !4, null}
!10 = metadata !{i32 16, i32 0, metadata !4, null}
!11 = metadata !{i32 18, i32 0, metadata !4, null}
; ModuleID = 'Remote'

%Stack = type { i32, i32 }

@bpc = weak thread_local(localdynamic) externally_initialized global i32* null
@bei = weak thread_local(localdynamic) externally_initialized global i32* null
@beo = weak thread_local(localdynamic) externally_initialized global %Stack* null
@bsp = weak thread_local(localdynamic) externally_initialized global %Stack** null
@arr_sp = weak thread_local(localdynamic) externally_initialized global i32** null
@retvar = weak thread_local(localdynamic) externally_initialized global %Stack* null
@pstatic = external constant %Stack*
@mid = external constant i32

declare void @"string!LoadStringFromPool"(i32)

declare %Stack @"system!DownCast"(i32)

declare %Stack @"system!UpCast"(i32)

declare %Stack @"system!NewDelegate"(i32)

declare i1 @"system!Instanceof"(i32)

declare i1 @"system!Instanceof2"(i32, i32)

declare void @"string!ChainString"()

declare i32 @"string!CompareString"()

declare i32 @"object!CompareObject"()

declare void @"system!ArrayLiteral"(i32, i32)

declare void @"system!NewArray"(i32, i32)

declare void @"shared!NewArray"(i32, i32)

declare void @"object!New"(i32, i32)

declare void @"shared!New"(i32, i32)

declare void @"shared!GlobalArrBoundaryCheck"(i32, i32)

declare i32* @"system!PushException"()

declare i32 @"system!Setjmp"(i32*)

declare void @"system!Raise"(i32)

declare void @"system!SystemRaise"(i32)

declare void @"system!LeaveTry"()

declare i32 @"system!ArrGetCh"(i32)

declare void @"system!CopyArray"(i32, i32, i32, i32, i32, i32)

declare void @"system!InvokeDelegate"()

declare void @"system!GetSuper"()

declare void @"system!ArrPuti"(i32, i32)

declare void @"system!Failure"()

declare void @"system!Reraise"()

declare void @"system!IntToStr"(i32)

declare void @"system!DoubleToStr"(double)

declare void @"system!BoolToStr"(i32)

declare void @"system!AtmInc"(i32*, i32)

declare void @"system!AtmDec"(i32*, i32)

declare void @"system!Invoke"(i32)

declare void @"system!Call"(i32)

declare void @"system!DoInvoke"(i32)

declare void @"autovar!get"(i8*)

declare void @"autovar!getorcreate"(i8*)

declare void @"shared!seti"(i32, i32, i32)

declare void @"shared!vseti"(i32, i32, i32)

declare void @"shared!seto"(i32, i32, i32)

declare void @"shared!setd"(i32, i32, double)

declare void @"shared!vsetd"(i32, i32, double)

declare void @"shared!sets"(i32, i32, %Stack)

declare i32 @"shared!geti"(i32, i32)

declare i32 @"shared!vgeti"(i32, i32)

declare double @"shared!getd"(i32, i32)

declare double @"shared!vgetd"(i32, i32)

declare void @"shared!gets"(i32, i32)

declare void @"shared!geto"(i32, i32, i32)

define linkonce void @"RemoteNode!init"(...) {
  ret void
}

define linkonce void @"RemoteThread!init"(...) {
  ret void
}

define linkonce void @"ThisNodeThread!init"(...) {
  ret void
}

define linkonce void @"AtomicCounter!init"(...) {
  ret void
}

define linkonce void @"RemoteSpinLock!init"(...) {
  ret void
}

define linkonce void @"CounterOutOfBoundException!init"(...) {
  ret void
}

define linkonce void @"RemoteBarrier!init"(...) {
  ret void
}

define linkonce void @"RBarrier!init"(...) {
  ret void
}

define void @"RemoteNode#initialize"(%Stack*) {
  call void (...)* @"RemoteNode!init"()
  %2 = load %Stack** @retvar, !dbg !11
  %3 = bitcast %Stack* %2 to i32*
  store i32 0, i32* %3, !dbg !11
  ret void, !dbg !11
}

define void @"RemoteThread#initialize"(%Stack*) {
  call void (...)* @"RemoteThread!init"()
  %2 = load %Stack** @retvar, !dbg !12
  %3 = bitcast %Stack* %2 to i32*
  store i32 0, i32* %3, !dbg !12
  ret void, !dbg !12
}

define void @"CounterOutOfBoundException#initialize"(%Stack*) {
  call void (...)* @"CounterOutOfBoundException!init"()
  %2 = load %Stack** @retvar, !dbg !13
  %3 = bitcast %Stack* %2 to i32*
  store i32 0, i32* %3, !dbg !13
  ret void, !dbg !13
}

define void @"system!main"(%Stack*) {
  ret void
}

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!10}

!0 = metadata !{i32 786449, metadata !1, i32 32769, metadata !"Birdee", i1 false, metadata !"", i32 0, metadata !2, metadata !2, metadata !3, metadata !2, metadata !2, metadata !""} ; [ DW_TAG_compile_unit ] [./Remote.dkh] [lang 0x8001]
!1 = metadata !{metadata !"Remote.dkh", metadata !"."}
!2 = metadata !{i32 0}
!3 = metadata !{metadata !4, metadata !7, metadata !8, metadata !9}
!4 = metadata !{i32 786478, metadata !1, metadata !5, metadata !"RemoteNode#initialize", metadata !"RemoteNode#initialize", metadata !"", i32 58, metadata !6, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%Stack*)* @"RemoteNode#initialize", null, null, metadata !2, i32 58} ; [ DW_TAG_subprogram ] [line 58] [local] [def] [RemoteNode#initialize]
!5 = metadata !{i32 786473, metadata !1}          ; [ DW_TAG_file_type ] [./Remote.dkh]
!6 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, null, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!7 = metadata !{i32 786478, metadata !1, metadata !5, metadata !"RemoteThread#initialize", metadata !"RemoteThread#initialize", metadata !"", i32 58, metadata !6, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%Stack*)* @"RemoteThread#initialize", null, null, metadata !2, i32 58} ; [ DW_TAG_subprogram ] [line 58] [local] [def] [RemoteThread#initialize]
!8 = metadata !{i32 786478, metadata !1, metadata !5, metadata !"CounterOutOfBoundException#initialize", metadata !"CounterOutOfBoundException#initialize", metadata !"", i32 58, metadata !6, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%Stack*)* @"CounterOutOfBoundException#initialize", null, null, metadata !2, i32 58} ; [ DW_TAG_subprogram ] [line 58] [local] [def] [CounterOutOfBoundException#initialize]
!9 = metadata !{i32 786478, metadata !1, metadata !5, metadata !"system!main", metadata !"system!main", metadata !"", i32 0, metadata !6, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%Stack*)* @"system!main", null, null, metadata !2, i32 0} ; [ DW_TAG_subprogram ] [line 0] [local] [def] [system!main]
!10 = metadata !{i32 2, metadata !"Debug Info Version", i32 1}
!11 = metadata !{i32 58, i32 0, metadata !4, null} ; [ DW_TAG_imported_module ]
!12 = metadata !{i32 58, i32 0, metadata !7, null} ; [ DW_TAG_imported_module ]
!13 = metadata !{i32 58, i32 0, metadata !8, null} ; [ DW_TAG_imported_module ]
; ModuleID = 'math'

%Stack = type { i32, i32 }

@bpc = weak thread_local(localdynamic) externally_initialized global i32* null
@bei = weak thread_local(localdynamic) externally_initialized global i32* null
@beo = weak thread_local(localdynamic) externally_initialized global %Stack* null
@bsp = weak thread_local(localdynamic) externally_initialized global %Stack** null
@arr_sp = weak thread_local(localdynamic) externally_initialized global i32** null
@retvar = weak thread_local(localdynamic) externally_initialized global %Stack* null
@pstatic = external constant %Stack*
@mid = external constant i32

declare void @"string!LoadStringFromPool"(i32)

declare %Stack @"system!DownCast"(i32)

declare %Stack @"system!UpCast"(i32)

declare %Stack @"system!NewDelegate"(i32)

declare i1 @"system!Instanceof"(i32)

declare i1 @"system!Instanceof2"(i32, i32)

declare void @"string!ChainString"()

declare i32 @"string!CompareString"()

declare i32 @"object!CompareObject"()

declare void @"system!ArrayLiteral"(i32, i32)

declare void @"system!NewArray"(i32, i32)

declare void @"shared!NewArray"(i32, i32)

declare void @"object!New"(i32, i32)

declare void @"shared!New"(i32, i32)

declare void @"shared!GlobalArrBoundaryCheck"(i32, i32)

declare i32* @"system!PushException"()

declare i32 @"system!Setjmp"(i32*)

declare void @"system!Raise"(i32)

declare void @"system!SystemRaise"(i32)

declare void @"system!LeaveTry"()

declare i32 @"system!ArrGetCh"(i32)

declare void @"system!CopyArray"(i32, i32, i32, i32, i32, i32)

declare void @"system!InvokeDelegate"()

declare void @"system!GetSuper"()

declare void @"system!ArrPuti"(i32, i32)

declare void @"system!Failure"()

declare void @"system!Reraise"()

declare void @"system!IntToStr"(i32)

declare void @"system!DoubleToStr"(double)

declare void @"system!BoolToStr"(i32)

declare void @"system!AtmInc"(i32*, i32)

declare void @"system!AtmDec"(i32*, i32)

declare void @"system!Invoke"(i32)

declare void @"system!Call"(i32)

declare void @"system!DoInvoke"(i32)

declare void @"autovar!get"(i8*)

declare void @"autovar!getorcreate"(i8*)

declare void @"shared!seti"(i32, i32, i32)

declare void @"shared!vseti"(i32, i32, i32)

declare void @"shared!seto"(i32, i32, i32)

declare void @"shared!setd"(i32, i32, double)

declare void @"shared!vsetd"(i32, i32, double)

declare void @"shared!sets"(i32, i32, %Stack)

declare i32 @"shared!geti"(i32, i32)

declare i32 @"shared!vgeti"(i32, i32)

declare double @"shared!getd"(i32, i32)

declare double @"shared!vgetd"(i32, i32)

declare void @"shared!gets"(i32, i32)

declare void @"shared!geto"(i32, i32, i32)

define void @"system!main"(%Stack*) {
  ret void
}

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!7}

!0 = metadata !{i32 786449, metadata !1, i32 32769, metadata !"Birdee", i1 false, metadata !"", i32 0, metadata !2, metadata !2, metadata !3, metadata !2, metadata !2, metadata !""} ; [ DW_TAG_compile_unit ] [/$unknown] [lang 0x8001]
!1 = metadata !{metadata !"$unknown", metadata !""}
!2 = metadata !{i32 0}
!3 = metadata !{metadata !4}
!4 = metadata !{i32 786478, metadata !1, metadata !5, metadata !"system!main", metadata !"system!main", metadata !"", i32 0, metadata !6, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%Stack*)* @"system!main", null, null, metadata !2, i32 0} ; [ DW_TAG_subprogram ] [line 0] [local] [def] [system!main]
!5 = metadata !{i32 786473, metadata !1}          ; [ DW_TAG_file_type ] [/$unknown]
!6 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, null, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!7 = metadata !{i32 2, metadata !"Debug Info Version", i32 1}
; ModuleID = 'test'

%Stack = type { i32, i32 }

@bpc = weak thread_local(localdynamic) externally_initialized global i32* null
@bei = weak thread_local(localdynamic) externally_initialized global i32* null
@beo = weak thread_local(localdynamic) externally_initialized global %Stack* null
@bsp = weak thread_local(localdynamic) externally_initialized global %Stack** null
@arr_sp = weak thread_local(localdynamic) externally_initialized global i32** null
@retvar = weak thread_local(localdynamic) externally_initialized global %Stack* null
@pstatic = external constant %Stack*
@mid = external constant i32

declare void @"string!LoadStringFromPool"(i32)

declare %Stack @"system!DownCast"(i32)

declare %Stack @"system!UpCast"(i32)

declare %Stack @"system!NewDelegate"(i32)

declare i1 @"system!Instanceof"(i32)

declare i1 @"system!Instanceof2"(i32, i32)

declare void @"string!ChainString"()

declare i32 @"string!CompareString"()

declare i32 @"object!CompareObject"()

declare void @"system!ArrayLiteral"(i32, i32)

declare void @"system!NewArray"(i32, i32)

declare void @"shared!NewArray"(i32, i32)

declare void @"object!New"(i32, i32)

declare void @"shared!New"(i32, i32)

declare void @"shared!GlobalArrBoundaryCheck"(i32, i32)

declare i32* @"system!PushException"()

declare i32 @"system!Setjmp"(i32*)

declare void @"system!Raise"(i32)

declare void @"system!SystemRaise"(i32)

declare void @"system!LeaveTry"()

declare i32 @"system!ArrGetCh"(i32)

declare void @"system!CopyArray"(i32, i32, i32, i32, i32, i32)

declare void @"system!InvokeDelegate"()

declare void @"system!GetSuper"()

declare void @"system!ArrPuti"(i32, i32)

declare void @"system!Failure"()

declare void @"system!Reraise"()

declare void @"system!IntToStr"(i32)

declare void @"system!DoubleToStr"(double)

declare void @"system!BoolToStr"(i32)

declare void @"system!AtmInc"(i32*, i32)

declare void @"system!AtmDec"(i32*, i32)

declare void @"system!Invoke"(i32)

declare void @"system!Call"(i32)

declare void @"system!DoInvoke"(i32)

declare void @"autovar!get"(i8*)

declare void @"autovar!getorcreate"(i8*)

declare void @"shared!seti"(i32, i32, i32)

declare void @"shared!vseti"(i32, i32, i32)

declare void @"shared!seto"(i32, i32, i32)

declare void @"shared!setd"(i32, i32, double)

declare void @"shared!vsetd"(i32, i32, double)

declare void @"shared!sets"(i32, i32, %Stack)

declare i32 @"shared!geti"(i32, i32)

declare i32 @"shared!vgeti"(i32, i32)

declare double @"shared!getd"(i32, i32)

declare double @"shared!vgetd"(i32, i32)

declare void @"shared!gets"(i32, i32)

declare void @"shared!geto"(i32, i32, i32)

define void @put_matrix(%Stack*) {
  %2 = load i32* @mid
  %3 = call i32 @"shared!geti"(i32 %2, i32 6)
  %4 = getelementptr %Stack* %0, i32 0
  %5 = bitcast %Stack* %4 to i32*
  store i32 %3, i32* %5
  %6 = load %Stack** @pstatic
  %7 = getelementptr %Stack* %6, i32 2
  %8 = bitcast %Stack* %7 to i32*
  %9 = load i32* %8
  %10 = srem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %if_t, label %if_f

if_t:                                             ; preds = %1
  call void @"shared!geto"(i32 %2, i32 12, i32 -1)
  %12 = load %Stack** @retvar
  %13 = load %Stack* %12
  %14 = getelementptr %Stack* %0, i32 1
  store %Stack %13, %Stack* %14
  br label %cont

if_f:                                             ; preds = %1
  call void @"shared!geto"(i32 %2, i32 13, i32 -1)
  %15 = load %Stack** @retvar
  %16 = load %Stack* %15
  %17 = getelementptr %Stack* %0, i32 1
  store %Stack %16, %Stack* %17
  br label %cont

cont:                                             ; preds = %if_f, %if_t
  %18 = call i32 @"shared!geti"(i32 %2, i32 2)
  %19 = mul i32 %18, 1000
  %20 = getelementptr %Stack* %0, i32 4
  %21 = bitcast %Stack* %20 to i32*
  store i32 %19, i32* %21
  %22 = getelementptr %Stack* %0, i32 2
  %23 = bitcast %Stack* %22 to i32*
  store i32 0, i32* %23
  br label %cond

cond:                                             ; preds = %post, %cont
  %24 = getelementptr %Stack* %0, i32 2
  %25 = bitcast %Stack* %24 to i32*
  %26 = load i32* %25
  %27 = getelementptr %Stack* %0, i32 4
  %28 = bitcast %Stack* %27 to i32*
  %29 = load i32* %28
  %30 = icmp slt i32 %26, %29
  br i1 %30, label %for, label %conti

for:                                              ; preds = %cond
  %31 = getelementptr %Stack* %0, i32 3
  %32 = bitcast %Stack* %31 to i32*
  store i32 0, i32* %32
  br label %cond1

post:                                             ; preds = %conti4
  %33 = getelementptr %Stack* %0, i32 2
  %34 = bitcast %Stack* %33 to i32*
  %35 = load i32* %34
  %36 = add i32 %35, 1000
  %37 = getelementptr %Stack* %0, i32 2
  %38 = bitcast %Stack* %37 to i32*
  store i32 %36, i32* %38
  br label %cond

conti:                                            ; preds = %cond
  %39 = load %Stack** @retvar, !dbg !12
  %40 = bitcast %Stack* %39 to i32*
  store i32 0, i32* %40, !dbg !12
  ret void, !dbg !12

cond1:                                            ; preds = %post3, %for
  %41 = getelementptr %Stack* %0, i32 3
  %42 = bitcast %Stack* %41 to i32*
  %43 = load i32* %42
  %44 = icmp slt i32 %43, 1000
  br i1 %44, label %for2, label %conti4

for2:                                             ; preds = %cond1
  %45 = getelementptr %Stack* %0, i32 3
  %46 = bitcast %Stack* %45 to i32*
  %47 = load i32* %46
  %48 = getelementptr %Stack* %0, i32 0
  %49 = bitcast %Stack* %48 to i32*
  %50 = load i32* %49
  %51 = mul i32 %47, %50
  call void @"systemi!Pushi"(i32 %51)
  %52 = load %Stack** @pstatic
  %53 = getelementptr %Stack* %52, i32 13
  %54 = load %Stack* %53
  call void @"systemi!Pusho"(%Stack %54)
  %55 = load %Stack** @pstatic
  %56 = getelementptr %Stack* %55, i32 14
  %57 = load %Stack* %56
  call void @"systemi!Pusho"(%Stack %57)
  call void @"system!Call"(i32 1)
  %58 = load %Stack** @retvar
  %59 = bitcast %Stack* %58 to i32*
  %60 = load i32* %59
  %61 = icmp slt i32 %60, 0
  br i1 %61, label %if_t5, label %if_f6

post3:                                            ; preds = %cont7
  %62 = getelementptr %Stack* %0, i32 3
  %63 = bitcast %Stack* %62 to i32*
  %64 = load i32* %63
  %65 = add i32 %64, 1
  %66 = getelementptr %Stack* %0, i32 3
  %67 = bitcast %Stack* %66 to i32*
  store i32 %65, i32* %67
  br label %cond1

conti4:                                           ; preds = %cond1
  %68 = getelementptr %Stack* %0, i32 1
  %69 = load %Stack* %68
  call void @"systemi!Pusho"(%Stack %69)
  %70 = getelementptr %Stack* %0, i32 2
  %71 = bitcast %Stack* %70 to i32*
  %72 = load i32* %71
  %73 = getelementptr %Stack* %0, i32 0
  %74 = bitcast %Stack* %73 to i32*
  %75 = load i32* %74
  %76 = mul i32 %72, %75
  %77 = add i32 %72, 1000
  %78 = mul i32 %77, %75
  %79 = load %Stack** @pstatic
  %80 = getelementptr %Stack* %79, i32 13
  %81 = load %Stack* %80
  call void @"systemi!Pusho"(%Stack %81)
  %82 = mul i32 %75, 1000
  call void @"system!CopyArray"(i32 %76, i32 %78, i32 0, i32 %82, i32 1, i32 0)
  br label %post

if_t5:                                            ; preds = %for2
  %83 = load %Stack** @pstatic
  %84 = getelementptr %Stack* %83, i32 14
  %85 = load %Stack* %84
  call void @"systemi!Pusho"(%Stack %85)
  call void @"system!Call"(i32 2)
  %86 = getelementptr %Stack* %0, i32 3
  %87 = bitcast %Stack* %86 to i32*
  %88 = load i32* %87
  %89 = getelementptr %Stack* %0, i32 0
  %90 = bitcast %Stack* %89 to i32*
  %91 = load i32* %90
  %92 = mul i32 %88, %91
  call void @"systemi!Pushi"(i32 %92)
  %93 = load %Stack** @pstatic
  %94 = getelementptr %Stack* %93, i32 13
  %95 = load %Stack* %94
  call void @"systemi!Pusho"(%Stack %95)
  %96 = load %Stack** @pstatic
  %97 = getelementptr %Stack* %96, i32 14
  %98 = load %Stack* %97
  call void @"systemi!Pusho"(%Stack %98)
  call void @"system!Call"(i32 1)
  %99 = load %Stack** @retvar
  %100 = bitcast %Stack* %99 to i32*
  %101 = load i32* %100
  br label %cont7

if_f6:                                            ; preds = %for2
  br label %cont7

cont7:                                            ; preds = %if_f6, %if_t5
  br label %post3
}

declare void @"systemi!Pushi"(i32)

declare void @"systemi!Pusho"(%Stack)

define void @zero_gradient(%Stack*) {
  %2 = getelementptr %Stack* %0, i32 1
  %3 = bitcast %Stack* %2 to i32*
  store i32 0, i32* %3
  br label %cond

cond:                                             ; preds = %post, %1
  %4 = getelementptr %Stack* %0, i32 1
  %5 = bitcast %Stack* %4 to i32*
  %6 = load i32* %5
  %7 = load %Stack** @pstatic
  %8 = getelementptr %Stack* %7, i32 24
  %9 = bitcast %Stack* %8 to i32*
  %10 = load i32* %9
  %11 = icmp slt i32 %6, %10
  br i1 %11, label %for, label %conti

for:                                              ; preds = %cond
  %12 = load %Stack** @pstatic
  %13 = getelementptr %Stack* %12, i32 21
  %14 = load %Stack* %13
  %15 = getelementptr %Stack* %0, i32 0
  %16 = bitcast %Stack* %15 to i32*
  %17 = load volatile i32* %16
  %18 = call %Stack* @"systemi!ArrAddrSafe"(%Stack %14, i32 %17)
  %19 = getelementptr inbounds %Stack* %18, i32 %17
  %20 = load %Stack* %19
  %21 = getelementptr %Stack* %0, i32 1
  %22 = bitcast %Stack* %21 to i32*
  %23 = load i32* %22
  %24 = call %Stack* @"systemi!ArrAddrSafe"(%Stack %20, i32 %23)
  %25 = bitcast %Stack* %24 to double*
  %26 = getelementptr double* %25, i32 %23
  store double 0.000000e+00, double* %26
  br label %post

post:                                             ; preds = %for
  %27 = getelementptr %Stack* %0, i32 1
  %28 = bitcast %Stack* %27 to i32*
  %29 = load i32* %28
  %30 = add i32 %29, 1
  %31 = getelementptr %Stack* %0, i32 1
  %32 = bitcast %Stack* %31 to i32*
  store i32 %30, i32* %32
  br label %cond

conti:                                            ; preds = %cond
  %33 = load %Stack** @retvar, !dbg !13
  %34 = bitcast %Stack* %33 to i32*
  store i32 0, i32* %34, !dbg !13
  ret void, !dbg !13
}

declare %Stack* @"systemi!ArrAddrSafe"(%Stack, i32)

define void @threadproc(%Stack*) {
  %2 = alloca %Stack*
  %3 = alloca %Stack*
  %4 = alloca %Stack*
  %5 = getelementptr %Stack* %0, i32 0
  %6 = load volatile %Stack* %5
  call void @"systemi!Pusho"(%Stack %6)
  call void @"system!DoInvoke"(i32 0)
  %7 = load %Stack** @retvar
  %8 = bitcast %Stack* %7 to i32*
  %9 = load i32* %8
  %10 = getelementptr %Stack* %0, i32 1
  %11 = bitcast %Stack* %10 to i32*
  store i32 %9, i32* %11
  %12 = load %Stack** @pstatic
  %13 = getelementptr %Stack* %12, i32 25
  %14 = bitcast %Stack* %13 to i32*
  %15 = load i32* %14
  %16 = srem i32 %9, %15
  %17 = getelementptr %Stack* %0, i32 5
  %18 = bitcast %Stack* %17 to i32*
  store i32 %16, i32* %18
  %19 = load %Stack** @pstatic
  %20 = getelementptr %Stack* %19, i32 25
  %21 = bitcast %Stack* %20 to i32*
  %22 = load i32* %21
  %23 = sdiv i32 %9, %22
  %24 = getelementptr %Stack* %0, i32 7
  %25 = bitcast %Stack* %24 to i32*
  store i32 %23, i32* %25
  %26 = load i32* @mid
  %27 = call i32 @"shared!geti"(i32 %26, i32 3)
  %28 = getelementptr %Stack* %0, i32 8
  %29 = bitcast %Stack* %28 to i32*
  store i32 %27, i32* %29
  %30 = load %Stack** @pstatic
  %31 = getelementptr %Stack* %30, i32 24
  %32 = bitcast %Stack* %31 to i32*
  %33 = load i32* %32
  %34 = mul i32 %33, 1000
  call void @"systemi!Pushi"(i32 %34)
  call void @"system!NewArray"(i32 0, i32 1)
  %35 = load %Stack** @retvar
  %36 = load %Stack* %35
  %37 = getelementptr %Stack* %0, i32 9
  store %Stack %36, %Stack* %37
  %38 = getelementptr %Stack* %0, i32 9
  %39 = load %Stack* %38
  %40 = call %Stack* @"systemi!FldAddr"(%Stack %39)
  store %Stack* %40, %Stack** %4
  %41 = load %Stack** %4
  %42 = bitcast %Stack* %41 to double*
  %43 = getelementptr double* %42, i32 0
  store double 0.000000e+00, double* %43
  %44 = load %Stack** @pstatic
  %45 = getelementptr %Stack* %44, i32 21
  %46 = load %Stack* %45
  %47 = load %Stack** @pstatic
  %48 = getelementptr %Stack* %47, i32 21
  %49 = load %Stack* %48
  %50 = call %Stack* @"systemi!FldAddr"(%Stack %49)
  store %Stack* %50, %Stack** %3
  %51 = load %Stack** %3
  %52 = getelementptr inbounds %Stack* %51, i32 0
  %53 = load %Stack* %52
  %54 = call %Stack* @"systemi!ArrAddr"(%Stack %53)
  %55 = bitcast %Stack* %54 to double*
  %56 = getelementptr double* %55, i32 0
  store double 0.000000e+00, double* %56
  %57 = getelementptr %Stack* %0, i32 6
  %58 = bitcast %Stack* %57 to i32*
  store i32 0, i32* %58
  br label %cond

cond:                                             ; preds = %post, %1
  %59 = getelementptr %Stack* %0, i32 6
  %60 = bitcast %Stack* %59 to i32*
  %61 = load i32* %60
  %62 = load %Stack** @pstatic
  %63 = getelementptr %Stack* %62, i32 0
  %64 = bitcast %Stack* %63 to i32*
  %65 = load i32* %64
  %66 = icmp slt i32 %61, %65
  br i1 %66, label %for, label %conti

for:                                              ; preds = %cond
  %67 = load %Stack** @pstatic
  %68 = getelementptr %Stack* %67, i32 20
  %69 = load %Stack* %68
  call void @"systemi!Pusho"(%Stack %69)
  %70 = load %Stack** @pstatic
  %71 = getelementptr %Stack* %70, i32 24
  %72 = bitcast %Stack* %71 to i32*
  %73 = load i32* %72
  %74 = getelementptr %Stack* %0, i32 5
  %75 = bitcast %Stack* %74 to i32*
  %76 = load i32* %75
  %77 = mul i32 %73, %76
  %78 = load %Stack** @pstatic
  %79 = getelementptr %Stack* %78, i32 25
  %80 = bitcast %Stack* %79 to i32*
  %81 = load i32* %80
  %82 = sdiv i32 %77, %81
  %83 = load %Stack** @pstatic
  %84 = getelementptr %Stack* %83, i32 24
  %85 = bitcast %Stack* %84 to i32*
  %86 = load i32* %85
  %87 = add i32 %76, 1
  %88 = mul i32 %86, %87
  %89 = load %Stack** @pstatic
  %90 = getelementptr %Stack* %89, i32 25
  %91 = bitcast %Stack* %90 to i32*
  %92 = load i32* %91
  %93 = sdiv i32 %88, %92
  call void @"shared!geto"(i32 %26, i32 10, i32 -1)
  %94 = load %Stack** @retvar
  %95 = load %Stack* %94
  call void @"systemi!Pusho"(%Stack %95)
  %96 = load %Stack** @pstatic
  %97 = getelementptr %Stack* %96, i32 24
  %98 = bitcast %Stack* %97 to i32*
  %99 = load i32* %98
  %100 = mul i32 %99, %76
  %101 = load %Stack** @pstatic
  %102 = getelementptr %Stack* %101, i32 25
  %103 = bitcast %Stack* %102 to i32*
  %104 = load i32* %103
  %105 = sdiv i32 %100, %104
  %106 = load %Stack** @pstatic
  %107 = getelementptr %Stack* %106, i32 24
  %108 = bitcast %Stack* %107 to i32*
  %109 = load i32* %108
  %110 = add i32 %76, 1
  %111 = mul i32 %109, %110
  %112 = load %Stack** @pstatic
  %113 = getelementptr %Stack* %112, i32 25
  %114 = bitcast %Stack* %113 to i32*
  %115 = load i32* %114
  %116 = sdiv i32 %111, %115
  call void @"system!CopyArray"(i32 %82, i32 %93, i32 %105, i32 %116, i32 1, i32 1)
  %117 = load %Stack** @pstatic
  %118 = getelementptr %Stack* %117, i32 22
  %119 = bitcast %Stack* %118 to i32*
  call void @"system!AtmInc"(i32* %119, i32 1)
  br label %cond1

post:                                             ; preds = %cont33
  %120 = getelementptr %Stack* %0, i32 6
  %121 = bitcast %Stack* %120 to i32*
  %122 = load i32* %121
  %123 = add i32 %122, 1
  %124 = getelementptr %Stack* %0, i32 6
  %125 = bitcast %Stack* %124 to i32*
  store i32 %123, i32* %125
  br label %cond

conti:                                            ; preds = %cond
  %126 = load %Stack** @pstatic
  %127 = getelementptr %Stack* %126, i32 20
  %128 = load %Stack* %127
  call void @"systemi!Pusho"(%Stack %128)
  %129 = call i32 @"shared!geti"(i32 %26, i32 6)
  %130 = getelementptr %Stack* %0, i32 5
  %131 = bitcast %Stack* %130 to i32*
  %132 = load i32* %131
  %133 = mul i32 %129, %132
  %134 = load %Stack** @pstatic
  %135 = getelementptr %Stack* %134, i32 25
  %136 = bitcast %Stack* %135 to i32*
  %137 = load i32* %136
  %138 = sdiv i32 %133, %137
  %139 = call i32 @"shared!geti"(i32 %26, i32 6)
  %140 = add i32 %132, 1
  %141 = mul i32 %139, %140
  %142 = load %Stack** @pstatic
  %143 = getelementptr %Stack* %142, i32 25
  %144 = bitcast %Stack* %143 to i32*
  %145 = load i32* %144
  %146 = sdiv i32 %141, %145
  call void @"shared!geto"(i32 %26, i32 10, i32 -1)
  %147 = load %Stack** @retvar
  %148 = load %Stack* %147
  call void @"systemi!Pusho"(%Stack %148)
  %149 = call i32 @"shared!geti"(i32 %26, i32 6)
  %150 = mul i32 %149, %132
  %151 = load %Stack** @pstatic
  %152 = getelementptr %Stack* %151, i32 25
  %153 = bitcast %Stack* %152 to i32*
  %154 = load i32* %153
  %155 = sdiv i32 %150, %154
  %156 = call i32 @"shared!geti"(i32 %26, i32 6)
  %157 = add i32 %132, 1
  %158 = mul i32 %156, %157
  %159 = load %Stack** @pstatic
  %160 = getelementptr %Stack* %159, i32 25
  %161 = bitcast %Stack* %160 to i32*
  %162 = load i32* %161
  %163 = sdiv i32 %158, %162
  call void @"system!CopyArray"(i32 %138, i32 %146, i32 %155, i32 %163, i32 1, i32 1)
  %164 = load %Stack** @pstatic
  %165 = getelementptr %Stack* %164, i32 22
  %166 = bitcast %Stack* %165 to i32*
  call void @"system!AtmInc"(i32* %166, i32 1)
  br label %cond42

cond1:                                            ; preds = %post3, %for
  br label %for2

for2:                                             ; preds = %cond1
  %167 = load %Stack** @pstatic
  %168 = getelementptr %Stack* %167, i32 22
  %169 = bitcast %Stack* %168 to i32*
  %170 = load volatile i32* %169
  %171 = load %Stack** @pstatic
  %172 = getelementptr %Stack* %171, i32 25
  %173 = bitcast %Stack* %172 to i32*
  %174 = load i32* %173
  %175 = srem i32 %170, %174
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %if_t, label %if_f

post3:                                            ; preds = %cont
  br label %cond1

conti4:                                           ; preds = %if_t
  %177 = getelementptr %Stack* %0, i32 6
  %178 = bitcast %Stack* %177 to i32*
  %179 = load i32* %178
  %180 = srem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %if_t5, label %if_f6

if_t:                                             ; preds = %for2
  br label %conti4

if_f:                                             ; preds = %for2
  br label %cont

cont:                                             ; preds = %if_f
  br label %post3

if_t5:                                            ; preds = %conti4
  %182 = getelementptr %Stack* %0, i32 9
  %183 = load %Stack* %182
  call void @"systemi!Pusho"(%Stack %183)
  %184 = load %Stack** @pstatic
  %185 = getelementptr %Stack* %184, i32 24
  %186 = bitcast %Stack* %185 to i32*
  %187 = load i32* %186
  %188 = mul i32 %187, 1000
  call void @"shared!geto"(i32 %26, i32 12, i32 -1)
  %189 = load %Stack** @retvar
  %190 = load %Stack* %189
  call void @"systemi!Pusho"(%Stack %190)
  %191 = getelementptr %Stack* %0, i32 1
  %192 = bitcast %Stack* %191 to i32*
  %193 = load i32* %192
  %194 = mul i32 %193, 1000
  %195 = load %Stack** @pstatic
  %196 = getelementptr %Stack* %195, i32 24
  %197 = bitcast %Stack* %196 to i32*
  %198 = load i32* %197
  %199 = mul i32 %194, %198
  %200 = add i32 %193, 1
  %201 = mul i32 %200, 1000
  %202 = load %Stack** @pstatic
  %203 = getelementptr %Stack* %202, i32 24
  %204 = bitcast %Stack* %203 to i32*
  %205 = load i32* %204
  %206 = mul i32 %201, %205
  call void @"system!CopyArray"(i32 0, i32 %188, i32 %199, i32 %206, i32 1, i32 1)
  br label %cont7

if_f6:                                            ; preds = %conti4
  %207 = getelementptr %Stack* %0, i32 9
  %208 = load %Stack* %207
  call void @"systemi!Pusho"(%Stack %208)
  %209 = load %Stack** @pstatic
  %210 = getelementptr %Stack* %209, i32 24
  %211 = bitcast %Stack* %210 to i32*
  %212 = load i32* %211
  %213 = mul i32 %212, 1000
  call void @"shared!geto"(i32 %26, i32 13, i32 -1)
  %214 = load %Stack** @retvar
  %215 = load %Stack* %214
  call void @"systemi!Pusho"(%Stack %215)
  %216 = getelementptr %Stack* %0, i32 1
  %217 = bitcast %Stack* %216 to i32*
  %218 = load i32* %217
  %219 = mul i32 %218, 1000
  %220 = load %Stack** @pstatic
  %221 = getelementptr %Stack* %220, i32 24
  %222 = bitcast %Stack* %221 to i32*
  %223 = load i32* %222
  %224 = mul i32 %219, %223
  %225 = add i32 %218, 1
  %226 = mul i32 %225, 1000
  %227 = load %Stack** @pstatic
  %228 = getelementptr %Stack* %227, i32 24
  %229 = bitcast %Stack* %228 to i32*
  %230 = load i32* %229
  %231 = mul i32 %226, %230
  call void @"system!CopyArray"(i32 0, i32 %213, i32 %224, i32 %231, i32 1, i32 1)
  br label %cont7

cont7:                                            ; preds = %if_f6, %if_t5
  %232 = getelementptr %Stack* %0, i32 5
  %233 = bitcast %Stack* %232 to i32*
  %234 = load i32* %233
  call void @"systemi!Pushi"(i32 %234)
  call void @"system!Invoke"(i32 1), !dbg !14
  %235 = getelementptr %Stack* %0, i32 12
  %236 = bitcast %Stack* %235 to i32*
  store i32 0, i32* %236
  %237 = getelementptr %Stack* %0, i32 2
  %238 = bitcast %Stack* %237 to i32*
  store i32 0, i32* %238
  br label %cond8

cond8:                                            ; preds = %post10, %cont7
  %239 = getelementptr %Stack* %0, i32 2
  %240 = bitcast %Stack* %239 to i32*
  %241 = load i32* %240
  %242 = icmp slt i32 %241, 1000
  br i1 %242, label %for9, label %conti11

for9:                                             ; preds = %cond8
  %243 = getelementptr %Stack* %0, i32 10
  %244 = bitcast %Stack* %243 to double*
  store double 0.000000e+00, double* %244
  %245 = getelementptr %Stack* %0, i32 3
  %246 = bitcast %Stack* %245 to i32*
  store i32 0, i32* %246
  br label %cond12

post10:                                           ; preds = %conti19
  %247 = getelementptr %Stack* %0, i32 2
  %248 = bitcast %Stack* %247 to i32*
  %249 = load i32* %248
  %250 = add i32 %249, 1
  %251 = getelementptr %Stack* %0, i32 2
  %252 = bitcast %Stack* %251 to i32*
  store i32 %250, i32* %252
  br label %cond8

conti11:                                          ; preds = %cond8
  %253 = getelementptr %Stack* %0, i32 5
  %254 = bitcast %Stack* %253 to i32*
  %255 = load i32* %254
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %if_t20, label %if_f21

cond12:                                           ; preds = %post14, %for9
  %257 = getelementptr %Stack* %0, i32 3
  %258 = bitcast %Stack* %257 to i32*
  %259 = load i32* %258
  %260 = load %Stack** @pstatic
  %261 = getelementptr %Stack* %260, i32 23
  %262 = bitcast %Stack* %261 to i32*
  %263 = load i32* %262
  %264 = icmp slt i32 %259, %263
  br i1 %264, label %for13, label %conti15

for13:                                            ; preds = %cond12
  %265 = getelementptr %Stack* %0, i32 10
  %266 = bitcast %Stack* %265 to double*
  %267 = load double* %266
  %268 = load %Stack** @pstatic
  %269 = getelementptr %Stack* %268, i32 20
  %270 = load %Stack* %269
  %271 = getelementptr %Stack* %0, i32 3
  %272 = bitcast %Stack* %271 to i32*
  %273 = load i32* %272
  %274 = load %Stack** @pstatic
  %275 = getelementptr %Stack* %274, i32 20
  %276 = load %Stack* %275
  %277 = call %Stack* @"systemi!FldAddr"(%Stack %276)
  store %Stack* %277, %Stack** %2
  %278 = load %Stack** %2
  %279 = bitcast %Stack* %278 to double*
  %280 = getelementptr inbounds double* %279, i32 %273
  %281 = load double* %280
  %282 = getelementptr %Stack* %0, i32 9
  %283 = load %Stack* %282
  %284 = getelementptr %Stack* %0, i32 12
  %285 = bitcast %Stack* %284 to i32*
  %286 = load i32* %285
  %287 = add i32 %286, %273
  %288 = load %Stack** %4
  %289 = bitcast %Stack* %288 to double*
  %290 = getelementptr inbounds double* %289, i32 %287
  %291 = load double* %290
  %292 = fmul double %281, %291
  %293 = fadd double %267, %292
  %294 = getelementptr %Stack* %0, i32 10
  %295 = bitcast %Stack* %294 to double*
  store double %293, double* %295
  br label %post14

post14:                                           ; preds = %for13
  %296 = getelementptr %Stack* %0, i32 3
  %297 = bitcast %Stack* %296 to i32*
  %298 = load i32* %297
  %299 = add i32 %298, 1
  %300 = getelementptr %Stack* %0, i32 3
  %301 = bitcast %Stack* %300 to i32*
  store i32 %299, i32* %301
  br label %cond12

conti15:                                          ; preds = %cond12
  %302 = getelementptr %Stack* %0, i32 10
  %303 = bitcast %Stack* %302 to double*
  %304 = load double* %303
  %305 = fsub double -0.000000e+00, %304
  call void @"systemi!Pushd"(double %305)
  call void @"system!Invoke"(i32 8), !dbg !15
  %306 = load %Stack** @retvar
  %307 = bitcast %Stack* %306 to double*
  %308 = load double* %307
  %309 = fadd double 1.000000e+00, %308
  %310 = fdiv double 1.000000e+00, %309
  %311 = getelementptr %Stack* %0, i32 11
  %312 = bitcast %Stack* %311 to double*
  store double %310, double* %312
  %313 = getelementptr %Stack* %0, i32 9
  %314 = load %Stack* %313
  %315 = getelementptr %Stack* %0, i32 12
  %316 = bitcast %Stack* %315 to i32*
  %317 = load i32* %316
  %318 = load %Stack** @pstatic
  %319 = getelementptr %Stack* %318, i32 23
  %320 = bitcast %Stack* %319 to i32*
  %321 = load i32* %320
  %322 = add i32 %317, %321
  %323 = load %Stack** %4
  %324 = bitcast %Stack* %323 to double*
  %325 = getelementptr inbounds double* %324, i32 %322
  %326 = load double* %325
  %327 = fsub double %326, %310
  %328 = getelementptr %Stack* %0, i32 13
  %329 = bitcast %Stack* %328 to double*
  store double %327, double* %329
  %330 = getelementptr %Stack* %0, i32 3
  %331 = bitcast %Stack* %330 to i32*
  store i32 0, i32* %331
  br label %cond16

cond16:                                           ; preds = %post18, %conti15
  %332 = getelementptr %Stack* %0, i32 3
  %333 = bitcast %Stack* %332 to i32*
  %334 = load i32* %333
  %335 = load %Stack** @pstatic
  %336 = getelementptr %Stack* %335, i32 23
  %337 = bitcast %Stack* %336 to i32*
  %338 = load i32* %337
  %339 = icmp slt i32 %334, %338
  br i1 %339, label %for17, label %conti19

for17:                                            ; preds = %cond16
  %340 = load %Stack** @pstatic
  %341 = getelementptr %Stack* %340, i32 21
  %342 = load %Stack* %341
  %343 = getelementptr %Stack* %0, i32 5
  %344 = bitcast %Stack* %343 to i32*
  %345 = load i32* %344
  %346 = load %Stack** %3
  %347 = getelementptr inbounds %Stack* %346, i32 %345
  %348 = load %Stack* %347
  call void @"systemi!Pusho"(%Stack %348)
  %349 = getelementptr %Stack* %0, i32 3
  %350 = bitcast %Stack* %349 to i32*
  %351 = load i32* %350
  %352 = call %Stack* @"systemi!ArrAddr"(%Stack %348)
  %353 = bitcast %Stack* %352 to double*
  call void @"systemi!Pop"(i32 1)
  %354 = getelementptr inbounds double* %353, i32 %351
  %355 = load double* %354
  %356 = load %Stack** @pstatic
  %357 = getelementptr %Stack* %356, i32 26
  %358 = bitcast %Stack* %357 to double*
  %359 = load double* %358
  %360 = getelementptr %Stack* %0, i32 13
  %361 = bitcast %Stack* %360 to double*
  %362 = load double* %361
  %363 = fmul double %359, %362
  %364 = getelementptr %Stack* %0, i32 9
  %365 = load %Stack* %364
  %366 = getelementptr %Stack* %0, i32 12
  %367 = bitcast %Stack* %366 to i32*
  %368 = load i32* %367
  %369 = add i32 %368, %351
  %370 = load %Stack** %4
  %371 = bitcast %Stack* %370 to double*
  %372 = getelementptr inbounds double* %371, i32 %369
  %373 = load double* %372
  %374 = fmul double %363, %373
  %375 = fadd double %355, %374
  %376 = load %Stack** @pstatic
  %377 = getelementptr %Stack* %376, i32 21
  %378 = load %Stack* %377
  %379 = load %Stack** %3
  %380 = getelementptr inbounds %Stack* %379, i32 %345
  %381 = load %Stack* %380
  %382 = call %Stack* @"systemi!ArrAddr"(%Stack %381)
  %383 = bitcast %Stack* %382 to double*
  %384 = getelementptr double* %383, i32 %351
  store double %375, double* %384
  br label %post18

post18:                                           ; preds = %for17
  %385 = getelementptr %Stack* %0, i32 3
  %386 = bitcast %Stack* %385 to i32*
  %387 = load i32* %386
  %388 = add i32 %387, 1
  %389 = getelementptr %Stack* %0, i32 3
  %390 = bitcast %Stack* %389 to i32*
  store i32 %388, i32* %390
  br label %cond16

conti19:                                          ; preds = %cond16
  %391 = getelementptr %Stack* %0, i32 12
  %392 = bitcast %Stack* %391 to i32*
  %393 = load i32* %392
  %394 = load %Stack** @pstatic
  %395 = getelementptr %Stack* %394, i32 24
  %396 = bitcast %Stack* %395 to i32*
  %397 = load i32* %396
  %398 = add i32 %393, %397
  %399 = getelementptr %Stack* %0, i32 12
  %400 = bitcast %Stack* %399 to i32*
  store i32 %398, i32* %400
  br label %post10

if_t20:                                           ; preds = %conti11
  %401 = getelementptr %Stack* %0, i32 2
  %402 = bitcast %Stack* %401 to i32*
  store i32 1, i32* %402
  br label %cond23

if_f21:                                           ; preds = %conti11
  br label %cont22

cont22:                                           ; preds = %if_f21, %conti26
  call void @"systemi!Pushi"(i32 -1)
  call void @"shared!geto"(i32 %26, i32 8, i32 1)
  %403 = load %Stack** @retvar
  %404 = load %Stack* %403
  call void @"systemi!Pusho"(%Stack %404)
  call void @"system!Call"(i32 1)
  %405 = getelementptr %Stack* %0, i32 1
  %406 = bitcast %Stack* %405 to i32*
  %407 = load i32* %406
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %if_t31, label %if_f32

cond23:                                           ; preds = %post25, %if_t20
  %409 = getelementptr %Stack* %0, i32 2
  %410 = bitcast %Stack* %409 to i32*
  %411 = load i32* %410
  %412 = load %Stack** @pstatic
  %413 = getelementptr %Stack* %412, i32 25
  %414 = bitcast %Stack* %413 to i32*
  %415 = load i32* %414
  %416 = icmp slt i32 %411, %415
  br i1 %416, label %for24, label %conti26

for24:                                            ; preds = %cond23
  %417 = getelementptr %Stack* %0, i32 3
  %418 = bitcast %Stack* %417 to i32*
  store i32 0, i32* %418
  br label %cond27

post25:                                           ; preds = %conti30
  %419 = getelementptr %Stack* %0, i32 2
  %420 = bitcast %Stack* %419 to i32*
  %421 = load i32* %420
  %422 = add i32 %421, 1
  %423 = getelementptr %Stack* %0, i32 2
  %424 = bitcast %Stack* %423 to i32*
  store i32 %422, i32* %424
  br label %cond23

conti26:                                          ; preds = %cond23
  call void @"shared!geto"(i32 %26, i32 11, i32 -1)
  %425 = load %Stack** @retvar
  %426 = load %Stack* %425
  call void @"systemi!Pusho"(%Stack %426)
  %427 = getelementptr %Stack* %0, i32 7
  %428 = bitcast %Stack* %427 to i32*
  %429 = load i32* %428
  %430 = load %Stack** @pstatic
  %431 = getelementptr %Stack* %430, i32 24
  %432 = bitcast %Stack* %431 to i32*
  %433 = load i32* %432
  %434 = mul i32 %429, %433
  %435 = add i32 %429, 1
  %436 = load %Stack** @pstatic
  %437 = getelementptr %Stack* %436, i32 24
  %438 = bitcast %Stack* %437 to i32*
  %439 = load i32* %438
  %440 = mul i32 %435, %439
  %441 = load %Stack** @pstatic
  %442 = getelementptr %Stack* %441, i32 21
  %443 = load %Stack* %442
  %444 = load %Stack** %3
  %445 = getelementptr inbounds %Stack* %444, i32 0
  %446 = load %Stack* %445
  call void @"systemi!Pusho"(%Stack %446)
  %447 = load %Stack** @pstatic
  %448 = getelementptr %Stack* %447, i32 24
  %449 = bitcast %Stack* %448 to i32*
  %450 = load i32* %449
  call void @"system!CopyArray"(i32 %434, i32 %440, i32 0, i32 %450, i32 1, i32 1)
  br label %cont22

cond27:                                           ; preds = %post29, %for24
  %451 = getelementptr %Stack* %0, i32 3
  %452 = bitcast %Stack* %451 to i32*
  %453 = load i32* %452
  %454 = load %Stack** @pstatic
  %455 = getelementptr %Stack* %454, i32 23
  %456 = bitcast %Stack* %455 to i32*
  %457 = load i32* %456
  %458 = icmp slt i32 %453, %457
  br i1 %458, label %for28, label %conti30

for28:                                            ; preds = %cond27
  %459 = load %Stack** @pstatic
  %460 = getelementptr %Stack* %459, i32 21
  %461 = load %Stack* %460
  %462 = load %Stack** %3
  %463 = getelementptr inbounds %Stack* %462, i32 0
  %464 = load %Stack* %463
  call void @"systemi!Pusho"(%Stack %464)
  %465 = getelementptr %Stack* %0, i32 3
  %466 = bitcast %Stack* %465 to i32*
  %467 = load i32* %466
  %468 = call %Stack* @"systemi!ArrAddr"(%Stack %464)
  %469 = bitcast %Stack* %468 to double*
  call void @"systemi!Pop"(i32 1)
  %470 = getelementptr inbounds double* %469, i32 %467
  %471 = load double* %470
  %472 = load %Stack** @pstatic
  %473 = getelementptr %Stack* %472, i32 21
  %474 = load %Stack* %473
  %475 = getelementptr %Stack* %0, i32 2
  %476 = bitcast %Stack* %475 to i32*
  %477 = load i32* %476
  %478 = load %Stack** %3
  %479 = getelementptr inbounds %Stack* %478, i32 %477
  %480 = load %Stack* %479
  call void @"systemi!Pusho"(%Stack %480)
  %481 = call %Stack* @"systemi!ArrAddr"(%Stack %480)
  %482 = bitcast %Stack* %481 to double*
  call void @"systemi!Pop"(i32 1)
  %483 = getelementptr inbounds double* %482, i32 %467
  %484 = load double* %483
  %485 = fadd double %471, %484
  %486 = load %Stack** @pstatic
  %487 = getelementptr %Stack* %486, i32 21
  %488 = load %Stack* %487
  %489 = load %Stack** %3
  %490 = getelementptr inbounds %Stack* %489, i32 0
  %491 = load %Stack* %490
  %492 = call %Stack* @"systemi!ArrAddr"(%Stack %491)
  %493 = bitcast %Stack* %492 to double*
  %494 = getelementptr double* %493, i32 %467
  store double %485, double* %494
  br label %post29

post29:                                           ; preds = %for28
  %495 = getelementptr %Stack* %0, i32 3
  %496 = bitcast %Stack* %495 to i32*
  %497 = load i32* %496
  %498 = add i32 %497, 1
  %499 = getelementptr %Stack* %0, i32 3
  %500 = bitcast %Stack* %499 to i32*
  store i32 %498, i32* %500
  br label %cond27

conti30:                                          ; preds = %cond27
  br label %post25

if_t31:                                           ; preds = %cont22
  %501 = getelementptr %Stack* %0, i32 9
  %502 = load %Stack* %501
  call void @"systemi!Pusho"(%Stack %502)
  %503 = load %Stack** @pstatic
  %504 = getelementptr %Stack* %503, i32 24
  %505 = bitcast %Stack* %504 to i32*
  %506 = load i32* %505
  %507 = load %Stack** @pstatic
  %508 = getelementptr %Stack* %507, i32 27
  %509 = bitcast %Stack* %508 to i32*
  %510 = load i32* %509
  %511 = mul i32 %506, %510
  %512 = load %Stack** @pstatic
  %513 = getelementptr %Stack* %512, i32 25
  %514 = bitcast %Stack* %513 to i32*
  %515 = load i32* %514
  %516 = sdiv i32 %511, %515
  call void @"shared!geto"(i32 %26, i32 11, i32 -1)
  %517 = load %Stack** @retvar
  %518 = load %Stack* %517
  call void @"systemi!Pusho"(%Stack %518)
  %519 = load %Stack** @pstatic
  %520 = getelementptr %Stack* %519, i32 24
  %521 = bitcast %Stack* %520 to i32*
  %522 = load i32* %521
  %523 = load %Stack** @pstatic
  %524 = getelementptr %Stack* %523, i32 27
  %525 = bitcast %Stack* %524 to i32*
  %526 = load i32* %525
  %527 = mul i32 %522, %526
  %528 = load %Stack** @pstatic
  %529 = getelementptr %Stack* %528, i32 25
  %530 = bitcast %Stack* %529 to i32*
  %531 = load i32* %530
  %532 = sdiv i32 %527, %531
  call void @"system!CopyArray"(i32 0, i32 %516, i32 0, i32 %532, i32 1, i32 1)
  %533 = getelementptr %Stack* %0, i32 2
  %534 = bitcast %Stack* %533 to i32*
  store i32 0, i32* %534
  br label %cond34

if_f32:                                           ; preds = %cont22
  br label %cont33

cont33:                                           ; preds = %if_f32, %conti37
  call void @"systemi!Pushi"(i32 -1)
  call void @"shared!geto"(i32 %26, i32 7, i32 1)
  %535 = load %Stack** @retvar
  %536 = load %Stack* %535
  call void @"systemi!Pusho"(%Stack %536)
  call void @"system!Call"(i32 1)
  br label %post

cond34:                                           ; preds = %post36, %if_t31
  %537 = getelementptr %Stack* %0, i32 2
  %538 = bitcast %Stack* %537 to i32*
  %539 = load i32* %538
  %540 = load %Stack** @pstatic
  %541 = getelementptr %Stack* %540, i32 27
  %542 = bitcast %Stack* %541 to i32*
  %543 = load i32* %542
  %544 = load %Stack** @pstatic
  %545 = getelementptr %Stack* %544, i32 25
  %546 = bitcast %Stack* %545 to i32*
  %547 = load i32* %546
  %548 = sdiv i32 %543, %547
  %549 = icmp slt i32 %539, %548
  br i1 %549, label %for35, label %conti37

for35:                                            ; preds = %cond34
  %550 = getelementptr %Stack* %0, i32 3
  %551 = bitcast %Stack* %550 to i32*
  store i32 0, i32* %551
  br label %cond38

post36:                                           ; preds = %conti41
  %552 = getelementptr %Stack* %0, i32 2
  %553 = bitcast %Stack* %552 to i32*
  %554 = load i32* %553
  %555 = add i32 %554, 1
  %556 = getelementptr %Stack* %0, i32 2
  %557 = bitcast %Stack* %556 to i32*
  store i32 %555, i32* %557
  br label %cond34

conti37:                                          ; preds = %cond34
  call void @"shared!geto"(i32 %26, i32 10, i32 -1)
  %558 = load %Stack** @retvar
  %559 = load %Stack* %558
  call void @"systemi!Pusho"(%Stack %559)
  %560 = load %Stack** @pstatic
  %561 = getelementptr %Stack* %560, i32 24
  %562 = bitcast %Stack* %561 to i32*
  %563 = load i32* %562
  %564 = load %Stack** @pstatic
  %565 = getelementptr %Stack* %564, i32 20
  %566 = load %Stack* %565
  call void @"systemi!Pusho"(%Stack %566)
  %567 = load %Stack** @pstatic
  %568 = getelementptr %Stack* %567, i32 24
  %569 = bitcast %Stack* %568 to i32*
  %570 = load i32* %569
  call void @"system!CopyArray"(i32 0, i32 %563, i32 0, i32 %570, i32 1, i32 1)
  br label %cont33

cond38:                                           ; preds = %post40, %for35
  %571 = getelementptr %Stack* %0, i32 3
  %572 = bitcast %Stack* %571 to i32*
  %573 = load i32* %572
  %574 = load %Stack** @pstatic
  %575 = getelementptr %Stack* %574, i32 23
  %576 = bitcast %Stack* %575 to i32*
  %577 = load i32* %576
  %578 = icmp slt i32 %573, %577
  br i1 %578, label %for39, label %conti41

for39:                                            ; preds = %cond38
  %579 = load %Stack** @pstatic
  %580 = getelementptr %Stack* %579, i32 20
  %581 = load %Stack* %580
  %582 = getelementptr %Stack* %0, i32 3
  %583 = bitcast %Stack* %582 to i32*
  %584 = load i32* %583
  %585 = load %Stack** %2
  %586 = bitcast %Stack* %585 to double*
  %587 = getelementptr inbounds double* %586, i32 %584
  %588 = load double* %587
  %589 = getelementptr %Stack* %0, i32 9
  %590 = load %Stack* %589
  %591 = getelementptr %Stack* %0, i32 2
  %592 = bitcast %Stack* %591 to i32*
  %593 = load i32* %592
  %594 = load %Stack** @pstatic
  %595 = getelementptr %Stack* %594, i32 24
  %596 = bitcast %Stack* %595 to i32*
  %597 = load i32* %596
  %598 = mul i32 %593, %597
  %599 = add i32 %598, %584
  %600 = load %Stack** %4
  %601 = bitcast %Stack* %600 to double*
  %602 = getelementptr inbounds double* %601, i32 %599
  %603 = load double* %602
  %604 = fadd double %588, %603
  %605 = load %Stack** @pstatic
  %606 = getelementptr %Stack* %605, i32 20
  %607 = load %Stack* %606
  %608 = load %Stack** %2
  %609 = bitcast %Stack* %608 to double*
  %610 = getelementptr double* %609, i32 %584
  store double %604, double* %610
  br label %post40

post40:                                           ; preds = %for39
  %611 = getelementptr %Stack* %0, i32 3
  %612 = bitcast %Stack* %611 to i32*
  %613 = load i32* %612
  %614 = add i32 %613, 1
  %615 = getelementptr %Stack* %0, i32 3
  %616 = bitcast %Stack* %615 to i32*
  store i32 %614, i32* %616
  br label %cond38

conti41:                                          ; preds = %cond38
  br label %post36

cond42:                                           ; preds = %post44, %conti
  br label %for43

for43:                                            ; preds = %cond42
  %617 = load %Stack** @pstatic
  %618 = getelementptr %Stack* %617, i32 22
  %619 = bitcast %Stack* %618 to i32*
  %620 = load volatile i32* %619
  %621 = load %Stack** @pstatic
  %622 = getelementptr %Stack* %621, i32 25
  %623 = bitcast %Stack* %622 to i32*
  %624 = load i32* %623
  %625 = srem i32 %620, %624
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %if_t46, label %if_f47

post44:                                           ; preds = %cont48
  br label %cond42

conti45:                                          ; preds = %if_t46
  %627 = load %Stack** @pstatic
  %628 = getelementptr %Stack* %627, i32 1
  %629 = bitcast %Stack* %628 to i32*
  %630 = load i32* %629
  %631 = load %Stack** @pstatic
  %632 = getelementptr %Stack* %631, i32 0
  %633 = bitcast %Stack* %632 to i32*
  %634 = load i32* %633
  %635 = add i32 %630, %634
  %636 = getelementptr %Stack* %0, i32 14
  %637 = bitcast %Stack* %636 to i32*
  store i32 %635, i32* %637
  br label %cond49

if_t46:                                           ; preds = %for43
  br label %conti45

if_f47:                                           ; preds = %for43
  br label %cont48

cont48:                                           ; preds = %if_f47
  br label %post44

cond49:                                           ; preds = %post51, %conti45
  %638 = getelementptr %Stack* %0, i32 6
  %639 = bitcast %Stack* %638 to i32*
  %640 = load i32* %639
  %641 = getelementptr %Stack* %0, i32 14
  %642 = bitcast %Stack* %641 to i32*
  %643 = load i32* %642
  %644 = icmp slt i32 %640, %643
  br i1 %644, label %for50, label %conti52

for50:                                            ; preds = %cond49
  %645 = getelementptr %Stack* %0, i32 6
  %646 = bitcast %Stack* %645 to i32*
  %647 = load i32* %646
  %648 = srem i32 %647, 2
  %649 = icmp eq i32 %648, 0
  br i1 %649, label %if_t53, label %if_f54

post51:                                           ; preds = %conti59
  %650 = getelementptr %Stack* %0, i32 6
  %651 = bitcast %Stack* %650 to i32*
  %652 = load i32* %651
  %653 = add i32 %652, 1
  %654 = getelementptr %Stack* %0, i32 6
  %655 = bitcast %Stack* %654 to i32*
  store i32 %653, i32* %655
  br label %cond49

conti52:                                          ; preds = %cond49
  %656 = load %Stack** @retvar, !dbg !16
  %657 = bitcast %Stack* %656 to i32*
  store i32 0, i32* %657, !dbg !16
  ret void, !dbg !16

if_t53:                                           ; preds = %for50
  %658 = getelementptr %Stack* %0, i32 9
  %659 = load %Stack* %658
  call void @"systemi!Pusho"(%Stack %659)
  %660 = load %Stack** @pstatic
  %661 = getelementptr %Stack* %660, i32 24
  %662 = bitcast %Stack* %661 to i32*
  %663 = load i32* %662
  %664 = mul i32 %663, 1000
  call void @"shared!geto"(i32 %26, i32 12, i32 -1)
  %665 = load %Stack** @retvar
  %666 = load %Stack* %665
  call void @"systemi!Pusho"(%Stack %666)
  %667 = getelementptr %Stack* %0, i32 1
  %668 = bitcast %Stack* %667 to i32*
  %669 = load i32* %668
  %670 = mul i32 %669, 1000
  %671 = load %Stack** @pstatic
  %672 = getelementptr %Stack* %671, i32 24
  %673 = bitcast %Stack* %672 to i32*
  %674 = load i32* %673
  %675 = mul i32 %670, %674
  %676 = add i32 %669, 1
  %677 = mul i32 %676, 1000
  %678 = load %Stack** @pstatic
  %679 = getelementptr %Stack* %678, i32 24
  %680 = bitcast %Stack* %679 to i32*
  %681 = load i32* %680
  %682 = mul i32 %677, %681
  call void @"system!CopyArray"(i32 0, i32 %664, i32 %675, i32 %682, i32 1, i32 1)
  br label %cont55

if_f54:                                           ; preds = %for50
  %683 = getelementptr %Stack* %0, i32 9
  %684 = load %Stack* %683
  call void @"systemi!Pusho"(%Stack %684)
  %685 = load %Stack** @pstatic
  %686 = getelementptr %Stack* %685, i32 24
  %687 = bitcast %Stack* %686 to i32*
  %688 = load i32* %687
  %689 = mul i32 %688, 1000
  call void @"shared!geto"(i32 %26, i32 13, i32 -1)
  %690 = load %Stack** @retvar
  %691 = load %Stack* %690
  call void @"systemi!Pusho"(%Stack %691)
  %692 = getelementptr %Stack* %0, i32 1
  %693 = bitcast %Stack* %692 to i32*
  %694 = load i32* %693
  %695 = mul i32 %694, 1000
  %696 = load %Stack** @pstatic
  %697 = getelementptr %Stack* %696, i32 24
  %698 = bitcast %Stack* %697 to i32*
  %699 = load i32* %698
  %700 = mul i32 %695, %699
  %701 = add i32 %694, 1
  %702 = mul i32 %701, 1000
  %703 = load %Stack** @pstatic
  %704 = getelementptr %Stack* %703, i32 24
  %705 = bitcast %Stack* %704 to i32*
  %706 = load i32* %705
  %707 = mul i32 %702, %706
  call void @"system!CopyArray"(i32 0, i32 %689, i32 %700, i32 %707, i32 1, i32 1)
  br label %cont55

cont55:                                           ; preds = %if_f54, %if_t53
  %708 = getelementptr %Stack* %0, i32 15
  %709 = bitcast %Stack* %708 to i32*
  store i32 0, i32* %709
  %710 = getelementptr %Stack* %0, i32 2
  %711 = bitcast %Stack* %710 to i32*
  store i32 0, i32* %711
  br label %cond56

cond56:                                           ; preds = %post58, %cont55
  %712 = getelementptr %Stack* %0, i32 2
  %713 = bitcast %Stack* %712 to i32*
  %714 = load i32* %713
  %715 = icmp slt i32 %714, 1000
  br i1 %715, label %for57, label %conti59

for57:                                            ; preds = %cond56
  %716 = getelementptr %Stack* %0, i32 10
  %717 = bitcast %Stack* %716 to double*
  store double 0.000000e+00, double* %717
  %718 = getelementptr %Stack* %0, i32 3
  %719 = bitcast %Stack* %718 to i32*
  store i32 0, i32* %719
  br label %cond60

post58:                                           ; preds = %cont66
  %720 = getelementptr %Stack* %0, i32 2
  %721 = bitcast %Stack* %720 to i32*
  %722 = load i32* %721
  %723 = add i32 %722, 1
  %724 = getelementptr %Stack* %0, i32 2
  %725 = bitcast %Stack* %724 to i32*
  store i32 %723, i32* %725
  br label %cond56

conti59:                                          ; preds = %cond56
  call void @"systemi!Pushi"(i32 -1)
  call void @"shared!geto"(i32 %26, i32 7, i32 1)
  %726 = load %Stack** @retvar
  %727 = load %Stack* %726
  call void @"systemi!Pusho"(%Stack %727)
  call void @"system!Call"(i32 1)
  br label %post51

cond60:                                           ; preds = %post62, %for57
  %728 = getelementptr %Stack* %0, i32 3
  %729 = bitcast %Stack* %728 to i32*
  %730 = load i32* %729
  %731 = load %Stack** @pstatic
  %732 = getelementptr %Stack* %731, i32 23
  %733 = bitcast %Stack* %732 to i32*
  %734 = load i32* %733
  %735 = icmp slt i32 %730, %734
  br i1 %735, label %for61, label %conti63

for61:                                            ; preds = %cond60
  %736 = getelementptr %Stack* %0, i32 10
  %737 = bitcast %Stack* %736 to double*
  %738 = load double* %737
  %739 = load %Stack** @pstatic
  %740 = getelementptr %Stack* %739, i32 20
  %741 = load %Stack* %740
  %742 = getelementptr %Stack* %0, i32 3
  %743 = bitcast %Stack* %742 to i32*
  %744 = load i32* %743
  %745 = load %Stack** %2
  %746 = bitcast %Stack* %745 to double*
  %747 = getelementptr inbounds double* %746, i32 %744
  %748 = load double* %747
  %749 = getelementptr %Stack* %0, i32 9
  %750 = load %Stack* %749
  %751 = getelementptr %Stack* %0, i32 15
  %752 = bitcast %Stack* %751 to i32*
  %753 = load i32* %752
  %754 = add i32 %753, %744
  %755 = load %Stack** %4
  %756 = bitcast %Stack* %755 to double*
  %757 = getelementptr inbounds double* %756, i32 %754
  %758 = load double* %757
  %759 = fmul double %748, %758
  %760 = fadd double %738, %759
  %761 = getelementptr %Stack* %0, i32 10
  %762 = bitcast %Stack* %761 to double*
  store double %760, double* %762
  br label %post62

post62:                                           ; preds = %for61
  %763 = getelementptr %Stack* %0, i32 3
  %764 = bitcast %Stack* %763 to i32*
  %765 = load i32* %764
  %766 = add i32 %765, 1
  %767 = getelementptr %Stack* %0, i32 3
  %768 = bitcast %Stack* %767 to i32*
  store i32 %766, i32* %768
  br label %cond60

conti63:                                          ; preds = %cond60
  %769 = getelementptr %Stack* %0, i32 10
  %770 = bitcast %Stack* %769 to double*
  %771 = load double* %770
  %772 = fsub double -0.000000e+00, %771
  call void @"systemi!Pushd"(double %772)
  call void @"system!Invoke"(i32 8), !dbg !17
  %773 = load %Stack** @retvar
  %774 = bitcast %Stack* %773 to double*
  %775 = load double* %774
  %776 = fadd double 1.000000e+00, %775
  %777 = fdiv double 1.000000e+00, %776
  %778 = getelementptr %Stack* %0, i32 11
  %779 = bitcast %Stack* %778 to double*
  store double %777, double* %779
  %780 = fcmp oge double %777, 5.000000e-01
  br i1 %780, label %and_nxt, label %and_conti

if_t64:                                           ; preds = %and_conti
  call void @"systemi!Pushi"(i32 1)
  %781 = load %Stack** @pstatic
  %782 = getelementptr %Stack* %781, i32 11
  %783 = load %Stack* %782
  call void @"systemi!Pusho"(%Stack %783)
  call void @"system!Call"(i32 2)
  %784 = load %Stack** @retvar
  %785 = bitcast %Stack* %784 to i32*
  %786 = load i32* %785
  br label %cont66

if_f65:                                           ; preds = %and_conti
  %787 = getelementptr %Stack* %0, i32 11
  %788 = bitcast %Stack* %787 to double*
  %789 = load double* %788
  %790 = fcmp olt double %789, 5.000000e-01
  br i1 %790, label %and_nxt69, label %and_conti68

else_t1:                                          ; preds = %and_conti68
  call void @"systemi!Pushi"(i32 1)
  %791 = load %Stack** @pstatic
  %792 = getelementptr %Stack* %791, i32 11
  %793 = load %Stack* %792
  call void @"systemi!Pusho"(%Stack %793)
  call void @"system!Call"(i32 2)
  %794 = load %Stack** @retvar
  %795 = bitcast %Stack* %794 to i32*
  %796 = load i32* %795
  br label %cont66

else_f1:                                          ; preds = %and_conti68
  br label %cont66

cont66:                                           ; preds = %else_f1, %else_t1, %if_t64
  %797 = getelementptr %Stack* %0, i32 15
  %798 = bitcast %Stack* %797 to i32*
  %799 = load i32* %798
  %800 = load %Stack** @pstatic
  %801 = getelementptr %Stack* %800, i32 24
  %802 = bitcast %Stack* %801 to i32*
  %803 = load i32* %802
  %804 = add i32 %799, %803
  %805 = getelementptr %Stack* %0, i32 15
  %806 = bitcast %Stack* %805 to i32*
  store i32 %804, i32* %806
  br label %post58

and_nxt:                                          ; preds = %conti63
  %807 = getelementptr %Stack* %0, i32 9
  %808 = load %Stack* %807
  %809 = getelementptr %Stack* %0, i32 15
  %810 = bitcast %Stack* %809 to i32*
  %811 = load i32* %810
  %812 = load %Stack** @pstatic
  %813 = getelementptr %Stack* %812, i32 23
  %814 = bitcast %Stack* %813 to i32*
  %815 = load i32* %814
  %816 = add i32 %811, %815
  %817 = load %Stack** %4
  %818 = bitcast %Stack* %817 to double*
  %819 = getelementptr inbounds double* %818, i32 %816
  %820 = load double* %819
  %821 = fcmp oeq double %820, 0.000000e+00
  br i1 %821, label %and_t, label %and_conti

and_t:                                            ; preds = %and_nxt
  br label %and_conti

and_conti:                                        ; preds = %and_nxt, %and_t, %conti63
  %822 = phi i1 [ false, %conti63 ], [ true, %and_t ], [ false, %and_nxt ]
  br i1 %822, label %if_t64, label %if_f65

and_nxt69:                                        ; preds = %if_f65
  %823 = getelementptr %Stack* %0, i32 9
  %824 = load %Stack* %823
  %825 = getelementptr %Stack* %0, i32 15
  %826 = bitcast %Stack* %825 to i32*
  %827 = load i32* %826
  %828 = load %Stack** @pstatic
  %829 = getelementptr %Stack* %828, i32 23
  %830 = bitcast %Stack* %829 to i32*
  %831 = load i32* %830
  %832 = add i32 %827, %831
  %833 = load %Stack** %4
  %834 = bitcast %Stack* %833 to double*
  %835 = getelementptr inbounds double* %834, i32 %832
  %836 = load double* %835
  %837 = fcmp oeq double %836, 1.000000e+00
  br i1 %837, label %and_t67, label %and_conti68

and_t67:                                          ; preds = %and_nxt69
  br label %and_conti68

and_conti68:                                      ; preds = %and_nxt69, %and_t67, %if_f65
  %838 = phi i1 [ false, %if_f65 ], [ true, %and_t67 ], [ false, %and_nxt69 ]
  br i1 %838, label %else_t1, label %else_f1
}

declare %Stack* @"systemi!FldAddr"(%Stack)

declare %Stack* @"systemi!ArrAddr"(%Stack)

declare void @"systemi!Pushd"(double)

declare void @"systemi!Pop"(i32)

define void @RemoteInitialize(%Stack*) {
  %2 = alloca %Stack*
  %3 = alloca %Stack*
  %4 = load i32* @mid
  call void @"shared!geto"(i32 %4, i32 9, i32 2)
  %5 = load %Stack** @retvar
  %6 = load %Stack* %5
  %7 = load %Stack** @pstatic
  %8 = getelementptr %Stack* %7, i32 11
  store %Stack %6, %Stack* %8
  %9 = load %Stack** @pstatic
  %10 = getelementptr %Stack* %9, i32 1
  %11 = bitcast %Stack* %10 to i32*
  store i32 1, i32* %11
  %12 = call i32 @"shared!geti"(i32 %4, i32 4)
  %13 = load %Stack** @pstatic
  %14 = getelementptr %Stack* %13, i32 23
  %15 = bitcast %Stack* %14 to i32*
  store i32 %12, i32* %15
  %16 = call i32 @"shared!geti"(i32 %4, i32 6)
  %17 = load %Stack** @pstatic
  %18 = getelementptr %Stack* %17, i32 24
  %19 = bitcast %Stack* %18 to i32*
  store i32 %16, i32* %19
  %20 = call i32 @"shared!geti"(i32 %4, i32 0)
  %21 = load %Stack** @pstatic
  %22 = getelementptr %Stack* %21, i32 25
  %23 = bitcast %Stack* %22 to i32*
  store i32 %20, i32* %23
  %24 = call double @"shared!getd"(i32 %4, i32 5)
  %25 = load %Stack** @pstatic
  %26 = getelementptr %Stack* %25, i32 26
  %27 = bitcast %Stack* %26 to double*
  store double %24, double* %27
  %28 = call i32 @"shared!geti"(i32 %4, i32 2)
  %29 = load %Stack** @pstatic
  %30 = getelementptr %Stack* %29, i32 27
  %31 = bitcast %Stack* %30 to i32*
  store i32 %28, i32* %31
  %32 = call i32 @"shared!geti"(i32 %4, i32 3)
  %33 = load %Stack** @pstatic
  %34 = getelementptr %Stack* %33, i32 0
  %35 = bitcast %Stack* %34 to i32*
  store i32 %32, i32* %35
  %36 = load %Stack** @pstatic
  %37 = getelementptr %Stack* %36, i32 25
  %38 = bitcast %Stack* %37 to i32*
  %39 = load i32* %38
  call void @"systemi!Pushi"(i32 %39)
  %40 = load %Stack** @pstatic
  %41 = getelementptr %Stack* %40, i32 24
  %42 = bitcast %Stack* %41 to i32*
  %43 = load i32* %42
  call void @"systemi!Pushi"(i32 %43)
  call void @"system!NewArray"(i32 1, i32 2)
  %44 = load %Stack** @retvar
  %45 = load %Stack* %44
  %46 = load %Stack** @pstatic
  %47 = getelementptr %Stack* %46, i32 21
  store %Stack %45, %Stack* %47
  %48 = load %Stack** @pstatic
  %49 = getelementptr %Stack* %48, i32 21
  %50 = load %Stack* %49
  %51 = call %Stack* @"systemi!FldAddr"(%Stack %50)
  store %Stack* %51, %Stack** %3
  %52 = load %Stack** @pstatic
  %53 = getelementptr %Stack* %52, i32 24
  %54 = bitcast %Stack* %53 to i32*
  %55 = load i32* %54
  call void @"systemi!Pushi"(i32 %55)
  call void @"system!NewArray"(i32 2, i32 1)
  %56 = load %Stack** @retvar
  %57 = load %Stack* %56
  %58 = load %Stack** @pstatic
  %59 = getelementptr %Stack* %58, i32 20
  store %Stack %57, %Stack* %59
  %60 = load %Stack** @pstatic
  %61 = getelementptr %Stack* %60, i32 20
  %62 = load %Stack* %61
  %63 = call %Stack* @"systemi!FldAddr"(%Stack %62)
  store %Stack* %63, %Stack** %2
  %64 = load %Stack** @retvar, !dbg !18
  %65 = bitcast %Stack* %64 to i32*
  store i32 0, i32* %65, !dbg !18
  ret void, !dbg !18
}

define void @"system!main"(%Stack*) {
  %2 = alloca %Stack*
  %3 = alloca %Stack*
  %4 = alloca %Stack*
  %5 = alloca %Stack*
  %6 = alloca %Stack*
  %7 = alloca %Stack*
  %8 = load %Stack** @pstatic
  %9 = getelementptr %Stack* %8, i32 0
  %10 = bitcast %Stack* %9 to i32*
  store i32 5, i32* %10
  %11 = load %Stack** @pstatic
  %12 = getelementptr %Stack* %11, i32 1
  %13 = bitcast %Stack* %12 to i32*
  store i32 1, i32* %13
  call void @"system!Invoke"(i32 4), !dbg !19
  %14 = load %Stack** @retvar
  %15 = bitcast %Stack* %14 to i32*
  %16 = load i32* %15
  %17 = load %Stack** @pstatic
  %18 = getelementptr %Stack* %17, i32 3
  %19 = bitcast %Stack* %18 to i32*
  store i32 %16, i32* %19
  call void @"string!LoadStringFromPool"(i32 0)
  %20 = load %Stack** @retvar
  %21 = load %Stack* %20
  call void @"systemi!Pusho"(%Stack %21)
  call void @"string!LoadStringFromPool"(i32 1)
  %22 = load %Stack** @retvar
  %23 = load %Stack* %22
  call void @"systemi!Pusho"(%Stack %23)
  call void @"system!ArrayLiteral"(i32 2, i32 2)
  %24 = load %Stack** @retvar
  %25 = load %Stack* %24
  %26 = load %Stack** @pstatic
  %27 = getelementptr %Stack* %26, i32 5
  store %Stack %25, %Stack* %27
  %28 = load %Stack** @pstatic
  %29 = getelementptr %Stack* %28, i32 5
  %30 = load %Stack* %29
  %31 = call %Stack* @"systemi!FldAddr"(%Stack %30)
  store %Stack* %31, %Stack** %7
  call void @"systemi!Pushi"(i32 13080)
  call void @"systemi!Pushi"(i32 13090)
  call void @"system!ArrayLiteral"(i32 0, i32 2)
  %32 = load %Stack** @retvar
  %33 = load %Stack* %32
  %34 = load %Stack** @pstatic
  %35 = getelementptr %Stack* %34, i32 6
  store %Stack %33, %Stack* %35
  %36 = load %Stack** @pstatic
  %37 = getelementptr %Stack* %36, i32 6
  %38 = load %Stack* %37
  %39 = call %Stack* @"systemi!FldAddr"(%Stack %38)
  store %Stack* %39, %Stack** %6
  call void @"string!LoadStringFromPool"(i32 2)
  %40 = load %Stack** @retvar
  %41 = load %Stack* %40
  call void @"systemi!Pusho"(%Stack %41)
  call void @"system!ArrayLiteral"(i32 2, i32 1)
  %42 = load %Stack** @retvar
  %43 = load %Stack* %42
  %44 = load %Stack** @pstatic
  %45 = getelementptr %Stack* %44, i32 7
  store %Stack %43, %Stack* %45
  %46 = load %Stack** @pstatic
  %47 = getelementptr %Stack* %46, i32 7
  %48 = load %Stack* %47
  %49 = call %Stack* @"systemi!FldAddr"(%Stack %48)
  store %Stack* %49, %Stack** %5
  call void @"systemi!Pushi"(i32 11211)
  call void @"system!ArrayLiteral"(i32 0, i32 1)
  %50 = load %Stack** @retvar
  %51 = load %Stack* %50
  %52 = load %Stack** @pstatic
  %53 = getelementptr %Stack* %52, i32 8
  store %Stack %51, %Stack* %53
  %54 = load %Stack** @pstatic
  %55 = getelementptr %Stack* %54, i32 8
  %56 = load %Stack* %55
  %57 = call %Stack* @"systemi!FldAddr"(%Stack %56)
  store %Stack* %57, %Stack** %4
  %58 = load %Stack** @pstatic
  %59 = getelementptr %Stack* %58, i32 8
  %60 = load %Stack* %59
  call void @"systemi!Pusho"(%Stack %60)
  %61 = load %Stack** @pstatic
  %62 = getelementptr %Stack* %61, i32 7
  %63 = load %Stack* %62
  call void @"systemi!Pusho"(%Stack %63)
  %64 = load %Stack** @pstatic
  %65 = getelementptr %Stack* %64, i32 6
  %66 = load %Stack* %65
  call void @"systemi!Pusho"(%Stack %66)
  %67 = load %Stack** @pstatic
  %68 = getelementptr %Stack* %67, i32 5
  %69 = load %Stack* %68
  call void @"systemi!Pusho"(%Stack %69)
  call void @"systemi!Pushi"(i32 5080)
  call void @"system!Invoke"(i32 5), !dbg !20
  %70 = load %Stack** @retvar
  %71 = load %Stack* %70
  %72 = load %Stack** @pstatic
  %73 = getelementptr %Stack* %72, i32 9
  store %Stack %71, %Stack* %73
  %74 = load %Stack** @pstatic
  %75 = getelementptr %Stack* %74, i32 9
  %76 = load %Stack* %75
  %77 = call %Stack* @"systemi!FldAddr"(%Stack %76)
  store %Stack* %77, %Stack** %3
  call void @"string!LoadStringFromPool"(i32 3)
  %78 = load %Stack** @retvar
  %79 = load %Stack* %78
  call void @"systemi!Pusho"(%Stack %79)
  call void @"system!Invoke"(i32 6), !dbg !21
  %80 = load i32* @mid
  call void @"shared!seti"(i32 %80, i32 0, i32 4)
  %81 = load %Stack** @pstatic
  %82 = getelementptr %Stack* %81, i32 5
  %83 = load %Stack* %82
  call void @"systemi!Pusho"(%Stack %83)
  call void @"system!Call"(i32 3)
  %84 = load %Stack** @retvar
  %85 = bitcast %Stack* %84 to i32*
  %86 = load i32* %85
  call void @"shared!seti"(i32 %80, i32 1, i32 %86)
  %87 = call i32 @"shared!geti"(i32 %80, i32 0)
  %88 = call i32 @"shared!geti"(i32 %80, i32 1)
  %89 = mul i32 %87, %88
  call void @"shared!seti"(i32 %80, i32 2, i32 %89)
  %90 = load %Stack** @pstatic
  %91 = getelementptr %Stack* %90, i32 0
  %92 = bitcast %Stack* %91 to i32*
  %93 = load i32* %92
  call void @"shared!seti"(i32 %80, i32 3, i32 %93)
  %94 = load %Stack** @pstatic
  %95 = getelementptr %Stack* %94, i32 1
  %96 = bitcast %Stack* %95 to i32*
  %97 = load i32* %96
  %98 = load %Stack** @pstatic
  %99 = getelementptr %Stack* %98, i32 10
  %100 = bitcast %Stack* %99 to i32*
  store i32 %97, i32* %100
  call void @"shared!seti"(i32 %80, i32 4, i32 100)
  call void @"shared!setd"(i32 %80, i32 5, double 5.000000e-02)
  %101 = call i32 @"shared!geti"(i32 %80, i32 4)
  %102 = add i32 %101, 1
  %103 = srem i32 %102, 32
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %if_t, label %if_f

if_t:                                             ; preds = %1
  %105 = call i32 @"shared!geti"(i32 %80, i32 4)
  %106 = add i32 %105, 1
  %107 = sdiv i32 %106, 32
  %108 = mul i32 %107, 32
  call void @"shared!seti"(i32 %80, i32 6, i32 %108)
  br label %cont

if_f:                                             ; preds = %1
  %109 = call i32 @"shared!geti"(i32 %80, i32 4)
  %110 = add i32 %109, 1
  %111 = sdiv i32 %110, 32
  %112 = mul i32 %111, 32
  %113 = add i32 %112, 32
  call void @"shared!seti"(i32 %80, i32 6, i32 %113)
  br label %cont

cont:                                             ; preds = %if_f, %if_t
  %114 = call i32 @"shared!geti"(i32 %80, i32 2)
  %115 = add i32 %114, 1
  call void @"systemi!Pushi"(i32 %115)
  call void @"shared!New"(i32 1, i32 0)
  %116 = load %Stack** @retvar
  %117 = load %Stack* %116
  %118 = call i32 @"systemi!ObjectRefPtr"(%Stack %117)
  call void @"shared!seto"(i32 %80, i32 7, i32 %118)
  %119 = call i32 @"shared!geti"(i32 %80, i32 2)
  call void @"systemi!Pushi"(i32 %119)
  call void @"shared!New"(i32 1, i32 0)
  %120 = load %Stack** @retvar
  %121 = load %Stack* %120
  %122 = call i32 @"systemi!ObjectRefPtr"(%Stack %121)
  call void @"shared!seto"(i32 %80, i32 8, i32 %122)
  call void @"systemi!Pushi"(i32 0)
  call void @"shared!New"(i32 2, i32 4)
  %123 = load %Stack** @retvar
  %124 = load %Stack* %123
  %125 = call i32 @"systemi!ObjectRefPtr"(%Stack %124)
  call void @"shared!seto"(i32 %80, i32 9, i32 %125)
  call void @"shared!geto"(i32 %80, i32 9, i32 2)
  %126 = load %Stack** @retvar
  %127 = load %Stack* %126
  %128 = load %Stack** @pstatic
  %129 = getelementptr %Stack* %128, i32 11
  store %Stack %127, %Stack* %129
  %130 = call i32 @"shared!geti"(i32 %80, i32 6)
  call void @"systemi!Pushi"(i32 %130)
  call void @"shared!NewArray"(i32 3, i32 1)
  %131 = load %Stack** @retvar
  %132 = load %Stack* %131
  %133 = call i32 @"systemi!ObjectRefPtr"(%Stack %132)
  call void @"shared!seto"(i32 %80, i32 10, i32 %133)
  %134 = call i32 @"shared!geti"(i32 %80, i32 6)
  %135 = call i32 @"shared!geti"(i32 %80, i32 2)
  %136 = mul i32 %134, %135
  %137 = mul i32 %136, 1000
  %138 = load %Stack** @pstatic
  %139 = getelementptr %Stack* %138, i32 12
  %140 = bitcast %Stack* %139 to i32*
  store i32 %137, i32* %140
  %141 = call i32 @"shared!geti"(i32 %80, i32 6)
  %142 = call i32 @"shared!geti"(i32 %80, i32 1)
  %143 = mul i32 %141, %142
  call void @"systemi!Pushi"(i32 %143)
  call void @"shared!NewArray"(i32 4, i32 1)
  %144 = load %Stack** @retvar
  %145 = load %Stack* %144
  %146 = call i32 @"systemi!ObjectRefPtr"(%Stack %145)
  call void @"shared!seto"(i32 %80, i32 11, i32 %146)
  %147 = load %Stack** @pstatic
  %148 = getelementptr %Stack* %147, i32 12
  %149 = bitcast %Stack* %148 to i32*
  %150 = load i32* %149
  call void @"systemi!Pushi"(i32 %150)
  call void @"shared!NewArray"(i32 5, i32 1)
  %151 = load %Stack** @retvar
  %152 = load %Stack* %151
  %153 = call i32 @"systemi!ObjectRefPtr"(%Stack %152)
  call void @"shared!seto"(i32 %80, i32 12, i32 %153)
  %154 = load %Stack** @pstatic
  %155 = getelementptr %Stack* %154, i32 12
  %156 = bitcast %Stack* %155 to i32*
  %157 = load i32* %156
  call void @"systemi!Pushi"(i32 %157)
  call void @"shared!NewArray"(i32 6, i32 1)
  %158 = load %Stack** @retvar
  %159 = load %Stack* %158
  %160 = call i32 @"systemi!ObjectRefPtr"(%Stack %159)
  call void @"shared!seto"(i32 %80, i32 13, i32 %160)
  %161 = call i32 @"shared!geti"(i32 %80, i32 6)
  %162 = mul i32 %161, 1000
  call void @"systemi!Pushi"(i32 %162)
  call void @"system!NewArray"(i32 7, i32 1)
  %163 = load %Stack** @retvar
  %164 = load %Stack* %163
  %165 = load %Stack** @pstatic
  %166 = getelementptr %Stack* %165, i32 13
  store %Stack %164, %Stack* %166
  %167 = load %Stack** @pstatic
  %168 = getelementptr %Stack* %167, i32 13
  %169 = load %Stack* %168
  %170 = call %Stack* @"systemi!FldAddr"(%Stack %169)
  store %Stack* %170, %Stack** %2
  call void @"string!LoadStringFromPool"(i32 4)
  %171 = load %Stack** @retvar
  %172 = load %Stack* %171
  call void @"systemi!Pusho"(%Stack %172)
  call void @"object!New"(i32 3, i32 0)
  %173 = load %Stack** @retvar
  %174 = load %Stack* %173
  %175 = load %Stack** @pstatic
  %176 = getelementptr %Stack* %175, i32 14
  store %Stack %174, %Stack* %176
  call void @"system!Invoke"(i32 4), !dbg !22
  %177 = load %Stack** @retvar
  %178 = bitcast %Stack* %177 to i32*
  %179 = load i32* %178
  %180 = load %Stack** @pstatic
  %181 = getelementptr %Stack* %180, i32 15
  %182 = bitcast %Stack* %181 to i32*
  store i32 %179, i32* %182
  call void @"system!Invoke"(i32 0), !dbg !23
  %183 = load %Stack** @pstatic
  %184 = getelementptr %Stack* %183, i32 16
  %185 = bitcast %Stack* %184 to i32*
  store i32 0, i32* %185
  %186 = load %Stack** @pstatic
  %187 = getelementptr %Stack* %186, i32 17
  %188 = bitcast %Stack* %187 to i32*
  store i32 0, i32* %188
  br label %cond

cond:                                             ; preds = %post, %cont
  %189 = load %Stack** @pstatic
  %190 = getelementptr %Stack* %189, i32 17
  %191 = bitcast %Stack* %190 to i32*
  %192 = load i32* %191
  %193 = call i32 @"shared!geti"(i32 %80, i32 1)
  %194 = icmp slt i32 %192, %193
  br i1 %194, label %for, label %conti

for:                                              ; preds = %cond
  %195 = load %Stack** @pstatic
  %196 = getelementptr %Stack* %195, i32 18
  %197 = bitcast %Stack* %196 to i32*
  store i32 0, i32* %197
  br label %cond1

post:                                             ; preds = %conti4
  %198 = load %Stack** @pstatic
  %199 = getelementptr %Stack* %198, i32 17
  %200 = bitcast %Stack* %199 to i32*
  %201 = load i32* %200
  %202 = add i32 %201, 1
  %203 = load %Stack** @pstatic
  %204 = getelementptr %Stack* %203, i32 17
  %205 = bitcast %Stack* %204 to i32*
  store i32 %202, i32* %205
  br label %cond

conti:                                            ; preds = %cond
  %206 = load %Stack** @pstatic
  %207 = getelementptr %Stack* %206, i32 2
  %208 = bitcast %Stack* %207 to i32*
  store i32 0, i32* %208
  br label %cond5

cond1:                                            ; preds = %post3, %for
  %209 = load %Stack** @pstatic
  %210 = getelementptr %Stack* %209, i32 18
  %211 = bitcast %Stack* %210 to i32*
  %212 = load i32* %211
  %213 = call i32 @"shared!geti"(i32 %80, i32 0)
  %214 = icmp slt i32 %212, %213
  br i1 %214, label %for2, label %conti4

for2:                                             ; preds = %cond1
  %215 = load %Stack** @pstatic
  %216 = getelementptr %Stack* %215, i32 16
  %217 = bitcast %Stack* %216 to i32*
  %218 = load i32* %217
  call void @"systemi!Pushi"(i32 %218)
  %219 = call %Stack @"system!NewDelegate"(i32 2)
  %220 = load %Stack** @retvar
  %221 = load %Stack* %220
  call void @"systemi!Pusho"(%Stack %221)
  %222 = load %Stack** @pstatic
  %223 = getelementptr %Stack* %222, i32 9
  %224 = load %Stack* %223
  %225 = load %Stack** @pstatic
  %226 = getelementptr %Stack* %225, i32 17
  %227 = bitcast %Stack* %226 to i32*
  %228 = load i32* %227
  %229 = call %Stack* @"systemi!ArrAddrSafe"(%Stack %224, i32 %228)
  %230 = getelementptr inbounds %Stack* %229, i32 %228
  %231 = load %Stack* %230
  call void @"systemi!Pusho"(%Stack %231)
  call void @"system!Call"(i32 0)
  %232 = load %Stack** @retvar
  %233 = load %Stack* %232
  %234 = load %Stack** @pstatic
  %235 = getelementptr %Stack* %234, i32 16
  %236 = bitcast %Stack* %235 to i32*
  %237 = load i32* %236
  %238 = add i32 %237, 1
  %239 = load %Stack** @pstatic
  %240 = getelementptr %Stack* %239, i32 16
  %241 = bitcast %Stack* %240 to i32*
  store i32 %238, i32* %241
  br label %post3

post3:                                            ; preds = %for2
  %242 = load %Stack** @pstatic
  %243 = getelementptr %Stack* %242, i32 18
  %244 = bitcast %Stack* %243 to i32*
  %245 = load i32* %244
  %246 = add i32 %245, 1
  %247 = load %Stack** @pstatic
  %248 = getelementptr %Stack* %247, i32 18
  %249 = bitcast %Stack* %248 to i32*
  store i32 %246, i32* %249
  br label %cond1

conti4:                                           ; preds = %cond1
  br label %post

cond5:                                            ; preds = %post7, %conti
  %250 = load %Stack** @pstatic
  %251 = getelementptr %Stack* %250, i32 2
  %252 = bitcast %Stack* %251 to i32*
  %253 = load i32* %252
  %254 = load %Stack** @pstatic
  %255 = getelementptr %Stack* %254, i32 0
  %256 = bitcast %Stack* %255 to i32*
  %257 = load i32* %256
  %258 = icmp slt i32 %253, %257
  br i1 %258, label %for6, label %conti8

for6:                                             ; preds = %cond5
  call void @"system!Invoke"(i32 0), !dbg !24
  call void @"systemi!Pushi"(i32 -1)
  call void @"shared!geto"(i32 %80, i32 7, i32 1)
  %259 = load %Stack** @retvar
  %260 = load %Stack* %259
  call void @"systemi!Pusho"(%Stack %260)
  call void @"system!Call"(i32 1)
  call void @"system!Invoke"(i32 4), !dbg !25
  %261 = load %Stack** @retvar
  %262 = bitcast %Stack* %261 to i32*
  %263 = load i32* %262
  %264 = load %Stack** @pstatic
  %265 = getelementptr %Stack* %264, i32 15
  %266 = bitcast %Stack* %265 to i32*
  %267 = load i32* %266
  %268 = sub i32 %263, %267
  %269 = load %Stack** @pstatic
  %270 = getelementptr %Stack* %269, i32 19
  %271 = bitcast %Stack* %270 to i32*
  store i32 %268, i32* %271
  call void @"string!LoadStringFromPool"(i32 5)
  %272 = load %Stack** @retvar
  %273 = load %Stack* %272
  call void @"systemi!Pusho"(%Stack %273)
  %274 = load %Stack** @pstatic
  %275 = getelementptr %Stack* %274, i32 19
  %276 = bitcast %Stack* %275 to i32*
  %277 = load i32* %276
  call void @"system!IntToStr"(i32 %277)
  %278 = load %Stack** @retvar
  %279 = load %Stack* %278
  call void @"systemi!Pusho"(%Stack %279)
  call void @"string!ChainString"()
  %280 = load %Stack** @retvar
  %281 = load %Stack* %280
  call void @"systemi!Pusho"(%Stack %281)
  call void @"system!Invoke"(i32 6), !dbg !26
  call void @"system!Invoke"(i32 4), !dbg !27
  %282 = load %Stack** @retvar
  %283 = bitcast %Stack* %282 to i32*
  %284 = load i32* %283
  %285 = load %Stack** @pstatic
  %286 = getelementptr %Stack* %285, i32 15
  %287 = bitcast %Stack* %286 to i32*
  store i32 %284, i32* %287
  br label %post7

post7:                                            ; preds = %for6
  %288 = load %Stack** @pstatic
  %289 = getelementptr %Stack* %288, i32 2
  %290 = bitcast %Stack* %289 to i32*
  %291 = load i32* %290
  %292 = add i32 %291, 1
  %293 = load %Stack** @pstatic
  %294 = getelementptr %Stack* %293, i32 2
  %295 = bitcast %Stack* %294 to i32*
  store i32 %292, i32* %295
  br label %cond5

conti8:                                           ; preds = %cond5
  call void @"string!LoadStringFromPool"(i32 6)
  %296 = load %Stack** @retvar
  %297 = load %Stack* %296
  call void @"systemi!Pusho"(%Stack %297)
  call void @"system!Invoke"(i32 6), !dbg !28
  br label %cond9

cond9:                                            ; preds = %post11, %conti8
  %298 = load %Stack** @pstatic
  %299 = getelementptr %Stack* %298, i32 2
  %300 = bitcast %Stack* %299 to i32*
  %301 = load i32* %300
  %302 = load %Stack** @pstatic
  %303 = getelementptr %Stack* %302, i32 0
  %304 = bitcast %Stack* %303 to i32*
  %305 = load i32* %304
  %306 = load %Stack** @pstatic
  %307 = getelementptr %Stack* %306, i32 1
  %308 = bitcast %Stack* %307 to i32*
  %309 = load i32* %308
  %310 = add i32 %305, %309
  %311 = icmp slt i32 %301, %310
  br i1 %311, label %for10, label %conti12

for10:                                            ; preds = %cond9
  call void @"system!Invoke"(i32 0), !dbg !29
  call void @"systemi!Pushi"(i32 -1)
  call void @"shared!geto"(i32 %80, i32 7, i32 1)
  %312 = load %Stack** @retvar
  %313 = load %Stack* %312
  call void @"systemi!Pusho"(%Stack %313)
  call void @"system!Call"(i32 1)
  call void @"system!Invoke"(i32 4), !dbg !30
  %314 = load %Stack** @retvar
  %315 = bitcast %Stack* %314 to i32*
  %316 = load i32* %315
  %317 = load %Stack** @pstatic
  %318 = getelementptr %Stack* %317, i32 15
  %319 = bitcast %Stack* %318 to i32*
  %320 = load i32* %319
  %321 = sub i32 %316, %320
  %322 = load %Stack** @pstatic
  %323 = getelementptr %Stack* %322, i32 19
  %324 = bitcast %Stack* %323 to i32*
  store i32 %321, i32* %324
  call void @"string!LoadStringFromPool"(i32 7)
  %325 = load %Stack** @retvar
  %326 = load %Stack* %325
  call void @"systemi!Pusho"(%Stack %326)
  %327 = load %Stack** @pstatic
  %328 = getelementptr %Stack* %327, i32 19
  %329 = bitcast %Stack* %328 to i32*
  %330 = load i32* %329
  call void @"system!IntToStr"(i32 %330)
  %331 = load %Stack** @retvar
  %332 = load %Stack* %331
  call void @"systemi!Pusho"(%Stack %332)
  call void @"string!ChainString"()
  %333 = load %Stack** @retvar
  %334 = load %Stack* %333
  call void @"systemi!Pusho"(%Stack %334)
  call void @"system!Invoke"(i32 6), !dbg !31
  call void @"system!Invoke"(i32 4), !dbg !32
  %335 = load %Stack** @retvar
  %336 = bitcast %Stack* %335 to i32*
  %337 = load i32* %336
  %338 = load %Stack** @pstatic
  %339 = getelementptr %Stack* %338, i32 15
  %340 = bitcast %Stack* %339 to i32*
  store i32 %337, i32* %340
  br label %post11

post11:                                           ; preds = %for10
  %341 = load %Stack** @pstatic
  %342 = getelementptr %Stack* %341, i32 2
  %343 = bitcast %Stack* %342 to i32*
  %344 = load i32* %343
  %345 = add i32 %344, 1
  %346 = load %Stack** @pstatic
  %347 = getelementptr %Stack* %346, i32 2
  %348 = bitcast %Stack* %347 to i32*
  store i32 %345, i32* %348
  br label %cond9

conti12:                                          ; preds = %cond9
  %349 = load %Stack** @pstatic
  %350 = getelementptr %Stack* %349, i32 11
  %351 = load %Stack* %350
  call void @"systemi!Pusho"(%Stack %351)
  call void @"system!Call"(i32 1)
  %352 = load %Stack** @retvar
  %353 = bitcast %Stack* %352 to i32*
  %354 = load i32* %353
  %355 = sitofp i32 %354 to double
  %356 = fmul double %355, 1.000000e+00
  %357 = fdiv double %356, 1.000000e+03
  %358 = call i32 @"shared!geti"(i32 %80, i32 2)
  %359 = sitofp i32 %358 to double
  %360 = fdiv double %357, %359
  call void @"system!DoubleToStr"(double %360)
  %361 = load %Stack** @retvar
  %362 = load %Stack* %361
  call void @"systemi!Pusho"(%Stack %362)
  call void @"system!Invoke"(i32 6), !dbg !33
  call void @"string!LoadStringFromPool"(i32 8)
  %363 = load %Stack** @retvar
  %364 = load %Stack* %363
  call void @"systemi!Pusho"(%Stack %364)
  call void @"system!Invoke"(i32 4), !dbg !34
  %365 = load %Stack** @retvar
  %366 = bitcast %Stack* %365 to i32*
  %367 = load i32* %366
  %368 = load %Stack** @pstatic
  %369 = getelementptr %Stack* %368, i32 3
  %370 = bitcast %Stack* %369 to i32*
  %371 = load i32* %370
  %372 = sub i32 %367, %371
  call void @"system!IntToStr"(i32 %372)
  %373 = load %Stack** @retvar
  %374 = load %Stack* %373
  call void @"systemi!Pusho"(%Stack %374)
  call void @"string!ChainString"()
  %375 = load %Stack** @retvar
  %376 = load %Stack* %375
  call void @"systemi!Pusho"(%Stack %376)
  call void @"system!Invoke"(i32 6), !dbg !34
  %377 = load %Stack** @pstatic
  %378 = getelementptr %Stack* %377, i32 14
  %379 = load %Stack* %378
  call void @"systemi!Pusho"(%Stack %379)
  call void @"system!Call"(i32 3)
  call void @"system!Invoke"(i32 7), !dbg !35
  %380 = load %Stack** @retvar
  %381 = load %Stack* %380
  ret void
}

declare i32 @"systemi!ObjectRefPtr"(%Stack)

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!11}

!0 = metadata !{i32 786449, metadata !1, i32 32769, metadata !"Birdee", i1 false, metadata !"", i32 0, metadata !2, metadata !2, metadata !3, metadata !2, metadata !2, metadata !""} ; [ DW_TAG_compile_unit ] [../../compiler/test/test.dkm] [lang 0x8001]
!1 = metadata !{metadata !"test.dkm", metadata !"../../compiler/test"}
!2 = metadata !{i32 0}
!3 = metadata !{metadata !4, metadata !7, metadata !8, metadata !9, metadata !10}
!4 = metadata !{i32 786478, metadata !1, metadata !5, metadata !"put_matrix", metadata !"put_matrix", metadata !"", i32 68, metadata !6, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%Stack*)* @put_matrix, null, null, metadata !2, i32 68} ; [ DW_TAG_subprogram ] [line 68] [local] [def] [put_matrix]
!5 = metadata !{i32 786473, metadata !1}          ; [ DW_TAG_file_type ] [../../compiler/test/test.dkm]
!6 = metadata !{i32 786453, i32 0, null, metadata !"", i32 0, i64 0, i64 0, i64 0, i32 0, null, null, i32 0, null, null, null} ; [ DW_TAG_subroutine_type ] [line 0, size 0, align 0, offset 0] [from ]
!7 = metadata !{i32 786478, metadata !1, metadata !5, metadata !"zero_gradient", metadata !"zero_gradient", metadata !"", i32 120, metadata !6, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%Stack*)* @zero_gradient, null, null, metadata !2, i32 120} ; [ DW_TAG_subprogram ] [line 120] [local] [def] [zero_gradient]
!8 = metadata !{i32 786478, metadata !1, metadata !5, metadata !"threadproc", metadata !"threadproc", metadata !"", i32 238, metadata !6, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%Stack*)* @threadproc, null, null, metadata !2, i32 238} ; [ DW_TAG_subprogram ] [line 238] [local] [def] [threadproc]
!9 = metadata !{i32 786478, metadata !1, metadata !5, metadata !"RemoteInitialize", metadata !"RemoteInitialize", metadata !"", i32 251, metadata !6, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%Stack*)* @RemoteInitialize, null, null, metadata !2, i32 251} ; [ DW_TAG_subprogram ] [line 251] [local] [def] [RemoteInitialize]
!10 = metadata !{i32 786478, metadata !1, metadata !5, metadata !"system!main", metadata !"system!main", metadata !"", i32 5, metadata !6, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%Stack*)* @"system!main", null, null, metadata !2, i32 5} ; [ DW_TAG_subprogram ] [line 5] [local] [def] [system!main]
!11 = metadata !{i32 2, metadata !"Debug Info Version", i32 1}
!12 = metadata !{i32 68, i32 0, metadata !4, null}
!13 = metadata !{i32 120, i32 0, metadata !7, null}
!14 = metadata !{i32 154, i32 0, metadata !8, null}
!15 = metadata !{i32 165, i32 0, metadata !8, null}
!16 = metadata !{i32 238, i32 0, metadata !8, null}
!17 = metadata !{i32 227, i32 0, metadata !8, null}
!18 = metadata !{i32 251, i32 0, metadata !9, null}
!19 = metadata !{i32 8, i32 0, metadata !10, null} ; [ DW_TAG_imported_declaration ]
!20 = metadata !{i32 14, i32 0, metadata !10, null}
!21 = metadata !{i32 16, i32 0, metadata !10, null}
!22 = metadata !{i32 69, i32 0, metadata !10, null}
!23 = metadata !{i32 70, i32 0, metadata !10, null}
!24 = metadata !{i32 81, i32 0, metadata !10, null}
!25 = metadata !{i32 85, i32 0, metadata !10, null}
!26 = metadata !{i32 86, i32 0, metadata !10, null}
!27 = metadata !{i32 87, i32 0, metadata !10, null}
!28 = metadata !{i32 90, i32 0, metadata !10, null}
!29 = metadata !{i32 92, i32 0, metadata !10, null}
!30 = metadata !{i32 95, i32 0, metadata !10, null}
!31 = metadata !{i32 96, i32 0, metadata !10, null}
!32 = metadata !{i32 97, i32 0, metadata !10, null}
!33 = metadata !{i32 100, i32 0, metadata !10, null}
!34 = metadata !{i32 101, i32 0, metadata !10, null}
!35 = metadata !{i32 103, i32 0, metadata !10, null}
