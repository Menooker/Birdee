State 257 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: initial_declaration
    2                 | translation_unit definition_or_statement

    3 initial_declaration: /* empty */
    4                    | require_list rename_list
    5                    | require_list
    6                    | rename_list
    7                    | initial_declaration lib_function

    8 require_list: require_declaration
    9             | require_list require_declaration

   10 require_declaration: REQUIRE package_name CR

   11 package_name: IDENTIFIER
   12             | package_name DOT IDENTIFIER

   13 rename_list: rename_declaration
   14            | rename_list rename_declaration

   15 rename_declaration: RENAME package_name IDENTIFIER CR

   16 definition_or_statement: function_definition
   17                        | class_definition
   18                        | statement
   19                        | delegate_definition
   20                        | enum_definition
   21                        | const_definition

   22 basic_type_specifier: VOID_T
   23                     | BOOLEAN_T
   24                     | INT_T
   25                     | DOUBLE_T
   26                     | STRING_T
   27                     | VARIENT_T
   28                     | NATIVE_POINTER_T
   29                     | DELEGATE

   30 identifier_type_specifier: IDENTIFIER

   31 array_type_specifier_sub: basic_type_specifier LB RB
   32                         | IDENTIFIER LB RB
   33                         | array_type_specifier LB RB
   34                         | template_type_specifier LB RB

   35 array_type_specifier: array_type_specifier_sub global

   36 template_type_specifier: IDENTIFIER LT type_list GT

   37 type_specifier: basic_type_specifier
   38               | array_type_specifier
   39               | identifier_type_specifier
   40               | template_type_specifier

   41 type_list: type_specifier
   42          | type_list COMMA type_specifier

   43 $@1: /* empty */

   44 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list END

   45 lib_function_declaration_list: /* empty */
   46                              | lib_function_declaration_list function_declaration
   47                              | lib_function_declaration_list class_definition

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   49                     | DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR
   50                     | DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   51                     | DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause CR

   52 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   53                    | FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock
   54                    | BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock
   55                    | BSUB IDENTIFIER LP apostrophe RP throws_clause myblock
   56                    | function_declaration

   57 parameter_list: IDENTIFIER AS type_specifier
   58               | parameter_list COMMA IDENTIFIER AS type_specifier

   59 argument_list: assignment_expression
   60              | argument_list COMMA assignment_expression

   61 statement_list: statement
   62               | statement_list statement

   63 expression: assignment_expression
   64           | expression COMMA assignment_expression

   65 assignment_expression: logical_or_expression
   66                      | primary_expression assignment_operator assignment_expression

   67 assignment_operator: ASSIGN_T
   68                    | ADD_ASSIGN_T
   69                    | SUB_ASSIGN_T
   70                    | ATM_ADD_ASSIGN_T
   71                    | ATM_SUB_ASSIGN_T
   72                    | MUL_ASSIGN_T
   73                    | DIV_ASSIGN_T
   74                    | MOD_ASSIGN_T

   75 logical_or_expression: logical_and_expression
   76                      | logical_or_expression LOGICAL_OR logical_and_expression

   77 logical_and_expression: equality_expression
   78                       | logical_and_expression LOGICAL_AND equality_expression

   79 equality_expression: relational_expression
   80                    | equality_expression EQ relational_expression
   81                    | equality_expression NE relational_expression

   82 relational_expression: additive_expression
   83                      | relational_expression GT additive_expression
   84                      | relational_expression GE additive_expression
   85                      | relational_expression LT additive_expression
   86                      | relational_expression LE additive_expression

   87 additive_expression: multiplicative_expression
   88                    | additive_expression ADD multiplicative_expression
   89                    | additive_expression SUB multiplicative_expression

   90 multiplicative_expression: unary_expression
   91                          | multiplicative_expression MUL unary_expression
   92                          | multiplicative_expression DIV unary_expression
   93                          | multiplicative_expression MOD unary_expression
   94                          | multiplicative_expression BIT_AND unary_expression
   95                          | multiplicative_expression BIT_OR unary_expression
   96                          | multiplicative_expression BIT_XOR unary_expression

   97 unary_expression: postfix_expression
   98                 | SUB unary_expression
   99                 | EXCLAMATION unary_expression
  100                 | BIT_NOT unary_expression

  101 postfix_expression: primary_expression
  102                   | primary_expression INCREMENT
  103                   | primary_expression DECREMENT
  104                   | primary_expression INSTANCEOF type_specifier

  105 primary_expression: primary_no_new_array
  106                   | array_creation
  107                   | IDENTIFIER
  108                   | AUTOVAR

  109 primary_no_new_array: primary_no_new_array LB expression RB
  110                     | IDENTIFIER LB expression RB
  111                     | IDENTIFIER LB expression COLON expression RB
  112                     | primary_no_new_array LB expression COLON expression RB
  113                     | primary_expression DOT IDENTIFIER
  114                     | primary_expression LP argument_list RP
  115                     | primary_expression LP RP
  116                     | LP expression RP
  117                     | primary_expression DOWN_CAST_BEGIN type_specifier DOWN_CAST_END
  118                     | INT_LITERAL
  119                     | DOUBLE_LITERAL
  120                     | STRING_LITERAL
  121                     | REGEXP_LITERAL
  122                     | TRUE_T
  123                     | FALSE_T
  124                     | NULL_T
  125                     | array_literal
  126                     | THIS_T
  127                     | SUPER_T
  128                     | NEW DELEGATE LP RP
  129                     | NEW IDENTIFIER LP RP
  130                     | NEW IDENTIFIER LP argument_list RP
  131                     | NEW IDENTIFIER DOT IDENTIFIER LP RP
  132                     | NEW IDENTIFIER DOT IDENTIFIER LP argument_list RP

  133 array_literal: LC expression_list RC
  134              | LC expression_list COMMA RC

  135 array_creation: NEW basic_type_specifier dimension_expression_list global
  136               | NEW basic_type_specifier dimension_expression_list dimension_list global
  137               | NEW identifier_type_specifier dimension_expression_list global
  138               | NEW identifier_type_specifier dimension_expression_list dimension_list global
  139               | NEW template_type_specifier dimension_expression_list global
  140               | NEW template_type_specifier dimension_expression_list dimension_list global

  141 dimension_expression_list: dimension_expression
  142                          | dimension_expression_list dimension_expression

  143 dimension_expression: LB expression RB

  144 dimension_list: LB RB
  145               | dimension_list LB RB

  146 expression_list: /* empty */
  147                | assignment_expression
  148                | expression_list COMMA assignment_expression

  149 statement: expression CR
  150          | if_statement
  151          | switch_statement
  152          | while_statement
  153          | for_statement
  154          | do_while_statement
  155          | foreach_statement
  156          | return_statement
  157          | break_statement
  158          | continue_statement
  159          | try_statement
  160          | throw_statement
  161          | declaration_statement
  162          | CR

  163 if_statement: IF expression THEN myblock
  164             | IF expression THEN myblock ELSE myblock
  165             | IF expression THEN myblock elsif_list
  166             | IF expression THEN myblock elsif_list ELSE myblock

  167 elsif_list: elsif
  168           | elsif_list elsif

  169 elsif: ELSIF expression THEN myblock

  170 label_opt: /* empty */
  171          | IDENTIFIER COLON

  172 switch_statement: SWITCH expression CR case_list default_opt

  173 case_list: one_case
  174          | case_list one_case

  175 one_case: CASE case_expression_list myblock

  176 default_opt: /* empty */
  177            | DEFAULT_T myblock

  178 case_expression_list: assignment_expression
  179                     | expression_list COMMA assignment_expression

  180 while_statement: label_opt WHILE expression myblock

  181 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock

  182 do_while_statement: label_opt DO_T block WHILE LP expression RP CR

  183 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP block

  184 expression_opt: /* empty */
  185               | expression

  186 return_statement: RETURN_T expression_opt CR

  187 identifier_opt: /* empty */
  188               | IDENTIFIER

  189 break_statement: BREAK identifier_opt CR

  190 continue_statement: CONTINUE identifier_opt CR

  191 try_statement: TRY myblock catch_list FINALLY myblock
  192              | TRY myblock FINALLY block
  193              | TRY myblock catch_list

  194 catch_list: catch_clause
  195           | catch_list catch_clause

  196 @2: /* empty */

  197 catch_clause: CATCH @2 type_specifier IDENTIFIER myblock

  198 throw_statement: THROW expression CR
  199                | THROW CR

  200 declaration_statement: DIM volatile IDENTIFIER AS shared type_specifier CR
  201                      | DIM volatile IDENTIFIER AS shared type_specifier ASSIGN_T expression CR
  202                      | FINAL IDENTIFIER AS type_specifier CR
  203                      | FINAL IDENTIFIER AS type_specifier ASSIGN_T expression CR

  204 @3: /* empty */

  205 block: LC @3 statement_list RC
  206      | LC RC

  207 template_def_list: IDENTIFIER
  208                  | template_def_list COMMA IDENTIFIER
  209                  | IDENTIFIER COLON identifier_type_specifier
  210                  | template_def_list COMMA IDENTIFIER COLON identifier_type_specifier

  211 template_list: LT template_def_list GT
  212              | /* empty */

  213 $@4: /* empty */

  214 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list END

  215 $@5: /* empty */

  216 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END

  217 $@6: /* empty */

  218 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@6 END

  219 $@7: /* empty */

  220 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 END

  221 class_or_member_modifier_list: class_or_member_modifier
  222                              | class_or_member_modifier_list class_or_member_modifier

  223 class_or_member_modifier: access_modifier
  224                         | VIRTUAL_T
  225                         | OVERRIDE_T
  226                         | ABSTRACT_T

  227 class_or_interface: CLASS_T
  228                   | INTERFACE_T

  229 extends: /* empty */
  230        | COLON extends_list

  231 extends_list: IDENTIFIER
  232             | extends_list COMMA IDENTIFIER

  233 member_declaration_list: member_declaration
  234                        | member_declaration_list member_declaration

  235 member_declaration: method_member
  236                   | field_member

  237 method_member: method_function_definition
  238              | class_or_member_modifier_list method_function_definition
  239              | constructor_definition
  240              | class_or_member_modifier_list constructor_definition

  241 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock
  242                           | FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause myblock
  243                           | DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  244                           | DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR
  245                           | BSUB IDENTIFIER LP parameter_list RP throws_clause myblock
  246                           | BSUB IDENTIFIER LP RP throws_clause myblock
  247                           | DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause CR
  248                           | DECLARE BSUB IDENTIFIER LP RP throws_clause CR

  249 apostrophe: /* empty */
  250           | COMMA APOSTROPHE

  251 throws_clause: /* empty */
  252              | THROWS exception_list

  253 exception_list: IDENTIFIER
  254               | exception_list COMMA IDENTIFIER

  255 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause myblock
  256                       | CONSTRUCTOR IDENTIFIER LP RP throws_clause myblock
  257                       | DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR
  258                       | DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause CR

  259 access_modifier: PUBLIC_T
  260                | PRIVATE_T

  261 initializer_opt: /* empty */
  262                | ASSIGN_T expression

  263 field_member: DIM IDENTIFIER AS type_specifier initializer_opt CR
  264             | class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR
  265             | FINAL IDENTIFIER AS type_specifier initializer_opt CR
  266             | class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt CR
  267             | FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR

  268 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  269                    | DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

  270 enum_definition: ENUM IDENTIFIER LC enumerator_list RC
  271                | ENUM IDENTIFIER LC enumerator_list COMMA RC

  272 enumerator_list: IDENTIFIER
  273                | enumerator_list COMMA IDENTIFIER

  274 const_definition: CONST IDENTIFIER ASSIGN_T expression CR
  275                 | CONST type_specifier IDENTIFIER CR

  276 shared: /* empty */
  277       | SHARED

  278 volatile: /* empty */
  279         | VOLATILE

  280 global: /* empty */
  281       | GLOBAL

  282 unsafe: /* empty */
  283       | UNSAFE CR
  284       | SAFE CR

  285 @8: /* empty */

  286 myblock: CR unsafe @8 statement_list END
  287        | CR END


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 118
DOUBLE_LITERAL (259) 119
STRING_LITERAL (260) 120
REGEXP_LITERAL (261) 121
IDENTIFIER (262) 11 12 15 30 32 36 44 48 49 50 51 52 53 54 55 57 58
    107 110 111 113 129 130 131 132 171 183 188 197 200 201 202 203
    207 208 209 210 214 216 218 220 231 232 241 242 243 244 245 246
    247 248 253 254 255 256 257 258 263 264 265 266 267 268 269 270
    271 272 273 274 275
AUTOVAR (263) 108
IF (264) 163 164 165 166
ELSE (265) 164 166
ELSIF (266) 169
SWITCH (267) 172
CASE (268) 175
DEFAULT_T (269) 177
WHILE (270) 180 182
DO_T (271) 182
FOR (272) 181
FOREACH (273) 183
RETURN_T (274) 186
BREAK (275) 189
CONTINUE (276) 190
NULL_T (277) 124
LP (278) 48 49 50 51 52 53 54 55 114 115 116 128 129 130 131 132 182
    183 241 242 243 244 245 246 247 248 255 256 257 258 268 269
RP (279) 48 49 50 51 52 53 54 55 114 115 116 128 129 130 131 132 182
    183 241 242 243 244 245 246 247 248 255 256 257 258 268 269
LC (280) 133 134 205 206 270 271
RC (281) 133 134 205 206 270 271
LB (282) 31 32 33 34 109 110 111 112 143 144 145
RB (283) 31 32 33 34 109 110 111 112 143 144 145
SEMICOLON (284) 181
COLON (285) 111 112 171 183 209 210 230
COMMA (286) 42 58 60 64 134 148 179 208 210 232 250 254 271 273
ASSIGN_T (287) 67 201 203 262 274
LOGICAL_AND (288) 78
LOGICAL_OR (289) 76
EQ (290) 80
NE (291) 81
GT (292) 36 83 211
GE (293) 84
LT (294) 36 85 211
LE (295) 86
ADD (296) 88
SUB (297) 89 98
MUL (298) 91
DIV (299) 92
MOD (300) 93
BIT_AND (301) 94
BIT_OR (302) 95
BIT_XOR (303) 96
BIT_NOT (304) 100
TRUE_T (305) 122
FALSE_T (306) 123
EXCLAMATION (307) 99
DOT (308) 12 113 131 132
ADD_ASSIGN_T (309) 68
SUB_ASSIGN_T (310) 69
MUL_ASSIGN_T (311) 72
DIV_ASSIGN_T (312) 73
MOD_ASSIGN_T (313) 74
INCREMENT (314) 102
DECREMENT (315) 103
TRY (316) 191 192 193
CATCH (317) 197
FINALLY (318) 191 192
THROW (319) 198 199
THROWS (320) 252
VOID_T (321) 22
BOOLEAN_T (322) 23
INT_T (323) 24
DOUBLE_T (324) 25
STRING_T (325) 26
VARIENT_T (326) 27
NATIVE_POINTER_T (327) 28
NEW (328) 128 129 130 131 132 135 136 137 138 139 140
REQUIRE (329) 10
RENAME (330) 15
CLASS_T (331) 227
INTERFACE_T (332) 228
PUBLIC_T (333) 259
PRIVATE_T (334) 260
VIRTUAL_T (335) 224
OVERRIDE_T (336) 225
ABSTRACT_T (337) 226
THIS_T (338) 126
SUPER_T (339) 127
CONSTRUCTOR (340) 255 256 257 258
INSTANCEOF (341) 104
DOWN_CAST_BEGIN (342) 117
DOWN_CAST_END (343) 117
DELEGATE (344) 29 128 268 269
FINAL (345) 202 203 265 266 267
ENUM (346) 270 271
CONST (347) 274 275
FUNCTION (348) 48 49 52 53 241 242 243 244
AS (349) 48 49 52 53 57 58 200 201 202 203 241 242 243 244 263 264
    265 266 267 268 269
THEN (350) 163 164 165 166 169
DIM (351) 200 201 263
END (352) 44 214 216 218 220 286 287
CR (353) 10 15 44 48 49 50 51 149 162 172 182 186 189 190 198 199 200
    201 202 203 214 216 218 220 243 244 247 248 257 258 263 264 265
    266 267 268 269 274 275 283 284 286 287
DECLARE (354) 48 49 50 51 243 244 247 248 257 258
BSUB (355) 50 51 54 55 245 246 247 248
APOSTROPHE (356) 250
LIB (357) 44
UNSAFE (358) 283
SAFE (359) 284
SHARED (360) 277
GLOBAL (361) 281
VOLATILE (362) 279
ATM_ADD_ASSIGN_T (363) 70
ATM_SUB_ASSIGN_T (364) 71


Nonterminals, with rules where they appear

$accept (110)
    on left: 0
translation_unit (111)
    on left: 1 2, on right: 0 2
initial_declaration (112)
    on left: 3 4 5 6 7, on right: 1 7
require_list (113)
    on left: 8 9, on right: 4 5 9
require_declaration (114)
    on left: 10, on right: 8 9
package_name (115)
    on left: 11 12, on right: 10 12 15
rename_list (116)
    on left: 13 14, on right: 4 6 14
rename_declaration (117)
    on left: 15, on right: 13 14
definition_or_statement (118)
    on left: 16 17 18 19 20 21, on right: 2
basic_type_specifier (119)
    on left: 22 23 24 25 26 27 28 29, on right: 31 37 135 136
identifier_type_specifier (120)
    on left: 30, on right: 39 137 138 209 210
array_type_specifier_sub (121)
    on left: 31 32 33 34, on right: 35
array_type_specifier (122)
    on left: 35, on right: 33 38
template_type_specifier (123)
    on left: 36, on right: 34 40 139 140
type_specifier (124)
    on left: 37 38 39 40, on right: 41 42 48 49 52 53 57 58 104 117
    197 200 201 202 203 241 242 243 244 263 264 265 266 267 268 269
    275
type_list (125)
    on left: 41 42, on right: 36 42
lib_function (126)
    on left: 44, on right: 7
$@1 (127)
    on left: 43, on right: 44
lib_function_declaration_list (128)
    on left: 45 46 47, on right: 44 46 47
function_declaration (129)
    on left: 48 49 50 51, on right: 46 56
function_definition (130)
    on left: 52 53 54 55 56, on right: 16
parameter_list (131)
    on left: 57 58, on right: 48 50 52 54 58 241 243 245 247 255 257
    268
argument_list (132)
    on left: 59 60, on right: 60 114 130 132
statement_list (133)
    on left: 61 62, on right: 62 205 286
expression (134)
    on left: 63 64, on right: 64 109 110 111 112 116 143 149 163 164
    165 166 169 172 180 182 183 185 198 201 203 262 274
assignment_expression (135)
    on left: 65 66, on right: 59 60 63 64 66 147 148 178 179
assignment_operator (136)
    on left: 67 68 69 70 71 72 73 74, on right: 66
logical_or_expression (137)
    on left: 75 76, on right: 65 76
logical_and_expression (138)
    on left: 77 78, on right: 75 76 78
equality_expression (139)
    on left: 79 80 81, on right: 77 78 80 81
relational_expression (140)
    on left: 82 83 84 85 86, on right: 79 80 81 83 84 85 86
additive_expression (141)
    on left: 87 88 89, on right: 82 83 84 85 86 88 89
multiplicative_expression (142)
    on left: 90 91 92 93 94 95 96, on right: 87 88 89 91 92 93 94 95
    96
unary_expression (143)
    on left: 97 98 99 100, on right: 90 91 92 93 94 95 96 98 99 100
postfix_expression (144)
    on left: 101 102 103 104, on right: 97
primary_expression (145)
    on left: 105 106 107 108, on right: 66 101 102 103 104 113 114
    115 117
primary_no_new_array (146)
    on left: 109 110 111 112 113 114 115 116 117 118 119 120 121 122
    123 124 125 126 127 128 129 130 131 132, on right: 105 109 112
array_literal (147)
    on left: 133 134, on right: 125
array_creation (148)
    on left: 135 136 137 138 139 140, on right: 106
dimension_expression_list (149)
    on left: 141 142, on right: 135 136 137 138 139 140 142
dimension_expression (150)
    on left: 143, on right: 141 142
dimension_list (151)
    on left: 144 145, on right: 136 138 140 145
expression_list (152)
    on left: 146 147 148, on right: 133 134 148 179
statement (153)
    on left: 149 150 151 152 153 154 155 156 157 158 159 160 161 162,
    on right: 18 61 62
if_statement (154)
    on left: 163 164 165 166, on right: 150
elsif_list (155)
    on left: 167 168, on right: 165 166 168
elsif (156)
    on left: 169, on right: 167 168
label_opt (157)
    on left: 170 171, on right: 180 181 182 183
switch_statement (158)
    on left: 172, on right: 151
case_list (159)
    on left: 173 174, on right: 172 174
one_case (160)
    on left: 175, on right: 173 174
default_opt (161)
    on left: 176 177, on right: 172
case_expression_list (162)
    on left: 178 179, on right: 175
while_statement (163)
    on left: 180, on right: 152
for_statement (164)
    on left: 181, on right: 153
do_while_statement (165)
    on left: 182, on right: 154
foreach_statement (166)
    on left: 183, on right: 155
expression_opt (167)
    on left: 184 185, on right: 181 186
return_statement (168)
    on left: 186, on right: 156
identifier_opt (169)
    on left: 187 188, on right: 189 190
break_statement (170)
    on left: 189, on right: 157
continue_statement (171)
    on left: 190, on right: 158
try_statement (172)
    on left: 191 192 193, on right: 159
catch_list (173)
    on left: 194 195, on right: 191 193 195
catch_clause (174)
    on left: 197, on right: 194 195
@2 (175)
    on left: 196, on right: 197
throw_statement (176)
    on left: 198 199, on right: 160
declaration_statement (177)
    on left: 200 201 202 203, on right: 161
block (178)
    on left: 205 206, on right: 182 183 192
@3 (179)
    on left: 204, on right: 205
template_def_list (180)
    on left: 207 208 209 210, on right: 208 210 211
template_list (181)
    on left: 211 212, on right: 214 216 218 220
class_definition (182)
    on left: 214 216 218 220, on right: 17 47
$@4 (183)
    on left: 213, on right: 214
$@5 (184)
    on left: 215, on right: 216
$@6 (185)
    on left: 217, on right: 218
$@7 (186)
    on left: 219, on right: 220
class_or_member_modifier_list (187)
    on left: 221 222, on right: 216 220 222 238 240 264 266 267
class_or_member_modifier (188)
    on left: 223 224 225 226, on right: 221 222
class_or_interface (189)
    on left: 227 228, on right: 214 216 218 220
extends (190)
    on left: 229 230, on right: 214 216 218 220
extends_list (191)
    on left: 231 232, on right: 230 232
member_declaration_list (192)
    on left: 233 234, on right: 214 216 234
member_declaration (193)
    on left: 235 236, on right: 233 234
method_member (194)
    on left: 237 238 239 240, on right: 235
method_function_definition (195)
    on left: 241 242 243 244 245 246 247 248, on right: 237 238
apostrophe (196)
    on left: 249 250, on right: 48 49 50 51 52 53 54 55 268 269
throws_clause (197)
    on left: 251 252, on right: 48 49 50 51 52 53 54 55 241 242 243
    244 245 246 247 248 255 256 257 258 268 269
exception_list (198)
    on left: 253 254, on right: 252 254
constructor_definition (199)
    on left: 255 256 257 258, on right: 239 240
access_modifier (200)
    on left: 259 260, on right: 223
initializer_opt (201)
    on left: 261 262, on right: 263 264 265 266 267
field_member (202)
    on left: 263 264 265 266 267, on right: 236
delegate_definition (203)
    on left: 268 269, on right: 19
enum_definition (204)
    on left: 270 271, on right: 20
enumerator_list (205)
    on left: 272 273, on right: 270 271 273
const_definition (206)
    on left: 274 275, on right: 21
shared (207)
    on left: 276 277, on right: 200 201 214 216 218 220
volatile (208)
    on left: 278 279, on right: 200 201
global (209)
    on left: 280 281, on right: 35 135 136 137 138 139 140
unsafe (210)
    on left: 282 283 284, on right: 286
myblock (211)
    on left: 286 287, on right: 52 53 54 55 163 164 165 166 169 175
    177 180 181 191 192 193 197 241 242 245 246 255 256
@8 (212)
    on left: 285, on right: 286


state 0

    0 $accept: . translation_unit $end

    REQUIRE  shift, and go to state 1
    RENAME   shift, and go to state 2

    $default  reduce using rule 3 (initial_declaration)

    translation_unit     go to state 3
    initial_declaration  go to state 4
    require_list         go to state 5
    require_declaration  go to state 6
    rename_list          go to state 7
    rename_declaration   go to state 8


state 1

   10 require_declaration: REQUIRE . package_name CR

    IDENTIFIER  shift, and go to state 9

    package_name  go to state 10


state 2

   15 rename_declaration: RENAME . package_name IDENTIFIER CR

    IDENTIFIER  shift, and go to state 9

    package_name  go to state 11


state 3

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . definition_or_statement

    $end            shift, and go to state 12
    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    DELEGATE        shift, and go to state 37
    FINAL           shift, and go to state 38
    ENUM            shift, and go to state 39
    CONST           shift, and go to state 40
    FUNCTION        shift, and go to state 41
    DIM             shift, and go to state 42
    CR              shift, and go to state 43
    DECLARE         shift, and go to state 44
    BSUB            shift, and go to state 45
    SHARED          shift, and go to state 46

    WHILE     reduce using rule 170 (label_opt)
    DO_T      reduce using rule 170 (label_opt)
    FOR       reduce using rule 170 (label_opt)
    FOREACH   reduce using rule 170 (label_opt)
    $default  reduce using rule 276 (shared)

    definition_or_statement    go to state 47
    function_declaration       go to state 48
    function_definition        go to state 49
    expression                 go to state 50
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    statement                  go to state 64
    if_statement               go to state 65
    label_opt                  go to state 66
    switch_statement           go to state 67
    while_statement            go to state 68
    for_statement              go to state 69
    do_while_statement         go to state 70
    foreach_statement          go to state 71
    return_statement           go to state 72
    break_statement            go to state 73
    continue_statement         go to state 74
    try_statement              go to state 75
    throw_statement            go to state 76
    declaration_statement      go to state 77
    class_definition           go to state 78
    delegate_definition        go to state 79
    enum_definition            go to state 80
    const_definition           go to state 81
    shared                     go to state 82


state 4

    1 translation_unit: initial_declaration .
    7 initial_declaration: initial_declaration . lib_function

    LIB  shift, and go to state 83

    $default  reduce using rule 1 (translation_unit)

    lib_function  go to state 84


state 5

    4 initial_declaration: require_list . rename_list
    5                    | require_list .
    9 require_list: require_list . require_declaration

    REQUIRE  shift, and go to state 1
    RENAME   shift, and go to state 2

    $default  reduce using rule 5 (initial_declaration)

    require_declaration  go to state 85
    rename_list          go to state 86
    rename_declaration   go to state 8


state 6

    8 require_list: require_declaration .

    $default  reduce using rule 8 (require_list)


state 7

    6 initial_declaration: rename_list .
   14 rename_list: rename_list . rename_declaration

    RENAME  shift, and go to state 2

    $default  reduce using rule 6 (initial_declaration)

    rename_declaration  go to state 87


state 8

   13 rename_list: rename_declaration .

    $default  reduce using rule 13 (rename_list)


state 9

   11 package_name: IDENTIFIER .

    $default  reduce using rule 11 (package_name)


state 10

   10 require_declaration: REQUIRE package_name . CR
   12 package_name: package_name . DOT IDENTIFIER

    DOT  shift, and go to state 88
    CR   shift, and go to state 89


state 11

   12 package_name: package_name . DOT IDENTIFIER
   15 rename_declaration: RENAME package_name . IDENTIFIER CR

    IDENTIFIER  shift, and go to state 90
    DOT         shift, and go to state 88


state 12

    0 $accept: translation_unit $end .

    $default  accept


state 13

  118 primary_no_new_array: INT_LITERAL .

    $default  reduce using rule 118 (primary_no_new_array)


state 14

  119 primary_no_new_array: DOUBLE_LITERAL .

    $default  reduce using rule 119 (primary_no_new_array)


state 15

  120 primary_no_new_array: STRING_LITERAL .

    $default  reduce using rule 120 (primary_no_new_array)


state 16

  121 primary_no_new_array: REGEXP_LITERAL .

    $default  reduce using rule 121 (primary_no_new_array)


state 17

  107 primary_expression: IDENTIFIER .
  110 primary_no_new_array: IDENTIFIER . LB expression RB
  111                     | IDENTIFIER . LB expression COLON expression RB
  171 label_opt: IDENTIFIER . COLON

    LB     shift, and go to state 91
    COLON  shift, and go to state 92

    $default  reduce using rule 107 (primary_expression)


state 18

  108 primary_expression: AUTOVAR .

    $default  reduce using rule 108 (primary_expression)


state 19

  163 if_statement: IF . expression THEN myblock
  164             | IF . expression THEN myblock ELSE myblock
  165             | IF . expression THEN myblock elsif_list
  166             | IF . expression THEN myblock elsif_list ELSE myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 94
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 20

  172 switch_statement: SWITCH . expression CR case_list default_opt

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 95
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 21

  186 return_statement: RETURN_T . expression_opt CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 184 (expression_opt)

    expression                 go to state 96
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_opt             go to state 97


state 22

  189 break_statement: BREAK . identifier_opt CR

    IDENTIFIER  shift, and go to state 98

    $default  reduce using rule 187 (identifier_opt)

    identifier_opt  go to state 99


state 23

  190 continue_statement: CONTINUE . identifier_opt CR

    IDENTIFIER  shift, and go to state 98

    $default  reduce using rule 187 (identifier_opt)

    identifier_opt  go to state 100


state 24

  124 primary_no_new_array: NULL_T .

    $default  reduce using rule 124 (primary_no_new_array)


state 25

  116 primary_no_new_array: LP . expression RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 101
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 26

  133 array_literal: LC . expression_list RC
  134              | LC . expression_list COMMA RC

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 146 (expression_list)

    assignment_expression      go to state 102
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_list            go to state 103


state 27

   98 unary_expression: SUB . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 104
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 28

  100 unary_expression: BIT_NOT . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 106
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 29

  122 primary_no_new_array: TRUE_T .

    $default  reduce using rule 122 (primary_no_new_array)


state 30

  123 primary_no_new_array: FALSE_T .

    $default  reduce using rule 123 (primary_no_new_array)


state 31

   99 unary_expression: EXCLAMATION . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 107
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 32

  191 try_statement: TRY . myblock catch_list FINALLY myblock
  192              | TRY . myblock FINALLY block
  193              | TRY . myblock catch_list

    CR  shift, and go to state 108

    myblock  go to state 109


state 33

  198 throw_statement: THROW . expression CR
  199                | THROW . CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    CR              shift, and go to state 110

    expression                 go to state 111
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 34

  128 primary_no_new_array: NEW . DELEGATE LP RP
  129                     | NEW . IDENTIFIER LP RP
  130                     | NEW . IDENTIFIER LP argument_list RP
  131                     | NEW . IDENTIFIER DOT IDENTIFIER LP RP
  132                     | NEW . IDENTIFIER DOT IDENTIFIER LP argument_list RP
  135 array_creation: NEW . basic_type_specifier dimension_expression_list global
  136               | NEW . basic_type_specifier dimension_expression_list dimension_list global
  137               | NEW . identifier_type_specifier dimension_expression_list global
  138               | NEW . identifier_type_specifier dimension_expression_list dimension_list global
  139               | NEW . template_type_specifier dimension_expression_list global
  140               | NEW . template_type_specifier dimension_expression_list dimension_list global

    IDENTIFIER        shift, and go to state 112
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 120

    basic_type_specifier       go to state 121
    identifier_type_specifier  go to state 122
    template_type_specifier    go to state 123


state 35

  126 primary_no_new_array: THIS_T .

    $default  reduce using rule 126 (primary_no_new_array)


state 36

  127 primary_no_new_array: SUPER_T .

    $default  reduce using rule 127 (primary_no_new_array)


state 37

  268 delegate_definition: DELEGATE . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  269                    | DELEGATE . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 124


state 38

  202 declaration_statement: FINAL . IDENTIFIER AS type_specifier CR
  203                      | FINAL . IDENTIFIER AS type_specifier ASSIGN_T expression CR

    IDENTIFIER  shift, and go to state 125


state 39

  270 enum_definition: ENUM . IDENTIFIER LC enumerator_list RC
  271                | ENUM . IDENTIFIER LC enumerator_list COMMA RC

    IDENTIFIER  shift, and go to state 126


state 40

  274 const_definition: CONST . IDENTIFIER ASSIGN_T expression CR
  275                 | CONST . type_specifier IDENTIFIER CR

    IDENTIFIER        shift, and go to state 127
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 134


state 41

   52 function_definition: FUNCTION . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   53                    | FUNCTION . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 135


state 42

  200 declaration_statement: DIM . volatile IDENTIFIER AS shared type_specifier CR
  201                      | DIM . volatile IDENTIFIER AS shared type_specifier ASSIGN_T expression CR

    VOLATILE  shift, and go to state 136

    $default  reduce using rule 278 (volatile)

    volatile  go to state 137


state 43

  162 statement: CR .

    $default  reduce using rule 162 (statement)


state 44

   48 function_declaration: DECLARE . FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   49                     | DECLARE . FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR
   50                     | DECLARE . BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   51                     | DECLARE . BSUB IDENTIFIER LP apostrophe RP throws_clause CR

    FUNCTION  shift, and go to state 138
    BSUB      shift, and go to state 139


state 45

   54 function_definition: BSUB . IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock
   55                    | BSUB . IDENTIFIER LP apostrophe RP throws_clause myblock

    IDENTIFIER  shift, and go to state 140


state 46

  277 shared: SHARED .

    $default  reduce using rule 277 (shared)


state 47

    2 translation_unit: translation_unit definition_or_statement .

    $default  reduce using rule 2 (translation_unit)


state 48

   56 function_definition: function_declaration .

    $default  reduce using rule 56 (function_definition)


state 49

   16 definition_or_statement: function_definition .

    $default  reduce using rule 16 (definition_or_statement)


state 50

   64 expression: expression . COMMA assignment_expression
  149 statement: expression . CR

    COMMA  shift, and go to state 141
    CR     shift, and go to state 142


state 51

   63 expression: assignment_expression .

    $default  reduce using rule 63 (expression)


state 52

   65 assignment_expression: logical_or_expression .
   76 logical_or_expression: logical_or_expression . LOGICAL_OR logical_and_expression

    LOGICAL_OR  shift, and go to state 143

    $default  reduce using rule 65 (assignment_expression)


state 53

   75 logical_or_expression: logical_and_expression .
   78 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 144

    $default  reduce using rule 75 (logical_or_expression)


state 54

   77 logical_and_expression: equality_expression .
   80 equality_expression: equality_expression . EQ relational_expression
   81                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 145
    NE  shift, and go to state 146

    $default  reduce using rule 77 (logical_and_expression)


state 55

   79 equality_expression: relational_expression .
   83 relational_expression: relational_expression . GT additive_expression
   84                      | relational_expression . GE additive_expression
   85                      | relational_expression . LT additive_expression
   86                      | relational_expression . LE additive_expression

    GT  shift, and go to state 147
    GE  shift, and go to state 148
    LT  shift, and go to state 149
    LE  shift, and go to state 150

    $default  reduce using rule 79 (equality_expression)


state 56

   82 relational_expression: additive_expression .
   88 additive_expression: additive_expression . ADD multiplicative_expression
   89                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 151
    SUB  shift, and go to state 152

    $default  reduce using rule 82 (relational_expression)


state 57

   87 additive_expression: multiplicative_expression .
   91 multiplicative_expression: multiplicative_expression . MUL unary_expression
   92                          | multiplicative_expression . DIV unary_expression
   93                          | multiplicative_expression . MOD unary_expression
   94                          | multiplicative_expression . BIT_AND unary_expression
   95                          | multiplicative_expression . BIT_OR unary_expression
   96                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 153
    DIV      shift, and go to state 154
    MOD      shift, and go to state 155
    BIT_AND  shift, and go to state 156
    BIT_OR   shift, and go to state 157
    BIT_XOR  shift, and go to state 158

    $default  reduce using rule 87 (additive_expression)


state 58

   90 multiplicative_expression: unary_expression .

    $default  reduce using rule 90 (multiplicative_expression)


state 59

   97 unary_expression: postfix_expression .

    $default  reduce using rule 97 (unary_expression)


state 60

   66 assignment_expression: primary_expression . assignment_operator assignment_expression
  101 postfix_expression: primary_expression .
  102                   | primary_expression . INCREMENT
  103                   | primary_expression . DECREMENT
  104                   | primary_expression . INSTANCEOF type_specifier
  113 primary_no_new_array: primary_expression . DOT IDENTIFIER
  114                     | primary_expression . LP argument_list RP
  115                     | primary_expression . LP RP
  117                     | primary_expression . DOWN_CAST_BEGIN type_specifier DOWN_CAST_END

    LP                shift, and go to state 159
    ASSIGN_T          shift, and go to state 160
    DOT               shift, and go to state 161
    ADD_ASSIGN_T      shift, and go to state 162
    SUB_ASSIGN_T      shift, and go to state 163
    MUL_ASSIGN_T      shift, and go to state 164
    DIV_ASSIGN_T      shift, and go to state 165
    MOD_ASSIGN_T      shift, and go to state 166
    INCREMENT         shift, and go to state 167
    DECREMENT         shift, and go to state 168
    INSTANCEOF        shift, and go to state 169
    DOWN_CAST_BEGIN   shift, and go to state 170
    ATM_ADD_ASSIGN_T  shift, and go to state 171
    ATM_SUB_ASSIGN_T  shift, and go to state 172

    $default  reduce using rule 101 (postfix_expression)

    assignment_operator  go to state 173


state 61

  105 primary_expression: primary_no_new_array .
  109 primary_no_new_array: primary_no_new_array . LB expression RB
  112                     | primary_no_new_array . LB expression COLON expression RB

    LB  shift, and go to state 174

    $default  reduce using rule 105 (primary_expression)


state 62

  125 primary_no_new_array: array_literal .

    $default  reduce using rule 125 (primary_no_new_array)


state 63

  106 primary_expression: array_creation .

    $default  reduce using rule 106 (primary_expression)


state 64

   18 definition_or_statement: statement .

    $default  reduce using rule 18 (definition_or_statement)


state 65

  150 statement: if_statement .

    $default  reduce using rule 150 (statement)


state 66

  180 while_statement: label_opt . WHILE expression myblock
  181 for_statement: label_opt . FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock
  182 do_while_statement: label_opt . DO_T block WHILE LP expression RP CR
  183 foreach_statement: label_opt . FOREACH LP IDENTIFIER COLON expression RP block

    WHILE    shift, and go to state 175
    DO_T     shift, and go to state 176
    FOR      shift, and go to state 177
    FOREACH  shift, and go to state 178


state 67

  151 statement: switch_statement .

    $default  reduce using rule 151 (statement)


state 68

  152 statement: while_statement .

    $default  reduce using rule 152 (statement)


state 69

  153 statement: for_statement .

    $default  reduce using rule 153 (statement)


state 70

  154 statement: do_while_statement .

    $default  reduce using rule 154 (statement)


state 71

  155 statement: foreach_statement .

    $default  reduce using rule 155 (statement)


state 72

  156 statement: return_statement .

    $default  reduce using rule 156 (statement)


state 73

  157 statement: break_statement .

    $default  reduce using rule 157 (statement)


state 74

  158 statement: continue_statement .

    $default  reduce using rule 158 (statement)


state 75

  159 statement: try_statement .

    $default  reduce using rule 159 (statement)


state 76

  160 statement: throw_statement .

    $default  reduce using rule 160 (statement)


state 77

  161 statement: declaration_statement .

    $default  reduce using rule 161 (statement)


state 78

   17 definition_or_statement: class_definition .

    $default  reduce using rule 17 (definition_or_statement)


state 79

   19 definition_or_statement: delegate_definition .

    $default  reduce using rule 19 (definition_or_statement)


state 80

   20 definition_or_statement: enum_definition .

    $default  reduce using rule 20 (definition_or_statement)


state 81

   21 definition_or_statement: const_definition .

    $default  reduce using rule 21 (definition_or_statement)


state 82

  214 class_definition: shared . class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list END
  216                 | shared . class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END
  218                 | shared . class_or_interface IDENTIFIER template_list extends CR $@6 END
  220                 | shared . class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 END

    CLASS_T      shift, and go to state 179
    INTERFACE_T  shift, and go to state 180
    PUBLIC_T     shift, and go to state 181
    PRIVATE_T    shift, and go to state 182
    VIRTUAL_T    shift, and go to state 183
    OVERRIDE_T   shift, and go to state 184
    ABSTRACT_T   shift, and go to state 185

    class_or_member_modifier_list  go to state 186
    class_or_member_modifier       go to state 187
    class_or_interface             go to state 188
    access_modifier                go to state 189


state 83

   44 lib_function: LIB . IDENTIFIER $@1 CR lib_function_declaration_list END

    IDENTIFIER  shift, and go to state 190


state 84

    7 initial_declaration: initial_declaration lib_function .

    $default  reduce using rule 7 (initial_declaration)


state 85

    9 require_list: require_list require_declaration .

    $default  reduce using rule 9 (require_list)


state 86

    4 initial_declaration: require_list rename_list .
   14 rename_list: rename_list . rename_declaration

    RENAME  shift, and go to state 2

    $default  reduce using rule 4 (initial_declaration)

    rename_declaration  go to state 87


state 87

   14 rename_list: rename_list rename_declaration .

    $default  reduce using rule 14 (rename_list)


state 88

   12 package_name: package_name DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 191


state 89

   10 require_declaration: REQUIRE package_name CR .

    $default  reduce using rule 10 (require_declaration)


state 90

   15 rename_declaration: RENAME package_name IDENTIFIER . CR

    CR  shift, and go to state 192


state 91

  110 primary_no_new_array: IDENTIFIER LB . expression RB
  111                     | IDENTIFIER LB . expression COLON expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 193
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 92

  171 label_opt: IDENTIFIER COLON .

    $default  reduce using rule 171 (label_opt)


state 93

  107 primary_expression: IDENTIFIER .
  110 primary_no_new_array: IDENTIFIER . LB expression RB
  111                     | IDENTIFIER . LB expression COLON expression RB

    LB  shift, and go to state 91

    $default  reduce using rule 107 (primary_expression)


state 94

   64 expression: expression . COMMA assignment_expression
  163 if_statement: IF expression . THEN myblock
  164             | IF expression . THEN myblock ELSE myblock
  165             | IF expression . THEN myblock elsif_list
  166             | IF expression . THEN myblock elsif_list ELSE myblock

    COMMA  shift, and go to state 141
    THEN   shift, and go to state 194


state 95

   64 expression: expression . COMMA assignment_expression
  172 switch_statement: SWITCH expression . CR case_list default_opt

    COMMA  shift, and go to state 141
    CR     shift, and go to state 195


state 96

   64 expression: expression . COMMA assignment_expression
  185 expression_opt: expression .

    COMMA  shift, and go to state 141

    $default  reduce using rule 185 (expression_opt)


state 97

  186 return_statement: RETURN_T expression_opt . CR

    CR  shift, and go to state 196


state 98

  188 identifier_opt: IDENTIFIER .

    $default  reduce using rule 188 (identifier_opt)


state 99

  189 break_statement: BREAK identifier_opt . CR

    CR  shift, and go to state 197


state 100

  190 continue_statement: CONTINUE identifier_opt . CR

    CR  shift, and go to state 198


state 101

   64 expression: expression . COMMA assignment_expression
  116 primary_no_new_array: LP expression . RP

    RP     shift, and go to state 199
    COMMA  shift, and go to state 141


state 102

  147 expression_list: assignment_expression .

    $default  reduce using rule 147 (expression_list)


state 103

  133 array_literal: LC expression_list . RC
  134              | LC expression_list . COMMA RC
  148 expression_list: expression_list . COMMA assignment_expression

    RC     shift, and go to state 200
    COMMA  shift, and go to state 201


state 104

   98 unary_expression: SUB unary_expression .

    $default  reduce using rule 98 (unary_expression)


state 105

  101 postfix_expression: primary_expression .
  102                   | primary_expression . INCREMENT
  103                   | primary_expression . DECREMENT
  104                   | primary_expression . INSTANCEOF type_specifier
  113 primary_no_new_array: primary_expression . DOT IDENTIFIER
  114                     | primary_expression . LP argument_list RP
  115                     | primary_expression . LP RP
  117                     | primary_expression . DOWN_CAST_BEGIN type_specifier DOWN_CAST_END

    LP               shift, and go to state 159
    DOT              shift, and go to state 161
    INCREMENT        shift, and go to state 167
    DECREMENT        shift, and go to state 168
    INSTANCEOF       shift, and go to state 169
    DOWN_CAST_BEGIN  shift, and go to state 170

    $default  reduce using rule 101 (postfix_expression)


state 106

  100 unary_expression: BIT_NOT unary_expression .

    $default  reduce using rule 100 (unary_expression)


state 107

   99 unary_expression: EXCLAMATION unary_expression .

    $default  reduce using rule 99 (unary_expression)


state 108

  286 myblock: CR . unsafe @8 statement_list END
  287        | CR . END

    END     shift, and go to state 202
    UNSAFE  shift, and go to state 203
    SAFE    shift, and go to state 204

    $default  reduce using rule 282 (unsafe)

    unsafe  go to state 205


state 109

  191 try_statement: TRY myblock . catch_list FINALLY myblock
  192              | TRY myblock . FINALLY block
  193              | TRY myblock . catch_list

    CATCH    shift, and go to state 206
    FINALLY  shift, and go to state 207

    catch_list    go to state 208
    catch_clause  go to state 209


state 110

  199 throw_statement: THROW CR .

    $default  reduce using rule 199 (throw_statement)


state 111

   64 expression: expression . COMMA assignment_expression
  198 throw_statement: THROW expression . CR

    COMMA  shift, and go to state 141
    CR     shift, and go to state 210


state 112

   30 identifier_type_specifier: IDENTIFIER .
   36 template_type_specifier: IDENTIFIER . LT type_list GT
  129 primary_no_new_array: NEW IDENTIFIER . LP RP
  130                     | NEW IDENTIFIER . LP argument_list RP
  131                     | NEW IDENTIFIER . DOT IDENTIFIER LP RP
  132                     | NEW IDENTIFIER . DOT IDENTIFIER LP argument_list RP

    LP   shift, and go to state 211
    LT   shift, and go to state 212
    DOT  shift, and go to state 213

    $default  reduce using rule 30 (identifier_type_specifier)


state 113

   22 basic_type_specifier: VOID_T .

    $default  reduce using rule 22 (basic_type_specifier)


state 114

   23 basic_type_specifier: BOOLEAN_T .

    $default  reduce using rule 23 (basic_type_specifier)


state 115

   24 basic_type_specifier: INT_T .

    $default  reduce using rule 24 (basic_type_specifier)


state 116

   25 basic_type_specifier: DOUBLE_T .

    $default  reduce using rule 25 (basic_type_specifier)


state 117

   26 basic_type_specifier: STRING_T .

    $default  reduce using rule 26 (basic_type_specifier)


state 118

   27 basic_type_specifier: VARIENT_T .

    $default  reduce using rule 27 (basic_type_specifier)


state 119

   28 basic_type_specifier: NATIVE_POINTER_T .

    $default  reduce using rule 28 (basic_type_specifier)


state 120

   29 basic_type_specifier: DELEGATE .
  128 primary_no_new_array: NEW DELEGATE . LP RP

    LP  shift, and go to state 214

    $default  reduce using rule 29 (basic_type_specifier)


state 121

  135 array_creation: NEW basic_type_specifier . dimension_expression_list global
  136               | NEW basic_type_specifier . dimension_expression_list dimension_list global

    LB  shift, and go to state 215

    dimension_expression_list  go to state 216
    dimension_expression       go to state 217


state 122

  137 array_creation: NEW identifier_type_specifier . dimension_expression_list global
  138               | NEW identifier_type_specifier . dimension_expression_list dimension_list global

    LB  shift, and go to state 215

    dimension_expression_list  go to state 218
    dimension_expression       go to state 217


state 123

  139 array_creation: NEW template_type_specifier . dimension_expression_list global
  140               | NEW template_type_specifier . dimension_expression_list dimension_list global

    LB  shift, and go to state 215

    dimension_expression_list  go to state 219
    dimension_expression       go to state 217


state 124

  268 delegate_definition: DELEGATE IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  269                    | DELEGATE IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause CR

    LP  shift, and go to state 220


state 125

  202 declaration_statement: FINAL IDENTIFIER . AS type_specifier CR
  203                      | FINAL IDENTIFIER . AS type_specifier ASSIGN_T expression CR

    AS  shift, and go to state 221


state 126

  270 enum_definition: ENUM IDENTIFIER . LC enumerator_list RC
  271                | ENUM IDENTIFIER . LC enumerator_list COMMA RC

    LC  shift, and go to state 222


state 127

   30 identifier_type_specifier: IDENTIFIER .
   32 array_type_specifier_sub: IDENTIFIER . LB RB
   36 template_type_specifier: IDENTIFIER . LT type_list GT
  274 const_definition: CONST IDENTIFIER . ASSIGN_T expression CR

    LB        shift, and go to state 223
    ASSIGN_T  shift, and go to state 224
    LT        shift, and go to state 212

    $default  reduce using rule 30 (identifier_type_specifier)


state 128

   29 basic_type_specifier: DELEGATE .

    $default  reduce using rule 29 (basic_type_specifier)


state 129

   31 array_type_specifier_sub: basic_type_specifier . LB RB
   37 type_specifier: basic_type_specifier .

    LB  shift, and go to state 225

    $default  reduce using rule 37 (type_specifier)


state 130

   39 type_specifier: identifier_type_specifier .

    $default  reduce using rule 39 (type_specifier)


state 131

   35 array_type_specifier: array_type_specifier_sub . global

    GLOBAL  shift, and go to state 226

    $default  reduce using rule 280 (global)

    global  go to state 227


state 132

   33 array_type_specifier_sub: array_type_specifier . LB RB
   38 type_specifier: array_type_specifier .

    LB  shift, and go to state 228

    $default  reduce using rule 38 (type_specifier)


state 133

   34 array_type_specifier_sub: template_type_specifier . LB RB
   40 type_specifier: template_type_specifier .

    LB  shift, and go to state 229

    $default  reduce using rule 40 (type_specifier)


state 134

  275 const_definition: CONST type_specifier . IDENTIFIER CR

    IDENTIFIER  shift, and go to state 230


state 135

   52 function_definition: FUNCTION IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   53                    | FUNCTION IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause myblock

    LP  shift, and go to state 231


state 136

  279 volatile: VOLATILE .

    $default  reduce using rule 279 (volatile)


state 137

  200 declaration_statement: DIM volatile . IDENTIFIER AS shared type_specifier CR
  201                      | DIM volatile . IDENTIFIER AS shared type_specifier ASSIGN_T expression CR

    IDENTIFIER  shift, and go to state 232


state 138

   48 function_declaration: DECLARE FUNCTION . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   49                     | DECLARE FUNCTION . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 233


state 139

   50 function_declaration: DECLARE BSUB . IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   51                     | DECLARE BSUB . IDENTIFIER LP apostrophe RP throws_clause CR

    IDENTIFIER  shift, and go to state 234


state 140

   54 function_definition: BSUB IDENTIFIER . LP parameter_list apostrophe RP throws_clause myblock
   55                    | BSUB IDENTIFIER . LP apostrophe RP throws_clause myblock

    LP  shift, and go to state 235


state 141

   64 expression: expression COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    assignment_expression      go to state 236
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 142

  149 statement: expression CR .

    $default  reduce using rule 149 (statement)


state 143

   76 logical_or_expression: logical_or_expression LOGICAL_OR . logical_and_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    logical_and_expression     go to state 237
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 144

   78 logical_and_expression: logical_and_expression LOGICAL_AND . equality_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    equality_expression        go to state 238
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 145

   80 equality_expression: equality_expression EQ . relational_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    relational_expression      go to state 239
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 146

   81 equality_expression: equality_expression NE . relational_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    relational_expression      go to state 240
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 147

   83 relational_expression: relational_expression GT . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    additive_expression        go to state 241
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 148

   84 relational_expression: relational_expression GE . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    additive_expression        go to state 242
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 149

   85 relational_expression: relational_expression LT . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    additive_expression        go to state 243
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 150

   86 relational_expression: relational_expression LE . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    additive_expression        go to state 244
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 151

   88 additive_expression: additive_expression ADD . multiplicative_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    multiplicative_expression  go to state 245
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 152

   89 additive_expression: additive_expression SUB . multiplicative_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    multiplicative_expression  go to state 246
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 153

   91 multiplicative_expression: multiplicative_expression MUL . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 247
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 154

   92 multiplicative_expression: multiplicative_expression DIV . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 248
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 155

   93 multiplicative_expression: multiplicative_expression MOD . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 249
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 156

   94 multiplicative_expression: multiplicative_expression BIT_AND . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 250
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 157

   95 multiplicative_expression: multiplicative_expression BIT_OR . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 251
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 158

   96 multiplicative_expression: multiplicative_expression BIT_XOR . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 252
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 159

  114 primary_no_new_array: primary_expression LP . argument_list RP
  115                     | primary_expression LP . RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    RP              shift, and go to state 253
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    argument_list              go to state 254
    assignment_expression      go to state 255
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 160

   67 assignment_operator: ASSIGN_T .

    $default  reduce using rule 67 (assignment_operator)


state 161

  113 primary_no_new_array: primary_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 256


state 162

   68 assignment_operator: ADD_ASSIGN_T .

    $default  reduce using rule 68 (assignment_operator)


state 163

   69 assignment_operator: SUB_ASSIGN_T .

    $default  reduce using rule 69 (assignment_operator)


state 164

   72 assignment_operator: MUL_ASSIGN_T .

    $default  reduce using rule 72 (assignment_operator)


state 165

   73 assignment_operator: DIV_ASSIGN_T .

    $default  reduce using rule 73 (assignment_operator)


state 166

   74 assignment_operator: MOD_ASSIGN_T .

    $default  reduce using rule 74 (assignment_operator)


state 167

  102 postfix_expression: primary_expression INCREMENT .

    $default  reduce using rule 102 (postfix_expression)


state 168

  103 postfix_expression: primary_expression DECREMENT .

    $default  reduce using rule 103 (postfix_expression)


state 169

  104 postfix_expression: primary_expression INSTANCEOF . type_specifier

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 258


state 170

  117 primary_no_new_array: primary_expression DOWN_CAST_BEGIN . type_specifier DOWN_CAST_END

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 259


state 171

   70 assignment_operator: ATM_ADD_ASSIGN_T .

    $default  reduce using rule 70 (assignment_operator)


state 172

   71 assignment_operator: ATM_SUB_ASSIGN_T .

    $default  reduce using rule 71 (assignment_operator)


state 173

   66 assignment_expression: primary_expression assignment_operator . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    assignment_expression      go to state 260
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 174

  109 primary_no_new_array: primary_no_new_array LB . expression RB
  112                     | primary_no_new_array LB . expression COLON expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 261
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 175

  180 while_statement: label_opt WHILE . expression myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 262
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 176

  182 do_while_statement: label_opt DO_T . block WHILE LP expression RP CR

    LC  shift, and go to state 263

    block  go to state 264


state 177

  181 for_statement: label_opt FOR . expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 184 (expression_opt)

    expression                 go to state 96
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_opt             go to state 265


state 178

  183 foreach_statement: label_opt FOREACH . LP IDENTIFIER COLON expression RP block

    LP  shift, and go to state 266


state 179

  227 class_or_interface: CLASS_T .

    $default  reduce using rule 227 (class_or_interface)


state 180

  228 class_or_interface: INTERFACE_T .

    $default  reduce using rule 228 (class_or_interface)


state 181

  259 access_modifier: PUBLIC_T .

    $default  reduce using rule 259 (access_modifier)


state 182

  260 access_modifier: PRIVATE_T .

    $default  reduce using rule 260 (access_modifier)


state 183

  224 class_or_member_modifier: VIRTUAL_T .

    $default  reduce using rule 224 (class_or_member_modifier)


state 184

  225 class_or_member_modifier: OVERRIDE_T .

    $default  reduce using rule 225 (class_or_member_modifier)


state 185

  226 class_or_member_modifier: ABSTRACT_T .

    $default  reduce using rule 226 (class_or_member_modifier)


state 186

  216 class_definition: shared class_or_member_modifier_list . class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END
  220                 | shared class_or_member_modifier_list . class_or_interface IDENTIFIER template_list extends CR $@7 END
  222 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier

    CLASS_T      shift, and go to state 179
    INTERFACE_T  shift, and go to state 180
    PUBLIC_T     shift, and go to state 181
    PRIVATE_T    shift, and go to state 182
    VIRTUAL_T    shift, and go to state 183
    OVERRIDE_T   shift, and go to state 184
    ABSTRACT_T   shift, and go to state 185

    class_or_member_modifier  go to state 267
    class_or_interface        go to state 268
    access_modifier           go to state 189


state 187

  221 class_or_member_modifier_list: class_or_member_modifier .

    $default  reduce using rule 221 (class_or_member_modifier_list)


state 188

  214 class_definition: shared class_or_interface . IDENTIFIER template_list extends CR $@4 member_declaration_list END
  218                 | shared class_or_interface . IDENTIFIER template_list extends CR $@6 END

    IDENTIFIER  shift, and go to state 269


state 189

  223 class_or_member_modifier: access_modifier .

    $default  reduce using rule 223 (class_or_member_modifier)


state 190

   44 lib_function: LIB IDENTIFIER . $@1 CR lib_function_declaration_list END

    $default  reduce using rule 43 ($@1)

    $@1  go to state 270


state 191

   12 package_name: package_name DOT IDENTIFIER .

    $default  reduce using rule 12 (package_name)


state 192

   15 rename_declaration: RENAME package_name IDENTIFIER CR .

    $default  reduce using rule 15 (rename_declaration)


state 193

   64 expression: expression . COMMA assignment_expression
  110 primary_no_new_array: IDENTIFIER LB expression . RB
  111                     | IDENTIFIER LB expression . COLON expression RB

    RB     shift, and go to state 271
    COLON  shift, and go to state 272
    COMMA  shift, and go to state 141


state 194

  163 if_statement: IF expression THEN . myblock
  164             | IF expression THEN . myblock ELSE myblock
  165             | IF expression THEN . myblock elsif_list
  166             | IF expression THEN . myblock elsif_list ELSE myblock

    CR  shift, and go to state 108

    myblock  go to state 273


state 195

  172 switch_statement: SWITCH expression CR . case_list default_opt

    CASE  shift, and go to state 274

    case_list  go to state 275
    one_case   go to state 276


state 196

  186 return_statement: RETURN_T expression_opt CR .

    $default  reduce using rule 186 (return_statement)


state 197

  189 break_statement: BREAK identifier_opt CR .

    $default  reduce using rule 189 (break_statement)


state 198

  190 continue_statement: CONTINUE identifier_opt CR .

    $default  reduce using rule 190 (continue_statement)


state 199

  116 primary_no_new_array: LP expression RP .

    $default  reduce using rule 116 (primary_no_new_array)


state 200

  133 array_literal: LC expression_list RC .

    $default  reduce using rule 133 (array_literal)


state 201

  134 array_literal: LC expression_list COMMA . RC
  148 expression_list: expression_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    RC              shift, and go to state 277
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    assignment_expression      go to state 278
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 202

  287 myblock: CR END .

    $default  reduce using rule 287 (myblock)


state 203

  283 unsafe: UNSAFE . CR

    CR  shift, and go to state 279


state 204

  284 unsafe: SAFE . CR

    CR  shift, and go to state 280


state 205

  286 myblock: CR unsafe . @8 statement_list END

    $default  reduce using rule 285 (@8)

    @8  go to state 281


state 206

  197 catch_clause: CATCH . @2 type_specifier IDENTIFIER myblock

    $default  reduce using rule 196 (@2)

    @2  go to state 282


state 207

  192 try_statement: TRY myblock FINALLY . block

    LC  shift, and go to state 263

    block  go to state 283


state 208

  191 try_statement: TRY myblock catch_list . FINALLY myblock
  193              | TRY myblock catch_list .
  195 catch_list: catch_list . catch_clause

    CATCH    shift, and go to state 206
    FINALLY  shift, and go to state 284

    $default  reduce using rule 193 (try_statement)

    catch_clause  go to state 285


state 209

  194 catch_list: catch_clause .

    $default  reduce using rule 194 (catch_list)


state 210

  198 throw_statement: THROW expression CR .

    $default  reduce using rule 198 (throw_statement)


state 211

  129 primary_no_new_array: NEW IDENTIFIER LP . RP
  130                     | NEW IDENTIFIER LP . argument_list RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    RP              shift, and go to state 286
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    argument_list              go to state 287
    assignment_expression      go to state 255
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 212

   36 template_type_specifier: IDENTIFIER LT . type_list GT

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 288
    type_list                  go to state 289


state 213

  131 primary_no_new_array: NEW IDENTIFIER DOT . IDENTIFIER LP RP
  132                     | NEW IDENTIFIER DOT . IDENTIFIER LP argument_list RP

    IDENTIFIER  shift, and go to state 290


state 214

  128 primary_no_new_array: NEW DELEGATE LP . RP

    RP  shift, and go to state 291


state 215

  143 dimension_expression: LB . expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 292
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 216

  135 array_creation: NEW basic_type_specifier dimension_expression_list . global
  136               | NEW basic_type_specifier dimension_expression_list . dimension_list global
  142 dimension_expression_list: dimension_expression_list . dimension_expression

    LB      shift, and go to state 293
    GLOBAL  shift, and go to state 226

    $default  reduce using rule 280 (global)

    dimension_expression  go to state 294
    dimension_list        go to state 295
    global                go to state 296


state 217

  141 dimension_expression_list: dimension_expression .

    $default  reduce using rule 141 (dimension_expression_list)


state 218

  137 array_creation: NEW identifier_type_specifier dimension_expression_list . global
  138               | NEW identifier_type_specifier dimension_expression_list . dimension_list global
  142 dimension_expression_list: dimension_expression_list . dimension_expression

    LB      shift, and go to state 293
    GLOBAL  shift, and go to state 226

    $default  reduce using rule 280 (global)

    dimension_expression  go to state 294
    dimension_list        go to state 297
    global                go to state 298


state 219

  139 array_creation: NEW template_type_specifier dimension_expression_list . global
  140               | NEW template_type_specifier dimension_expression_list . dimension_list global
  142 dimension_expression_list: dimension_expression_list . dimension_expression

    LB      shift, and go to state 293
    GLOBAL  shift, and go to state 226

    $default  reduce using rule 280 (global)

    dimension_expression  go to state 294
    dimension_list        go to state 299
    global                go to state 300


state 220

  268 delegate_definition: DELEGATE IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause CR
  269                    | DELEGATE IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 301
    COMMA       shift, and go to state 302

    $default  reduce using rule 249 (apostrophe)

    parameter_list  go to state 303
    apostrophe      go to state 304


state 221

  202 declaration_statement: FINAL IDENTIFIER AS . type_specifier CR
  203                      | FINAL IDENTIFIER AS . type_specifier ASSIGN_T expression CR

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 305


state 222

  270 enum_definition: ENUM IDENTIFIER LC . enumerator_list RC
  271                | ENUM IDENTIFIER LC . enumerator_list COMMA RC

    IDENTIFIER  shift, and go to state 306

    enumerator_list  go to state 307


state 223

   32 array_type_specifier_sub: IDENTIFIER LB . RB

    RB  shift, and go to state 308


state 224

  274 const_definition: CONST IDENTIFIER ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 309
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 225

   31 array_type_specifier_sub: basic_type_specifier LB . RB

    RB  shift, and go to state 310


state 226

  281 global: GLOBAL .

    $default  reduce using rule 281 (global)


state 227

   35 array_type_specifier: array_type_specifier_sub global .

    $default  reduce using rule 35 (array_type_specifier)


state 228

   33 array_type_specifier_sub: array_type_specifier LB . RB

    RB  shift, and go to state 311


state 229

   34 array_type_specifier_sub: template_type_specifier LB . RB

    RB  shift, and go to state 312


state 230

  275 const_definition: CONST type_specifier IDENTIFIER . CR

    CR  shift, and go to state 313


state 231

   52 function_definition: FUNCTION IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause myblock
   53                    | FUNCTION IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 301
    COMMA       shift, and go to state 302

    $default  reduce using rule 249 (apostrophe)

    parameter_list  go to state 314
    apostrophe      go to state 315


state 232

  200 declaration_statement: DIM volatile IDENTIFIER . AS shared type_specifier CR
  201                      | DIM volatile IDENTIFIER . AS shared type_specifier ASSIGN_T expression CR

    AS  shift, and go to state 316


state 233

   48 function_declaration: DECLARE FUNCTION IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   49                     | DECLARE FUNCTION IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause CR

    LP  shift, and go to state 317


state 234

   50 function_declaration: DECLARE BSUB IDENTIFIER . LP parameter_list apostrophe RP throws_clause CR
   51                     | DECLARE BSUB IDENTIFIER . LP apostrophe RP throws_clause CR

    LP  shift, and go to state 318


state 235

   54 function_definition: BSUB IDENTIFIER LP . parameter_list apostrophe RP throws_clause myblock
   55                    | BSUB IDENTIFIER LP . apostrophe RP throws_clause myblock

    IDENTIFIER  shift, and go to state 301
    COMMA       shift, and go to state 302

    $default  reduce using rule 249 (apostrophe)

    parameter_list  go to state 319
    apostrophe      go to state 320


state 236

   64 expression: expression COMMA assignment_expression .

    $default  reduce using rule 64 (expression)


state 237

   76 logical_or_expression: logical_or_expression LOGICAL_OR logical_and_expression .
   78 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 144

    $default  reduce using rule 76 (logical_or_expression)


state 238

   78 logical_and_expression: logical_and_expression LOGICAL_AND equality_expression .
   80 equality_expression: equality_expression . EQ relational_expression
   81                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 145
    NE  shift, and go to state 146

    $default  reduce using rule 78 (logical_and_expression)


state 239

   80 equality_expression: equality_expression EQ relational_expression .
   83 relational_expression: relational_expression . GT additive_expression
   84                      | relational_expression . GE additive_expression
   85                      | relational_expression . LT additive_expression
   86                      | relational_expression . LE additive_expression

    GT  shift, and go to state 147
    GE  shift, and go to state 148
    LT  shift, and go to state 149
    LE  shift, and go to state 150

    $default  reduce using rule 80 (equality_expression)


state 240

   81 equality_expression: equality_expression NE relational_expression .
   83 relational_expression: relational_expression . GT additive_expression
   84                      | relational_expression . GE additive_expression
   85                      | relational_expression . LT additive_expression
   86                      | relational_expression . LE additive_expression

    GT  shift, and go to state 147
    GE  shift, and go to state 148
    LT  shift, and go to state 149
    LE  shift, and go to state 150

    $default  reduce using rule 81 (equality_expression)


state 241

   83 relational_expression: relational_expression GT additive_expression .
   88 additive_expression: additive_expression . ADD multiplicative_expression
   89                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 151
    SUB  shift, and go to state 152

    $default  reduce using rule 83 (relational_expression)


state 242

   84 relational_expression: relational_expression GE additive_expression .
   88 additive_expression: additive_expression . ADD multiplicative_expression
   89                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 151
    SUB  shift, and go to state 152

    $default  reduce using rule 84 (relational_expression)


state 243

   85 relational_expression: relational_expression LT additive_expression .
   88 additive_expression: additive_expression . ADD multiplicative_expression
   89                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 151
    SUB  shift, and go to state 152

    $default  reduce using rule 85 (relational_expression)


state 244

   86 relational_expression: relational_expression LE additive_expression .
   88 additive_expression: additive_expression . ADD multiplicative_expression
   89                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 151
    SUB  shift, and go to state 152

    $default  reduce using rule 86 (relational_expression)


state 245

   88 additive_expression: additive_expression ADD multiplicative_expression .
   91 multiplicative_expression: multiplicative_expression . MUL unary_expression
   92                          | multiplicative_expression . DIV unary_expression
   93                          | multiplicative_expression . MOD unary_expression
   94                          | multiplicative_expression . BIT_AND unary_expression
   95                          | multiplicative_expression . BIT_OR unary_expression
   96                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 153
    DIV      shift, and go to state 154
    MOD      shift, and go to state 155
    BIT_AND  shift, and go to state 156
    BIT_OR   shift, and go to state 157
    BIT_XOR  shift, and go to state 158

    $default  reduce using rule 88 (additive_expression)


state 246

   89 additive_expression: additive_expression SUB multiplicative_expression .
   91 multiplicative_expression: multiplicative_expression . MUL unary_expression
   92                          | multiplicative_expression . DIV unary_expression
   93                          | multiplicative_expression . MOD unary_expression
   94                          | multiplicative_expression . BIT_AND unary_expression
   95                          | multiplicative_expression . BIT_OR unary_expression
   96                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 153
    DIV      shift, and go to state 154
    MOD      shift, and go to state 155
    BIT_AND  shift, and go to state 156
    BIT_OR   shift, and go to state 157
    BIT_XOR  shift, and go to state 158

    $default  reduce using rule 89 (additive_expression)


state 247

   91 multiplicative_expression: multiplicative_expression MUL unary_expression .

    $default  reduce using rule 91 (multiplicative_expression)


state 248

   92 multiplicative_expression: multiplicative_expression DIV unary_expression .

    $default  reduce using rule 92 (multiplicative_expression)


state 249

   93 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 93 (multiplicative_expression)


state 250

   94 multiplicative_expression: multiplicative_expression BIT_AND unary_expression .

    $default  reduce using rule 94 (multiplicative_expression)


state 251

   95 multiplicative_expression: multiplicative_expression BIT_OR unary_expression .

    $default  reduce using rule 95 (multiplicative_expression)


state 252

   96 multiplicative_expression: multiplicative_expression BIT_XOR unary_expression .

    $default  reduce using rule 96 (multiplicative_expression)


state 253

  115 primary_no_new_array: primary_expression LP RP .

    $default  reduce using rule 115 (primary_no_new_array)


state 254

   60 argument_list: argument_list . COMMA assignment_expression
  114 primary_no_new_array: primary_expression LP argument_list . RP

    RP     shift, and go to state 321
    COMMA  shift, and go to state 322


state 255

   59 argument_list: assignment_expression .

    $default  reduce using rule 59 (argument_list)


state 256

  113 primary_no_new_array: primary_expression DOT IDENTIFIER .

    $default  reduce using rule 113 (primary_no_new_array)


state 257

   30 identifier_type_specifier: IDENTIFIER .
   32 array_type_specifier_sub: IDENTIFIER . LB RB
   36 template_type_specifier: IDENTIFIER . LT type_list GT

    LB  shift, and go to state 223
    LT  shift, and go to state 212

    LT        [reduce using rule 30 (identifier_type_specifier)]
    $default  reduce using rule 30 (identifier_type_specifier)


state 258

  104 postfix_expression: primary_expression INSTANCEOF type_specifier .

    $default  reduce using rule 104 (postfix_expression)


state 259

  117 primary_no_new_array: primary_expression DOWN_CAST_BEGIN type_specifier . DOWN_CAST_END

    DOWN_CAST_END  shift, and go to state 323


state 260

   66 assignment_expression: primary_expression assignment_operator assignment_expression .

    $default  reduce using rule 66 (assignment_expression)


state 261

   64 expression: expression . COMMA assignment_expression
  109 primary_no_new_array: primary_no_new_array LB expression . RB
  112                     | primary_no_new_array LB expression . COLON expression RB

    RB     shift, and go to state 324
    COLON  shift, and go to state 325
    COMMA  shift, and go to state 141


state 262

   64 expression: expression . COMMA assignment_expression
  180 while_statement: label_opt WHILE expression . myblock

    COMMA  shift, and go to state 141
    CR     shift, and go to state 108

    myblock  go to state 326


state 263

  205 block: LC . @3 statement_list RC
  206      | LC . RC

    RC  shift, and go to state 327

    $default  reduce using rule 204 (@3)

    @3  go to state 328


state 264

  182 do_while_statement: label_opt DO_T block . WHILE LP expression RP CR

    WHILE  shift, and go to state 329


state 265

  181 for_statement: label_opt FOR expression_opt . SEMICOLON expression_opt SEMICOLON expression_opt myblock

    SEMICOLON  shift, and go to state 330


state 266

  183 foreach_statement: label_opt FOREACH LP . IDENTIFIER COLON expression RP block

    IDENTIFIER  shift, and go to state 331


state 267

  222 class_or_member_modifier_list: class_or_member_modifier_list class_or_member_modifier .

    $default  reduce using rule 222 (class_or_member_modifier_list)


state 268

  216 class_definition: shared class_or_member_modifier_list class_or_interface . IDENTIFIER template_list extends CR $@5 member_declaration_list END
  220                 | shared class_or_member_modifier_list class_or_interface . IDENTIFIER template_list extends CR $@7 END

    IDENTIFIER  shift, and go to state 332


state 269

  214 class_definition: shared class_or_interface IDENTIFIER . template_list extends CR $@4 member_declaration_list END
  218                 | shared class_or_interface IDENTIFIER . template_list extends CR $@6 END

    LT  shift, and go to state 333

    $default  reduce using rule 212 (template_list)

    template_list  go to state 334


state 270

   44 lib_function: LIB IDENTIFIER $@1 . CR lib_function_declaration_list END

    CR  shift, and go to state 335


state 271

  110 primary_no_new_array: IDENTIFIER LB expression RB .

    $default  reduce using rule 110 (primary_no_new_array)


state 272

  111 primary_no_new_array: IDENTIFIER LB expression COLON . expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 336
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 273

  163 if_statement: IF expression THEN myblock .
  164             | IF expression THEN myblock . ELSE myblock
  165             | IF expression THEN myblock . elsif_list
  166             | IF expression THEN myblock . elsif_list ELSE myblock

    ELSE   shift, and go to state 337
    ELSIF  shift, and go to state 338

    $default  reduce using rule 163 (if_statement)

    elsif_list  go to state 339
    elsif       go to state 340


state 274

  175 one_case: CASE . case_expression_list myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 146 (expression_list)

    assignment_expression      go to state 341
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_list            go to state 342
    case_expression_list       go to state 343


state 275

  172 switch_statement: SWITCH expression CR case_list . default_opt
  174 case_list: case_list . one_case

    CASE       shift, and go to state 274
    DEFAULT_T  shift, and go to state 344

    $default  reduce using rule 176 (default_opt)

    one_case     go to state 345
    default_opt  go to state 346


state 276

  173 case_list: one_case .

    $default  reduce using rule 173 (case_list)


state 277

  134 array_literal: LC expression_list COMMA RC .

    $default  reduce using rule 134 (array_literal)


state 278

  148 expression_list: expression_list COMMA assignment_expression .

    $default  reduce using rule 148 (expression_list)


state 279

  283 unsafe: UNSAFE CR .

    $default  reduce using rule 283 (unsafe)


state 280

  284 unsafe: SAFE CR .

    $default  reduce using rule 284 (unsafe)


state 281

  286 myblock: CR unsafe @8 . statement_list END

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    FINAL           shift, and go to state 38
    DIM             shift, and go to state 42
    CR              shift, and go to state 43

    $default  reduce using rule 170 (label_opt)

    statement_list             go to state 347
    expression                 go to state 50
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    statement                  go to state 348
    if_statement               go to state 65
    label_opt                  go to state 66
    switch_statement           go to state 67
    while_statement            go to state 68
    for_statement              go to state 69
    do_while_statement         go to state 70
    foreach_statement          go to state 71
    return_statement           go to state 72
    break_statement            go to state 73
    continue_statement         go to state 74
    try_statement              go to state 75
    throw_statement            go to state 76
    declaration_statement      go to state 77


state 282

  197 catch_clause: CATCH @2 . type_specifier IDENTIFIER myblock

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 349


state 283

  192 try_statement: TRY myblock FINALLY block .

    $default  reduce using rule 192 (try_statement)


state 284

  191 try_statement: TRY myblock catch_list FINALLY . myblock

    CR  shift, and go to state 108

    myblock  go to state 350


state 285

  195 catch_list: catch_list catch_clause .

    $default  reduce using rule 195 (catch_list)


state 286

  129 primary_no_new_array: NEW IDENTIFIER LP RP .

    $default  reduce using rule 129 (primary_no_new_array)


state 287

   60 argument_list: argument_list . COMMA assignment_expression
  130 primary_no_new_array: NEW IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 351
    COMMA  shift, and go to state 322


state 288

   41 type_list: type_specifier .

    $default  reduce using rule 41 (type_list)


state 289

   36 template_type_specifier: IDENTIFIER LT type_list . GT
   42 type_list: type_list . COMMA type_specifier

    COMMA  shift, and go to state 352
    GT     shift, and go to state 353


state 290

  131 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER . LP RP
  132                     | NEW IDENTIFIER DOT IDENTIFIER . LP argument_list RP

    LP  shift, and go to state 354


state 291

  128 primary_no_new_array: NEW DELEGATE LP RP .

    $default  reduce using rule 128 (primary_no_new_array)


state 292

   64 expression: expression . COMMA assignment_expression
  143 dimension_expression: LB expression . RB

    RB     shift, and go to state 355
    COMMA  shift, and go to state 141


state 293

  143 dimension_expression: LB . expression RB
  144 dimension_list: LB . RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    RB              shift, and go to state 356
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 292
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 294

  142 dimension_expression_list: dimension_expression_list dimension_expression .

    $default  reduce using rule 142 (dimension_expression_list)


state 295

  136 array_creation: NEW basic_type_specifier dimension_expression_list dimension_list . global
  145 dimension_list: dimension_list . LB RB

    LB      shift, and go to state 357
    GLOBAL  shift, and go to state 226

    $default  reduce using rule 280 (global)

    global  go to state 358


state 296

  135 array_creation: NEW basic_type_specifier dimension_expression_list global .

    $default  reduce using rule 135 (array_creation)


state 297

  138 array_creation: NEW identifier_type_specifier dimension_expression_list dimension_list . global
  145 dimension_list: dimension_list . LB RB

    LB      shift, and go to state 357
    GLOBAL  shift, and go to state 226

    $default  reduce using rule 280 (global)

    global  go to state 359


state 298

  137 array_creation: NEW identifier_type_specifier dimension_expression_list global .

    $default  reduce using rule 137 (array_creation)


state 299

  140 array_creation: NEW template_type_specifier dimension_expression_list dimension_list . global
  145 dimension_list: dimension_list . LB RB

    LB      shift, and go to state 357
    GLOBAL  shift, and go to state 226

    $default  reduce using rule 280 (global)

    global  go to state 360


state 300

  139 array_creation: NEW template_type_specifier dimension_expression_list global .

    $default  reduce using rule 139 (array_creation)


state 301

   57 parameter_list: IDENTIFIER . AS type_specifier

    AS  shift, and go to state 361


state 302

  250 apostrophe: COMMA . APOSTROPHE

    APOSTROPHE  shift, and go to state 362


state 303

   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  268 delegate_definition: DELEGATE IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause CR

    COMMA  shift, and go to state 363

    $default  reduce using rule 249 (apostrophe)

    apostrophe  go to state 364


state 304

  269 delegate_definition: DELEGATE IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 365


state 305

  202 declaration_statement: FINAL IDENTIFIER AS type_specifier . CR
  203                      | FINAL IDENTIFIER AS type_specifier . ASSIGN_T expression CR

    ASSIGN_T  shift, and go to state 366
    CR        shift, and go to state 367


state 306

  272 enumerator_list: IDENTIFIER .

    $default  reduce using rule 272 (enumerator_list)


state 307

  270 enum_definition: ENUM IDENTIFIER LC enumerator_list . RC
  271                | ENUM IDENTIFIER LC enumerator_list . COMMA RC
  273 enumerator_list: enumerator_list . COMMA IDENTIFIER

    RC     shift, and go to state 368
    COMMA  shift, and go to state 369


state 308

   32 array_type_specifier_sub: IDENTIFIER LB RB .

    $default  reduce using rule 32 (array_type_specifier_sub)


state 309

   64 expression: expression . COMMA assignment_expression
  274 const_definition: CONST IDENTIFIER ASSIGN_T expression . CR

    COMMA  shift, and go to state 141
    CR     shift, and go to state 370


state 310

   31 array_type_specifier_sub: basic_type_specifier LB RB .

    $default  reduce using rule 31 (array_type_specifier_sub)


state 311

   33 array_type_specifier_sub: array_type_specifier LB RB .

    $default  reduce using rule 33 (array_type_specifier_sub)


state 312

   34 array_type_specifier_sub: template_type_specifier LB RB .

    $default  reduce using rule 34 (array_type_specifier_sub)


state 313

  275 const_definition: CONST type_specifier IDENTIFIER CR .

    $default  reduce using rule 275 (const_definition)


state 314

   52 function_definition: FUNCTION IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause myblock
   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 363

    $default  reduce using rule 249 (apostrophe)

    apostrophe  go to state 371


state 315

   53 function_definition: FUNCTION IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause myblock

    RP  shift, and go to state 372


state 316

  200 declaration_statement: DIM volatile IDENTIFIER AS . shared type_specifier CR
  201                      | DIM volatile IDENTIFIER AS . shared type_specifier ASSIGN_T expression CR

    SHARED  shift, and go to state 46

    $default  reduce using rule 276 (shared)

    shared  go to state 373


state 317

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause CR
   49                     | DECLARE FUNCTION IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 301
    COMMA       shift, and go to state 302

    $default  reduce using rule 249 (apostrophe)

    parameter_list  go to state 374
    apostrophe      go to state 375


state 318

   50 function_declaration: DECLARE BSUB IDENTIFIER LP . parameter_list apostrophe RP throws_clause CR
   51                     | DECLARE BSUB IDENTIFIER LP . apostrophe RP throws_clause CR

    IDENTIFIER  shift, and go to state 301
    COMMA       shift, and go to state 302

    $default  reduce using rule 249 (apostrophe)

    parameter_list  go to state 376
    apostrophe      go to state 377


state 319

   54 function_definition: BSUB IDENTIFIER LP parameter_list . apostrophe RP throws_clause myblock
   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 363

    $default  reduce using rule 249 (apostrophe)

    apostrophe  go to state 378


state 320

   55 function_definition: BSUB IDENTIFIER LP apostrophe . RP throws_clause myblock

    RP  shift, and go to state 379


state 321

  114 primary_no_new_array: primary_expression LP argument_list RP .

    $default  reduce using rule 114 (primary_no_new_array)


state 322

   60 argument_list: argument_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    assignment_expression      go to state 380
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 323

  117 primary_no_new_array: primary_expression DOWN_CAST_BEGIN type_specifier DOWN_CAST_END .

    $default  reduce using rule 117 (primary_no_new_array)


state 324

  109 primary_no_new_array: primary_no_new_array LB expression RB .

    $default  reduce using rule 109 (primary_no_new_array)


state 325

  112 primary_no_new_array: primary_no_new_array LB expression COLON . expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 381
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 326

  180 while_statement: label_opt WHILE expression myblock .

    $default  reduce using rule 180 (while_statement)


state 327

  206 block: LC RC .

    $default  reduce using rule 206 (block)


state 328

  205 block: LC @3 . statement_list RC

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    FINAL           shift, and go to state 38
    DIM             shift, and go to state 42
    CR              shift, and go to state 43

    $default  reduce using rule 170 (label_opt)

    statement_list             go to state 382
    expression                 go to state 50
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    statement                  go to state 348
    if_statement               go to state 65
    label_opt                  go to state 66
    switch_statement           go to state 67
    while_statement            go to state 68
    for_statement              go to state 69
    do_while_statement         go to state 70
    foreach_statement          go to state 71
    return_statement           go to state 72
    break_statement            go to state 73
    continue_statement         go to state 74
    try_statement              go to state 75
    throw_statement            go to state 76
    declaration_statement      go to state 77


state 329

  182 do_while_statement: label_opt DO_T block WHILE . LP expression RP CR

    LP  shift, and go to state 383


state 330

  181 for_statement: label_opt FOR expression_opt SEMICOLON . expression_opt SEMICOLON expression_opt myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 184 (expression_opt)

    expression                 go to state 96
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_opt             go to state 384


state 331

  183 foreach_statement: label_opt FOREACH LP IDENTIFIER . COLON expression RP block

    COLON  shift, and go to state 385


state 332

  216 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER . template_list extends CR $@5 member_declaration_list END
  220                 | shared class_or_member_modifier_list class_or_interface IDENTIFIER . template_list extends CR $@7 END

    LT  shift, and go to state 333

    $default  reduce using rule 212 (template_list)

    template_list  go to state 386


state 333

  211 template_list: LT . template_def_list GT

    IDENTIFIER  shift, and go to state 387

    template_def_list  go to state 388


state 334

  214 class_definition: shared class_or_interface IDENTIFIER template_list . extends CR $@4 member_declaration_list END
  218                 | shared class_or_interface IDENTIFIER template_list . extends CR $@6 END

    COLON  shift, and go to state 389

    $default  reduce using rule 229 (extends)

    extends  go to state 390


state 335

   44 lib_function: LIB IDENTIFIER $@1 CR . lib_function_declaration_list END

    $default  reduce using rule 45 (lib_function_declaration_list)

    lib_function_declaration_list  go to state 391


state 336

   64 expression: expression . COMMA assignment_expression
  111 primary_no_new_array: IDENTIFIER LB expression COLON expression . RB

    RB     shift, and go to state 392
    COMMA  shift, and go to state 141


state 337

  164 if_statement: IF expression THEN myblock ELSE . myblock

    CR  shift, and go to state 108

    myblock  go to state 393


state 338

  169 elsif: ELSIF . expression THEN myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 394
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 339

  165 if_statement: IF expression THEN myblock elsif_list .
  166             | IF expression THEN myblock elsif_list . ELSE myblock
  168 elsif_list: elsif_list . elsif

    ELSE   shift, and go to state 395
    ELSIF  shift, and go to state 338

    $default  reduce using rule 165 (if_statement)

    elsif  go to state 396


state 340

  167 elsif_list: elsif .

    $default  reduce using rule 167 (elsif_list)


state 341

  147 expression_list: assignment_expression .
  178 case_expression_list: assignment_expression .

    CR        reduce using rule 178 (case_expression_list)
    $default  reduce using rule 147 (expression_list)


state 342

  148 expression_list: expression_list . COMMA assignment_expression
  179 case_expression_list: expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 397


state 343

  175 one_case: CASE case_expression_list . myblock

    CR  shift, and go to state 108

    myblock  go to state 398


state 344

  177 default_opt: DEFAULT_T . myblock

    CR  shift, and go to state 108

    myblock  go to state 399


state 345

  174 case_list: case_list one_case .

    $default  reduce using rule 174 (case_list)


state 346

  172 switch_statement: SWITCH expression CR case_list default_opt .

    $default  reduce using rule 172 (switch_statement)


state 347

   62 statement_list: statement_list . statement
  286 myblock: CR unsafe @8 statement_list . END

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    FINAL           shift, and go to state 38
    DIM             shift, and go to state 42
    END             shift, and go to state 400
    CR              shift, and go to state 43

    $default  reduce using rule 170 (label_opt)

    expression                 go to state 50
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    statement                  go to state 401
    if_statement               go to state 65
    label_opt                  go to state 66
    switch_statement           go to state 67
    while_statement            go to state 68
    for_statement              go to state 69
    do_while_statement         go to state 70
    foreach_statement          go to state 71
    return_statement           go to state 72
    break_statement            go to state 73
    continue_statement         go to state 74
    try_statement              go to state 75
    throw_statement            go to state 76
    declaration_statement      go to state 77


state 348

   61 statement_list: statement .

    $default  reduce using rule 61 (statement_list)


state 349

  197 catch_clause: CATCH @2 type_specifier . IDENTIFIER myblock

    IDENTIFIER  shift, and go to state 402


state 350

  191 try_statement: TRY myblock catch_list FINALLY myblock .

    $default  reduce using rule 191 (try_statement)


state 351

  130 primary_no_new_array: NEW IDENTIFIER LP argument_list RP .

    $default  reduce using rule 130 (primary_no_new_array)


state 352

   42 type_list: type_list COMMA . type_specifier

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 403


state 353

   36 template_type_specifier: IDENTIFIER LT type_list GT .

    $default  reduce using rule 36 (template_type_specifier)


state 354

  131 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP . RP
  132                     | NEW IDENTIFIER DOT IDENTIFIER LP . argument_list RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    RP              shift, and go to state 404
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    argument_list              go to state 405
    assignment_expression      go to state 255
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 355

  143 dimension_expression: LB expression RB .

    $default  reduce using rule 143 (dimension_expression)


state 356

  144 dimension_list: LB RB .

    $default  reduce using rule 144 (dimension_list)


state 357

  145 dimension_list: dimension_list LB . RB

    RB  shift, and go to state 406


state 358

  136 array_creation: NEW basic_type_specifier dimension_expression_list dimension_list global .

    $default  reduce using rule 136 (array_creation)


state 359

  138 array_creation: NEW identifier_type_specifier dimension_expression_list dimension_list global .

    $default  reduce using rule 138 (array_creation)


state 360

  140 array_creation: NEW template_type_specifier dimension_expression_list dimension_list global .

    $default  reduce using rule 140 (array_creation)


state 361

   57 parameter_list: IDENTIFIER AS . type_specifier

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 407


state 362

  250 apostrophe: COMMA APOSTROPHE .

    $default  reduce using rule 250 (apostrophe)


state 363

   58 parameter_list: parameter_list COMMA . IDENTIFIER AS type_specifier
  250 apostrophe: COMMA . APOSTROPHE

    IDENTIFIER  shift, and go to state 408
    APOSTROPHE  shift, and go to state 362


state 364

  268 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 409


state 365

  269 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 410


state 366

  203 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 411
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 367

  202 declaration_statement: FINAL IDENTIFIER AS type_specifier CR .

    $default  reduce using rule 202 (declaration_statement)


state 368

  270 enum_definition: ENUM IDENTIFIER LC enumerator_list RC .

    $default  reduce using rule 270 (enum_definition)


state 369

  271 enum_definition: ENUM IDENTIFIER LC enumerator_list COMMA . RC
  273 enumerator_list: enumerator_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 412
    RC          shift, and go to state 413


state 370

  274 const_definition: CONST IDENTIFIER ASSIGN_T expression CR .

    $default  reduce using rule 274 (const_definition)


state 371

   52 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause myblock

    RP  shift, and go to state 414


state 372

   53 function_definition: FUNCTION IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 415


state 373

  200 declaration_statement: DIM volatile IDENTIFIER AS shared . type_specifier CR
  201                      | DIM volatile IDENTIFIER AS shared . type_specifier ASSIGN_T expression CR

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 416


state 374

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause CR
   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 363

    $default  reduce using rule 249 (apostrophe)

    apostrophe  go to state 417


state 375

   49 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 418


state 376

   50 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list . apostrophe RP throws_clause CR
   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 363

    $default  reduce using rule 249 (apostrophe)

    apostrophe  go to state 419


state 377

   51 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe . RP throws_clause CR

    RP  shift, and go to state 420


state 378

   54 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe . RP throws_clause myblock

    RP  shift, and go to state 421


state 379

   55 function_definition: BSUB IDENTIFIER LP apostrophe RP . throws_clause myblock

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 423


state 380

   60 argument_list: argument_list COMMA assignment_expression .

    $default  reduce using rule 60 (argument_list)


state 381

   64 expression: expression . COMMA assignment_expression
  112 primary_no_new_array: primary_no_new_array LB expression COLON expression . RB

    RB     shift, and go to state 424
    COMMA  shift, and go to state 141


state 382

   62 statement_list: statement_list . statement
  205 block: LC @3 statement_list . RC

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    RC              shift, and go to state 425
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    FINAL           shift, and go to state 38
    DIM             shift, and go to state 42
    CR              shift, and go to state 43

    $default  reduce using rule 170 (label_opt)

    expression                 go to state 50
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    statement                  go to state 401
    if_statement               go to state 65
    label_opt                  go to state 66
    switch_statement           go to state 67
    while_statement            go to state 68
    for_statement              go to state 69
    do_while_statement         go to state 70
    foreach_statement          go to state 71
    return_statement           go to state 72
    break_statement            go to state 73
    continue_statement         go to state 74
    try_statement              go to state 75
    throw_statement            go to state 76
    declaration_statement      go to state 77


state 383

  182 do_while_statement: label_opt DO_T block WHILE LP . expression RP CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 426
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 384

  181 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt . SEMICOLON expression_opt myblock

    SEMICOLON  shift, and go to state 427


state 385

  183 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON . expression RP block

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 428
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 386

  216 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list . extends CR $@5 member_declaration_list END
  220                 | shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list . extends CR $@7 END

    COLON  shift, and go to state 389

    $default  reduce using rule 229 (extends)

    extends  go to state 429


state 387

  207 template_def_list: IDENTIFIER .
  209                  | IDENTIFIER . COLON identifier_type_specifier

    COLON  shift, and go to state 430

    $default  reduce using rule 207 (template_def_list)


state 388

  208 template_def_list: template_def_list . COMMA IDENTIFIER
  210                  | template_def_list . COMMA IDENTIFIER COLON identifier_type_specifier
  211 template_list: LT template_def_list . GT

    COMMA  shift, and go to state 431
    GT     shift, and go to state 432


state 389

  230 extends: COLON . extends_list

    IDENTIFIER  shift, and go to state 433

    extends_list  go to state 434


state 390

  214 class_definition: shared class_or_interface IDENTIFIER template_list extends . CR $@4 member_declaration_list END
  218                 | shared class_or_interface IDENTIFIER template_list extends . CR $@6 END

    CR  shift, and go to state 435


state 391

   44 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list . END
   46 lib_function_declaration_list: lib_function_declaration_list . function_declaration
   47                              | lib_function_declaration_list . class_definition

    END      shift, and go to state 436
    DECLARE  shift, and go to state 44
    SHARED   shift, and go to state 46

    $default  reduce using rule 276 (shared)

    function_declaration  go to state 437
    class_definition      go to state 438
    shared                go to state 82


state 392

  111 primary_no_new_array: IDENTIFIER LB expression COLON expression RB .

    $default  reduce using rule 111 (primary_no_new_array)


state 393

  164 if_statement: IF expression THEN myblock ELSE myblock .

    $default  reduce using rule 164 (if_statement)


state 394

   64 expression: expression . COMMA assignment_expression
  169 elsif: ELSIF expression . THEN myblock

    COMMA  shift, and go to state 141
    THEN   shift, and go to state 439


state 395

  166 if_statement: IF expression THEN myblock elsif_list ELSE . myblock

    CR  shift, and go to state 108

    myblock  go to state 440


state 396

  168 elsif_list: elsif_list elsif .

    $default  reduce using rule 168 (elsif_list)


state 397

  148 expression_list: expression_list COMMA . assignment_expression
  179 case_expression_list: expression_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    assignment_expression      go to state 441
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 398

  175 one_case: CASE case_expression_list myblock .

    $default  reduce using rule 175 (one_case)


state 399

  177 default_opt: DEFAULT_T myblock .

    $default  reduce using rule 177 (default_opt)


state 400

  286 myblock: CR unsafe @8 statement_list END .

    $default  reduce using rule 286 (myblock)


state 401

   62 statement_list: statement_list statement .

    $default  reduce using rule 62 (statement_list)


state 402

  197 catch_clause: CATCH @2 type_specifier IDENTIFIER . myblock

    CR  shift, and go to state 108

    myblock  go to state 442


state 403

   42 type_list: type_list COMMA type_specifier .

    $default  reduce using rule 42 (type_list)


state 404

  131 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP RP .

    $default  reduce using rule 131 (primary_no_new_array)


state 405

   60 argument_list: argument_list . COMMA assignment_expression
  132 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 443
    COMMA  shift, and go to state 322


state 406

  145 dimension_list: dimension_list LB RB .

    $default  reduce using rule 145 (dimension_list)


state 407

   57 parameter_list: IDENTIFIER AS type_specifier .

    $default  reduce using rule 57 (parameter_list)


state 408

   58 parameter_list: parameter_list COMMA IDENTIFIER . AS type_specifier

    AS  shift, and go to state 444


state 409

  268 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 445


state 410

  269 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 446


state 411

   64 expression: expression . COMMA assignment_expression
  203 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T expression . CR

    COMMA  shift, and go to state 141
    CR     shift, and go to state 447


state 412

  273 enumerator_list: enumerator_list COMMA IDENTIFIER .

    $default  reduce using rule 273 (enumerator_list)


state 413

  271 enum_definition: ENUM IDENTIFIER LC enumerator_list COMMA RC .

    $default  reduce using rule 271 (enum_definition)


state 414

   52 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 448


state 415

   53 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 449


state 416

  200 declaration_statement: DIM volatile IDENTIFIER AS shared type_specifier . CR
  201                      | DIM volatile IDENTIFIER AS shared type_specifier . ASSIGN_T expression CR

    ASSIGN_T  shift, and go to state 450
    CR        shift, and go to state 451


state 417

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 452


state 418

   49 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 453


state 419

   50 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe . RP throws_clause CR

    RP  shift, and go to state 454


state 420

   51 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP . throws_clause CR

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 455


state 421

   54 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP . throws_clause myblock

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 456


state 422

  252 throws_clause: THROWS . exception_list

    IDENTIFIER  shift, and go to state 457

    exception_list  go to state 458


state 423

   55 function_definition: BSUB IDENTIFIER LP apostrophe RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 459


state 424

  112 primary_no_new_array: primary_no_new_array LB expression COLON expression RB .

    $default  reduce using rule 112 (primary_no_new_array)


state 425

  205 block: LC @3 statement_list RC .

    $default  reduce using rule 205 (block)


state 426

   64 expression: expression . COMMA assignment_expression
  182 do_while_statement: label_opt DO_T block WHILE LP expression . RP CR

    RP     shift, and go to state 460
    COMMA  shift, and go to state 141


state 427

  181 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON . expression_opt myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 184 (expression_opt)

    expression                 go to state 96
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_opt             go to state 461


state 428

   64 expression: expression . COMMA assignment_expression
  183 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression . RP block

    RP     shift, and go to state 462
    COMMA  shift, and go to state 141


state 429

  216 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends . CR $@5 member_declaration_list END
  220                 | shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends . CR $@7 END

    CR  shift, and go to state 463


state 430

  209 template_def_list: IDENTIFIER COLON . identifier_type_specifier

    IDENTIFIER  shift, and go to state 464

    identifier_type_specifier  go to state 465


state 431

  208 template_def_list: template_def_list COMMA . IDENTIFIER
  210                  | template_def_list COMMA . IDENTIFIER COLON identifier_type_specifier

    IDENTIFIER  shift, and go to state 466


state 432

  211 template_list: LT template_def_list GT .

    $default  reduce using rule 211 (template_list)


state 433

  231 extends_list: IDENTIFIER .

    $default  reduce using rule 231 (extends_list)


state 434

  230 extends: COLON extends_list .
  232 extends_list: extends_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 467

    $default  reduce using rule 230 (extends)


state 435

  214 class_definition: shared class_or_interface IDENTIFIER template_list extends CR . $@4 member_declaration_list END
  218                 | shared class_or_interface IDENTIFIER template_list extends CR . $@6 END

    END       reduce using rule 217 ($@6)
    $default  reduce using rule 213 ($@4)

    $@4  go to state 468
    $@6  go to state 469


state 436

   44 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list END .

    $default  reduce using rule 44 (lib_function)


state 437

   46 lib_function_declaration_list: lib_function_declaration_list function_declaration .

    $default  reduce using rule 46 (lib_function_declaration_list)


state 438

   47 lib_function_declaration_list: lib_function_declaration_list class_definition .

    $default  reduce using rule 47 (lib_function_declaration_list)


state 439

  169 elsif: ELSIF expression THEN . myblock

    CR  shift, and go to state 108

    myblock  go to state 470


state 440

  166 if_statement: IF expression THEN myblock elsif_list ELSE myblock .

    $default  reduce using rule 166 (if_statement)


state 441

  148 expression_list: expression_list COMMA assignment_expression .
  179 case_expression_list: expression_list COMMA assignment_expression .

    CR        reduce using rule 179 (case_expression_list)
    $default  reduce using rule 148 (expression_list)


state 442

  197 catch_clause: CATCH @2 type_specifier IDENTIFIER myblock .

    $default  reduce using rule 197 (catch_clause)


state 443

  132 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP argument_list RP .

    $default  reduce using rule 132 (primary_no_new_array)


state 444

   58 parameter_list: parameter_list COMMA IDENTIFIER AS . type_specifier

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 471


state 445

  268 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 472


state 446

  269 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 473


state 447

  203 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T expression CR .

    $default  reduce using rule 203 (declaration_statement)


state 448

   52 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 474


state 449

   53 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 475


state 450

  201 declaration_statement: DIM volatile IDENTIFIER AS shared type_specifier ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 476
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 451

  200 declaration_statement: DIM volatile IDENTIFIER AS shared type_specifier CR .

    $default  reduce using rule 200 (declaration_statement)


state 452

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 477


state 453

   49 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 478


state 454

   50 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP . throws_clause CR

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 479


state 455

   51 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause . CR

    CR  shift, and go to state 480


state 456

   54 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 481


state 457

  253 exception_list: IDENTIFIER .

    $default  reduce using rule 253 (exception_list)


state 458

  252 throws_clause: THROWS exception_list .
  254 exception_list: exception_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 482

    $default  reduce using rule 252 (throws_clause)


state 459

   55 function_definition: BSUB IDENTIFIER LP apostrophe RP throws_clause myblock .

    $default  reduce using rule 55 (function_definition)


state 460

  182 do_while_statement: label_opt DO_T block WHILE LP expression RP . CR

    CR  shift, and go to state 483


state 461

  181 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt . myblock

    CR  shift, and go to state 108

    myblock  go to state 484


state 462

  183 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP . block

    LC  shift, and go to state 263

    block  go to state 485


state 463

  216 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR . $@5 member_declaration_list END
  220                 | shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR . $@7 END

    END       reduce using rule 219 ($@7)
    $default  reduce using rule 215 ($@5)

    $@5  go to state 486
    $@7  go to state 487


state 464

   30 identifier_type_specifier: IDENTIFIER .

    $default  reduce using rule 30 (identifier_type_specifier)


state 465

  209 template_def_list: IDENTIFIER COLON identifier_type_specifier .

    $default  reduce using rule 209 (template_def_list)


state 466

  208 template_def_list: template_def_list COMMA IDENTIFIER .
  210                  | template_def_list COMMA IDENTIFIER . COLON identifier_type_specifier

    COLON  shift, and go to state 488

    $default  reduce using rule 208 (template_def_list)


state 467

  232 extends_list: extends_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 489


state 468

  214 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@4 . member_declaration_list END

    PUBLIC_T     shift, and go to state 181
    PRIVATE_T    shift, and go to state 182
    VIRTUAL_T    shift, and go to state 183
    OVERRIDE_T   shift, and go to state 184
    ABSTRACT_T   shift, and go to state 185
    CONSTRUCTOR  shift, and go to state 490
    FINAL        shift, and go to state 491
    FUNCTION     shift, and go to state 492
    DIM          shift, and go to state 493
    DECLARE      shift, and go to state 494
    BSUB         shift, and go to state 495

    class_or_member_modifier_list  go to state 496
    class_or_member_modifier       go to state 187
    member_declaration_list        go to state 497
    member_declaration             go to state 498
    method_member                  go to state 499
    method_function_definition     go to state 500
    constructor_definition         go to state 501
    access_modifier                go to state 189
    field_member                   go to state 502


state 469

  218 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@6 . END

    END  shift, and go to state 503


state 470

  169 elsif: ELSIF expression THEN myblock .

    $default  reduce using rule 169 (elsif)


state 471

   58 parameter_list: parameter_list COMMA IDENTIFIER AS type_specifier .

    $default  reduce using rule 58 (parameter_list)


state 472

  268 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 504


state 473

  269 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 505


state 474

   52 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 506


state 475

   53 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 507


state 476

   64 expression: expression . COMMA assignment_expression
  201 declaration_statement: DIM volatile IDENTIFIER AS shared type_specifier ASSIGN_T expression . CR

    COMMA  shift, and go to state 141
    CR     shift, and go to state 508


state 477

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 509


state 478

   49 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 510


state 479

   50 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause . CR

    CR  shift, and go to state 511


state 480

   51 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause CR .

    $default  reduce using rule 51 (function_declaration)


state 481

   54 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock .

    $default  reduce using rule 54 (function_definition)


state 482

  254 exception_list: exception_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 512


state 483

  182 do_while_statement: label_opt DO_T block WHILE LP expression RP CR .

    $default  reduce using rule 182 (do_while_statement)


state 484

  181 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock .

    $default  reduce using rule 181 (for_statement)


state 485

  183 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP block .

    $default  reduce using rule 183 (foreach_statement)


state 486

  216 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 . member_declaration_list END

    PUBLIC_T     shift, and go to state 181
    PRIVATE_T    shift, and go to state 182
    VIRTUAL_T    shift, and go to state 183
    OVERRIDE_T   shift, and go to state 184
    ABSTRACT_T   shift, and go to state 185
    CONSTRUCTOR  shift, and go to state 490
    FINAL        shift, and go to state 491
    FUNCTION     shift, and go to state 492
    DIM          shift, and go to state 493
    DECLARE      shift, and go to state 494
    BSUB         shift, and go to state 495

    class_or_member_modifier_list  go to state 496
    class_or_member_modifier       go to state 187
    member_declaration_list        go to state 513
    member_declaration             go to state 498
    method_member                  go to state 499
    method_function_definition     go to state 500
    constructor_definition         go to state 501
    access_modifier                go to state 189
    field_member                   go to state 502


state 487

  220 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 . END

    END  shift, and go to state 514


state 488

  210 template_def_list: template_def_list COMMA IDENTIFIER COLON . identifier_type_specifier

    IDENTIFIER  shift, and go to state 464

    identifier_type_specifier  go to state 515


state 489

  232 extends_list: extends_list COMMA IDENTIFIER .

    $default  reduce using rule 232 (extends_list)


state 490

  255 constructor_definition: CONSTRUCTOR . IDENTIFIER LP parameter_list RP throws_clause myblock
  256                       | CONSTRUCTOR . IDENTIFIER LP RP throws_clause myblock

    IDENTIFIER  shift, and go to state 516


state 491

  265 field_member: FINAL . IDENTIFIER AS type_specifier initializer_opt CR
  267             | FINAL . class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 517
    PUBLIC_T    shift, and go to state 181
    PRIVATE_T   shift, and go to state 182
    VIRTUAL_T   shift, and go to state 183
    OVERRIDE_T  shift, and go to state 184
    ABSTRACT_T  shift, and go to state 185

    class_or_member_modifier_list  go to state 518
    class_or_member_modifier       go to state 187
    access_modifier                go to state 189


state 492

  241 method_function_definition: FUNCTION . IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock
  242                           | FUNCTION . IDENTIFIER LP RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 519


state 493

  263 field_member: DIM . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 520


state 494

  243 method_function_definition: DECLARE . FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  244                           | DECLARE . FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR
  247                           | DECLARE . BSUB IDENTIFIER LP parameter_list RP throws_clause CR
  248                           | DECLARE . BSUB IDENTIFIER LP RP throws_clause CR
  257 constructor_definition: DECLARE . CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR
  258                       | DECLARE . CONSTRUCTOR IDENTIFIER LP RP throws_clause CR

    CONSTRUCTOR  shift, and go to state 521
    FUNCTION     shift, and go to state 522
    BSUB         shift, and go to state 523


state 495

  245 method_function_definition: BSUB . IDENTIFIER LP parameter_list RP throws_clause myblock
  246                           | BSUB . IDENTIFIER LP RP throws_clause myblock

    IDENTIFIER  shift, and go to state 524


state 496

  222 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier
  238 method_member: class_or_member_modifier_list . method_function_definition
  240              | class_or_member_modifier_list . constructor_definition
  264 field_member: class_or_member_modifier_list . IDENTIFIER AS type_specifier initializer_opt CR
  266             | class_or_member_modifier_list . FINAL IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER   shift, and go to state 525
    PUBLIC_T     shift, and go to state 181
    PRIVATE_T    shift, and go to state 182
    VIRTUAL_T    shift, and go to state 183
    OVERRIDE_T   shift, and go to state 184
    ABSTRACT_T   shift, and go to state 185
    CONSTRUCTOR  shift, and go to state 490
    FINAL        shift, and go to state 526
    FUNCTION     shift, and go to state 492
    DECLARE      shift, and go to state 494
    BSUB         shift, and go to state 495

    class_or_member_modifier    go to state 267
    method_function_definition  go to state 527
    constructor_definition      go to state 528
    access_modifier             go to state 189


state 497

  214 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list . END
  234 member_declaration_list: member_declaration_list . member_declaration

    PUBLIC_T     shift, and go to state 181
    PRIVATE_T    shift, and go to state 182
    VIRTUAL_T    shift, and go to state 183
    OVERRIDE_T   shift, and go to state 184
    ABSTRACT_T   shift, and go to state 185
    CONSTRUCTOR  shift, and go to state 490
    FINAL        shift, and go to state 491
    FUNCTION     shift, and go to state 492
    DIM          shift, and go to state 493
    END          shift, and go to state 529
    DECLARE      shift, and go to state 494
    BSUB         shift, and go to state 495

    class_or_member_modifier_list  go to state 496
    class_or_member_modifier       go to state 187
    member_declaration             go to state 530
    method_member                  go to state 499
    method_function_definition     go to state 500
    constructor_definition         go to state 501
    access_modifier                go to state 189
    field_member                   go to state 502


state 498

  233 member_declaration_list: member_declaration .

    $default  reduce using rule 233 (member_declaration_list)


state 499

  235 member_declaration: method_member .

    $default  reduce using rule 235 (member_declaration)


state 500

  237 method_member: method_function_definition .

    $default  reduce using rule 237 (method_member)


state 501

  239 method_member: constructor_definition .

    $default  reduce using rule 239 (method_member)


state 502

  236 member_declaration: field_member .

    $default  reduce using rule 236 (member_declaration)


state 503

  218 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@6 END .

    $default  reduce using rule 218 (class_definition)


state 504

  268 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 531


state 505

  269 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 269 (delegate_definition)


state 506

   52 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 532


state 507

   53 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 53 (function_definition)


state 508

  201 declaration_statement: DIM volatile IDENTIFIER AS shared type_specifier ASSIGN_T expression CR .

    $default  reduce using rule 201 (declaration_statement)


state 509

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 533


state 510

   49 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 534


state 511

   50 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR .

    $default  reduce using rule 50 (function_declaration)


state 512

  254 exception_list: exception_list COMMA IDENTIFIER .

    $default  reduce using rule 254 (exception_list)


state 513

  216 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list . END
  234 member_declaration_list: member_declaration_list . member_declaration

    PUBLIC_T     shift, and go to state 181
    PRIVATE_T    shift, and go to state 182
    VIRTUAL_T    shift, and go to state 183
    OVERRIDE_T   shift, and go to state 184
    ABSTRACT_T   shift, and go to state 185
    CONSTRUCTOR  shift, and go to state 490
    FINAL        shift, and go to state 491
    FUNCTION     shift, and go to state 492
    DIM          shift, and go to state 493
    END          shift, and go to state 535
    DECLARE      shift, and go to state 494
    BSUB         shift, and go to state 495

    class_or_member_modifier_list  go to state 496
    class_or_member_modifier       go to state 187
    member_declaration             go to state 530
    method_member                  go to state 499
    method_function_definition     go to state 500
    constructor_definition         go to state 501
    access_modifier                go to state 189
    field_member                   go to state 502


state 514

  220 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 END .

    $default  reduce using rule 220 (class_definition)


state 515

  210 template_def_list: template_def_list COMMA IDENTIFIER COLON identifier_type_specifier .

    $default  reduce using rule 210 (template_def_list)


state 516

  255 constructor_definition: CONSTRUCTOR IDENTIFIER . LP parameter_list RP throws_clause myblock
  256                       | CONSTRUCTOR IDENTIFIER . LP RP throws_clause myblock

    LP  shift, and go to state 536


state 517

  265 field_member: FINAL IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 537


state 518

  222 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier
  267 field_member: FINAL class_or_member_modifier_list . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 538
    PUBLIC_T    shift, and go to state 181
    PRIVATE_T   shift, and go to state 182
    VIRTUAL_T   shift, and go to state 183
    OVERRIDE_T  shift, and go to state 184
    ABSTRACT_T  shift, and go to state 185

    class_or_member_modifier  go to state 267
    access_modifier           go to state 189


state 519

  241 method_function_definition: FUNCTION IDENTIFIER . LP parameter_list RP AS type_specifier throws_clause myblock
  242                           | FUNCTION IDENTIFIER . LP RP AS type_specifier throws_clause myblock

    LP  shift, and go to state 539


state 520

  263 field_member: DIM IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 540


state 521

  257 constructor_definition: DECLARE CONSTRUCTOR . IDENTIFIER LP parameter_list RP throws_clause CR
  258                       | DECLARE CONSTRUCTOR . IDENTIFIER LP RP throws_clause CR

    IDENTIFIER  shift, and go to state 541


state 522

  243 method_function_definition: DECLARE FUNCTION . IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  244                           | DECLARE FUNCTION . IDENTIFIER LP RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 542


state 523

  247 method_function_definition: DECLARE BSUB . IDENTIFIER LP parameter_list RP throws_clause CR
  248                           | DECLARE BSUB . IDENTIFIER LP RP throws_clause CR

    IDENTIFIER  shift, and go to state 543


state 524

  245 method_function_definition: BSUB IDENTIFIER . LP parameter_list RP throws_clause myblock
  246                           | BSUB IDENTIFIER . LP RP throws_clause myblock

    LP  shift, and go to state 544


state 525

  264 field_member: class_or_member_modifier_list IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 545


state 526

  266 field_member: class_or_member_modifier_list FINAL . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 546


state 527

  238 method_member: class_or_member_modifier_list method_function_definition .

    $default  reduce using rule 238 (method_member)


state 528

  240 method_member: class_or_member_modifier_list constructor_definition .

    $default  reduce using rule 240 (method_member)


state 529

  214 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list END .

    $default  reduce using rule 214 (class_definition)


state 530

  234 member_declaration_list: member_declaration_list member_declaration .

    $default  reduce using rule 234 (member_declaration_list)


state 531

  268 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 268 (delegate_definition)


state 532

   52 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 52 (function_definition)


state 533

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 547


state 534

   49 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 49 (function_declaration)


state 535

  216 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END .

    $default  reduce using rule 216 (class_definition)


state 536

  255 constructor_definition: CONSTRUCTOR IDENTIFIER LP . parameter_list RP throws_clause myblock
  256                       | CONSTRUCTOR IDENTIFIER LP . RP throws_clause myblock

    IDENTIFIER  shift, and go to state 301
    RP          shift, and go to state 548

    parameter_list  go to state 549


state 537

  265 field_member: FINAL IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 550


state 538

  267 field_member: FINAL class_or_member_modifier_list IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 551


state 539

  241 method_function_definition: FUNCTION IDENTIFIER LP . parameter_list RP AS type_specifier throws_clause myblock
  242                           | FUNCTION IDENTIFIER LP . RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 301
    RP          shift, and go to state 552

    parameter_list  go to state 553


state 540

  263 field_member: DIM IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 554


state 541

  257 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER . LP parameter_list RP throws_clause CR
  258                       | DECLARE CONSTRUCTOR IDENTIFIER . LP RP throws_clause CR

    LP  shift, and go to state 555


state 542

  243 method_function_definition: DECLARE FUNCTION IDENTIFIER . LP parameter_list RP AS type_specifier throws_clause CR
  244                           | DECLARE FUNCTION IDENTIFIER . LP RP AS type_specifier throws_clause CR

    LP  shift, and go to state 556


state 543

  247 method_function_definition: DECLARE BSUB IDENTIFIER . LP parameter_list RP throws_clause CR
  248                           | DECLARE BSUB IDENTIFIER . LP RP throws_clause CR

    LP  shift, and go to state 557


state 544

  245 method_function_definition: BSUB IDENTIFIER LP . parameter_list RP throws_clause myblock
  246                           | BSUB IDENTIFIER LP . RP throws_clause myblock

    IDENTIFIER  shift, and go to state 301
    RP          shift, and go to state 558

    parameter_list  go to state 559


state 545

  264 field_member: class_or_member_modifier_list IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 560


state 546

  266 field_member: class_or_member_modifier_list FINAL IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 561


state 547

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 48 (function_declaration)


state 548

  256 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP . throws_clause myblock

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 562


state 549

   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  255 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list . RP throws_clause myblock

    RP     shift, and go to state 563
    COMMA  shift, and go to state 564


state 550

  265 field_member: FINAL IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 565

    $default  reduce using rule 261 (initializer_opt)

    initializer_opt  go to state 566


state 551

  267 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 567


state 552

  242 method_function_definition: FUNCTION IDENTIFIER LP RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 568


state 553

   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  241 method_function_definition: FUNCTION IDENTIFIER LP parameter_list . RP AS type_specifier throws_clause myblock

    RP     shift, and go to state 569
    COMMA  shift, and go to state 564


state 554

  263 field_member: DIM IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 565

    $default  reduce using rule 261 (initializer_opt)

    initializer_opt  go to state 570


state 555

  257 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP . parameter_list RP throws_clause CR
  258                       | DECLARE CONSTRUCTOR IDENTIFIER LP . RP throws_clause CR

    IDENTIFIER  shift, and go to state 301
    RP          shift, and go to state 571

    parameter_list  go to state 572


state 556

  243 method_function_definition: DECLARE FUNCTION IDENTIFIER LP . parameter_list RP AS type_specifier throws_clause CR
  244                           | DECLARE FUNCTION IDENTIFIER LP . RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 301
    RP          shift, and go to state 573

    parameter_list  go to state 574


state 557

  247 method_function_definition: DECLARE BSUB IDENTIFIER LP . parameter_list RP throws_clause CR
  248                           | DECLARE BSUB IDENTIFIER LP . RP throws_clause CR

    IDENTIFIER  shift, and go to state 301
    RP          shift, and go to state 575

    parameter_list  go to state 576


state 558

  246 method_function_definition: BSUB IDENTIFIER LP RP . throws_clause myblock

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 577


state 559

   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  245 method_function_definition: BSUB IDENTIFIER LP parameter_list . RP throws_clause myblock

    RP     shift, and go to state 578
    COMMA  shift, and go to state 564


state 560

  264 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 565

    $default  reduce using rule 261 (initializer_opt)

    initializer_opt  go to state 579


state 561

  266 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 580


state 562

  256 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 581


state 563

  255 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP . throws_clause myblock

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 582


state 564

   58 parameter_list: parameter_list COMMA . IDENTIFIER AS type_specifier

    IDENTIFIER  shift, and go to state 408


state 565

  262 initializer_opt: ASSIGN_T . expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 583
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 566

  265 field_member: FINAL IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 584


state 567

  267 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 565

    $default  reduce using rule 261 (initializer_opt)

    initializer_opt  go to state 585


state 568

  242 method_function_definition: FUNCTION IDENTIFIER LP RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 586


state 569

  241 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 587


state 570

  263 field_member: DIM IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 588


state 571

  258 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP . throws_clause CR

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 589


state 572

   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  257 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list . RP throws_clause CR

    RP     shift, and go to state 590
    COMMA  shift, and go to state 564


state 573

  244 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 591


state 574

   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  243 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list . RP AS type_specifier throws_clause CR

    RP     shift, and go to state 592
    COMMA  shift, and go to state 564


state 575

  248 method_function_definition: DECLARE BSUB IDENTIFIER LP RP . throws_clause CR

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 593


state 576

   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  247 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list . RP throws_clause CR

    RP     shift, and go to state 594
    COMMA  shift, and go to state 564


state 577

  246 method_function_definition: BSUB IDENTIFIER LP RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 595


state 578

  245 method_function_definition: BSUB IDENTIFIER LP parameter_list RP . throws_clause myblock

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 596


state 579

  264 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 597


state 580

  266 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 565

    $default  reduce using rule 261 (initializer_opt)

    initializer_opt  go to state 598


state 581

  256 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP throws_clause myblock .

    $default  reduce using rule 256 (constructor_definition)


state 582

  255 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 599


state 583

   64 expression: expression . COMMA assignment_expression
  262 initializer_opt: ASSIGN_T expression .

    COMMA  shift, and go to state 141

    $default  reduce using rule 262 (initializer_opt)


state 584

  265 field_member: FINAL IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 265 (field_member)


state 585

  267 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 600


state 586

  242 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 601


state 587

  241 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 602


state 588

  263 field_member: DIM IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 263 (field_member)


state 589

  258 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause . CR

    CR  shift, and go to state 603


state 590

  257 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP . throws_clause CR

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 604


state 591

  244 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 605


state 592

  243 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 606


state 593

  248 method_function_definition: DECLARE BSUB IDENTIFIER LP RP throws_clause . CR

    CR  shift, and go to state 607


state 594

  247 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP . throws_clause CR

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 608


state 595

  246 method_function_definition: BSUB IDENTIFIER LP RP throws_clause myblock .

    $default  reduce using rule 246 (method_function_definition)


state 596

  245 method_function_definition: BSUB IDENTIFIER LP parameter_list RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 609


state 597

  264 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 264 (field_member)


state 598

  266 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 610


state 599

  255 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause myblock .

    $default  reduce using rule 255 (constructor_definition)


state 600

  267 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 267 (field_member)


state 601

  242 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 611


state 602

  241 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 612


state 603

  258 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause CR .

    $default  reduce using rule 258 (constructor_definition)


state 604

  257 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause . CR

    CR  shift, and go to state 613


state 605

  244 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 614


state 606

  243 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 257
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 615


state 607

  248 method_function_definition: DECLARE BSUB IDENTIFIER LP RP throws_clause CR .

    $default  reduce using rule 248 (method_function_definition)


state 608

  247 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause . CR

    CR  shift, and go to state 616


state 609

  245 method_function_definition: BSUB IDENTIFIER LP parameter_list RP throws_clause myblock .

    $default  reduce using rule 245 (method_function_definition)


state 610

  266 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 266 (field_member)


state 611

  242 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 242 (method_function_definition)


state 612

  241 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 617


state 613

  257 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR .

    $default  reduce using rule 257 (constructor_definition)


state 614

  244 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 618


state 615

  243 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 422

    $default  reduce using rule 251 (throws_clause)

    throws_clause  go to state 619


state 616

  247 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause CR .

    $default  reduce using rule 247 (method_function_definition)


state 617

  241 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 241 (method_function_definition)


state 618

  244 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR .

    $default  reduce using rule 244 (method_function_definition)


state 619

  243 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 620


state 620

  243 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR .

    $default  reduce using rule 243 (method_function_definition)
