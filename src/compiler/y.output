State 256 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: initial_declaration
    2                 | translation_unit definition_or_statement

    3 initial_declaration: /* empty */
    4                    | require_list rename_list
    5                    | require_list
    6                    | rename_list
    7                    | initial_declaration lib_function

    8 require_list: require_declaration
    9             | require_list require_declaration

   10 require_declaration: REQUIRE package_name CR

   11 package_name: IDENTIFIER
   12             | package_name DOT IDENTIFIER

   13 rename_list: rename_declaration
   14            | rename_list rename_declaration

   15 rename_declaration: RENAME package_name IDENTIFIER CR

   16 definition_or_statement: function_definition
   17                        | class_definition
   18                        | statement
   19                        | delegate_definition
   20                        | enum_definition
   21                        | const_definition

   22 basic_type_specifier: VOID_T
   23                     | BOOLEAN_T
   24                     | INT_T
   25                     | DOUBLE_T
   26                     | STRING_T
   27                     | VARIENT_T
   28                     | NATIVE_POINTER_T
   29                     | DELEGATE

   30 identifier_type_specifier: IDENTIFIER

   31 array_type_specifier_sub: basic_type_specifier LB RB
   32                         | IDENTIFIER LB RB
   33                         | array_type_specifier LB RB
   34                         | template_type_specifier LB RB

   35 array_type_specifier: array_type_specifier_sub global

   36 template_type_specifier: IDENTIFIER LT type_list GT

   37 type_specifier: basic_type_specifier
   38               | array_type_specifier
   39               | identifier_type_specifier
   40               | template_type_specifier

   41 type_list: type_specifier
   42          | type_list COMMA type_specifier

   43 $@1: /* empty */

   44 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list END

   45 lib_function_declaration_list: /* empty */
   46                              | lib_function_declaration_list function_declaration
   47                              | lib_function_declaration_list class_definition

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   49                     | DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR
   50                     | DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   51                     | DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause CR

   52 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   53                    | FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock
   54                    | BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock
   55                    | BSUB IDENTIFIER LP apostrophe RP throws_clause myblock
   56                    | function_declaration

   57 parameter_list: IDENTIFIER AS type_specifier
   58               | parameter_list COMMA IDENTIFIER AS type_specifier

   59 argument_list: assignment_expression
   60              | argument_list COMMA assignment_expression

   61 statement_list: statement
   62               | statement_list statement

   63 expression: assignment_expression
   64           | expression COMMA assignment_expression

   65 assignment_expression: logical_or_expression
   66                      | primary_expression assignment_operator assignment_expression

   67 assignment_operator: ASSIGN_T
   68                    | ADD_ASSIGN_T
   69                    | SUB_ASSIGN_T
   70                    | ATM_ADD_ASSIGN_T
   71                    | ATM_SUB_ASSIGN_T
   72                    | MUL_ASSIGN_T
   73                    | DIV_ASSIGN_T
   74                    | MOD_ASSIGN_T

   75 logical_or_expression: logical_and_expression
   76                      | logical_or_expression LOGICAL_OR logical_and_expression

   77 logical_and_expression: equality_expression
   78                       | logical_and_expression LOGICAL_AND equality_expression

   79 equality_expression: relational_expression
   80                    | equality_expression EQ relational_expression
   81                    | equality_expression NE relational_expression

   82 relational_expression: additive_expression
   83                      | relational_expression GT additive_expression
   84                      | relational_expression GE additive_expression
   85                      | relational_expression LT additive_expression
   86                      | relational_expression LE additive_expression

   87 additive_expression: multiplicative_expression
   88                    | additive_expression ADD multiplicative_expression
   89                    | additive_expression SUB multiplicative_expression

   90 multiplicative_expression: unary_expression
   91                          | multiplicative_expression MUL unary_expression
   92                          | multiplicative_expression DIV unary_expression
   93                          | multiplicative_expression MOD unary_expression
   94                          | multiplicative_expression BIT_AND unary_expression
   95                          | multiplicative_expression BIT_OR unary_expression
   96                          | multiplicative_expression BIT_XOR unary_expression

   97 unary_expression: postfix_expression
   98                 | SUB unary_expression
   99                 | EXCLAMATION unary_expression
  100                 | BIT_NOT unary_expression

  101 postfix_expression: primary_expression
  102                   | primary_expression INCREMENT
  103                   | primary_expression DECREMENT
  104                   | primary_expression INSTANCEOF type_specifier

  105 primary_expression: primary_no_new_array
  106                   | array_creation
  107                   | IDENTIFIER
  108                   | AUTOVAR

  109 primary_no_new_array: primary_no_new_array LB expression RB
  110                     | IDENTIFIER LB expression RB
  111                     | primary_expression DOT IDENTIFIER
  112                     | primary_expression LP argument_list RP
  113                     | primary_expression LP RP
  114                     | LP expression RP
  115                     | primary_expression DOWN_CAST_BEGIN type_specifier DOWN_CAST_END
  116                     | INT_LITERAL
  117                     | DOUBLE_LITERAL
  118                     | STRING_LITERAL
  119                     | REGEXP_LITERAL
  120                     | TRUE_T
  121                     | FALSE_T
  122                     | NULL_T
  123                     | array_literal
  124                     | THIS_T
  125                     | SUPER_T
  126                     | NEW DELEGATE LP RP
  127                     | NEW IDENTIFIER LP RP
  128                     | NEW IDENTIFIER LP argument_list RP
  129                     | NEW IDENTIFIER DOT IDENTIFIER LP RP
  130                     | NEW IDENTIFIER DOT IDENTIFIER LP argument_list RP

  131 array_literal: LC expression_list RC
  132              | LC expression_list COMMA RC

  133 array_creation: NEW basic_type_specifier dimension_expression_list global
  134               | NEW basic_type_specifier dimension_expression_list dimension_list global
  135               | NEW identifier_type_specifier dimension_expression_list global
  136               | NEW identifier_type_specifier dimension_expression_list dimension_list global
  137               | NEW template_type_specifier dimension_expression_list global
  138               | NEW template_type_specifier dimension_expression_list dimension_list global

  139 dimension_expression_list: dimension_expression
  140                          | dimension_expression_list dimension_expression

  141 dimension_expression: LB expression RB

  142 dimension_list: LB RB
  143               | dimension_list LB RB

  144 expression_list: /* empty */
  145                | assignment_expression
  146                | expression_list COMMA assignment_expression

  147 statement: expression CR
  148          | if_statement
  149          | switch_statement
  150          | while_statement
  151          | for_statement
  152          | do_while_statement
  153          | foreach_statement
  154          | return_statement
  155          | break_statement
  156          | continue_statement
  157          | try_statement
  158          | throw_statement
  159          | declaration_statement
  160          | CR

  161 if_statement: IF expression THEN myblock
  162             | IF expression THEN myblock ELSE myblock
  163             | IF expression THEN myblock elsif_list
  164             | IF expression THEN myblock elsif_list ELSE myblock

  165 elsif_list: elsif
  166           | elsif_list elsif

  167 elsif: ELSIF expression THEN myblock

  168 label_opt: /* empty */
  169          | IDENTIFIER COLON

  170 switch_statement: SWITCH expression CR case_list default_opt

  171 case_list: one_case
  172          | case_list one_case

  173 one_case: CASE case_expression_list myblock

  174 default_opt: /* empty */
  175            | DEFAULT_T myblock

  176 case_expression_list: assignment_expression
  177                     | expression_list COMMA assignment_expression

  178 while_statement: label_opt WHILE expression myblock

  179 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock

  180 do_while_statement: label_opt DO_T block WHILE LP expression RP CR

  181 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP block

  182 expression_opt: /* empty */
  183               | expression

  184 return_statement: RETURN_T expression_opt CR

  185 identifier_opt: /* empty */
  186               | IDENTIFIER

  187 break_statement: BREAK identifier_opt CR

  188 continue_statement: CONTINUE identifier_opt CR

  189 try_statement: TRY myblock catch_list FINALLY myblock
  190              | TRY myblock FINALLY block
  191              | TRY myblock catch_list

  192 catch_list: catch_clause
  193           | catch_list catch_clause

  194 @2: /* empty */

  195 catch_clause: CATCH @2 type_specifier IDENTIFIER myblock

  196 throw_statement: THROW expression CR
  197                | THROW CR

  198 declaration_statement: DIM IDENTIFIER AS shared type_specifier CR
  199                      | DIM IDENTIFIER AS shared type_specifier ASSIGN_T expression CR
  200                      | FINAL IDENTIFIER AS type_specifier CR
  201                      | FINAL IDENTIFIER AS type_specifier ASSIGN_T expression CR

  202 @3: /* empty */

  203 block: LC @3 statement_list RC
  204      | LC RC

  205 template_def_list: IDENTIFIER
  206                  | template_def_list COMMA IDENTIFIER
  207                  | IDENTIFIER COLON identifier_type_specifier
  208                  | template_def_list COMMA IDENTIFIER COLON identifier_type_specifier

  209 template_list: LT template_def_list GT
  210              | /* empty */

  211 $@4: /* empty */

  212 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list END

  213 $@5: /* empty */

  214 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END

  215 $@6: /* empty */

  216 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@6 END

  217 $@7: /* empty */

  218 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 END

  219 class_or_member_modifier_list: class_or_member_modifier
  220                              | class_or_member_modifier_list class_or_member_modifier

  221 class_or_member_modifier: access_modifier
  222                         | VIRTUAL_T
  223                         | OVERRIDE_T
  224                         | ABSTRACT_T

  225 class_or_interface: CLASS_T
  226                   | INTERFACE_T

  227 extends: /* empty */
  228        | COLON extends_list

  229 extends_list: IDENTIFIER
  230             | extends_list COMMA IDENTIFIER

  231 member_declaration_list: member_declaration
  232                        | member_declaration_list member_declaration

  233 member_declaration: method_member
  234                   | field_member

  235 method_member: method_function_definition
  236              | class_or_member_modifier_list method_function_definition
  237              | constructor_definition
  238              | class_or_member_modifier_list constructor_definition

  239 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock
  240                           | FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause myblock
  241                           | DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  242                           | DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR
  243                           | BSUB IDENTIFIER LP parameter_list RP throws_clause myblock
  244                           | BSUB IDENTIFIER LP RP throws_clause myblock
  245                           | DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause CR
  246                           | DECLARE BSUB IDENTIFIER LP RP throws_clause CR

  247 apostrophe: /* empty */
  248           | COMMA APOSTROPHE

  249 throws_clause: /* empty */
  250              | THROWS exception_list

  251 exception_list: IDENTIFIER
  252               | exception_list COMMA IDENTIFIER

  253 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause myblock
  254                       | CONSTRUCTOR IDENTIFIER LP RP throws_clause myblock
  255                       | DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR
  256                       | DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause CR

  257 access_modifier: PUBLIC_T
  258                | PRIVATE_T

  259 initializer_opt: /* empty */
  260                | ASSIGN_T expression

  261 field_member: DIM IDENTIFIER AS type_specifier initializer_opt CR
  262             | class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR
  263             | FINAL IDENTIFIER AS type_specifier initializer_opt CR
  264             | class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt CR
  265             | FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR

  266 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  267                    | DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

  268 enum_definition: ENUM IDENTIFIER LC enumerator_list RC
  269                | ENUM IDENTIFIER LC enumerator_list COMMA RC

  270 enumerator_list: IDENTIFIER
  271                | enumerator_list COMMA IDENTIFIER

  272 const_definition: CONST IDENTIFIER ASSIGN_T expression CR
  273                 | CONST type_specifier IDENTIFIER CR

  274 shared: /* empty */
  275       | SHARED

  276 global: /* empty */
  277       | GLOBAL

  278 unsafe: /* empty */
  279       | UNSAFE CR
  280       | SAFE CR

  281 @8: /* empty */

  282 myblock: CR unsafe @8 statement_list END
  283        | CR END


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 116
DOUBLE_LITERAL (259) 117
STRING_LITERAL (260) 118
REGEXP_LITERAL (261) 119
IDENTIFIER (262) 11 12 15 30 32 36 44 48 49 50 51 52 53 54 55 57 58
    107 110 111 127 128 129 130 169 181 186 195 198 199 200 201 205
    206 207 208 212 214 216 218 229 230 239 240 241 242 243 244 245
    246 251 252 253 254 255 256 261 262 263 264 265 266 267 268 269
    270 271 272 273
AUTOVAR (263) 108
IF (264) 161 162 163 164
ELSE (265) 162 164
ELSIF (266) 167
SWITCH (267) 170
CASE (268) 173
DEFAULT_T (269) 175
WHILE (270) 178 180
DO_T (271) 180
FOR (272) 179
FOREACH (273) 181
RETURN_T (274) 184
BREAK (275) 187
CONTINUE (276) 188
NULL_T (277) 122
LP (278) 48 49 50 51 52 53 54 55 112 113 114 126 127 128 129 130 180
    181 239 240 241 242 243 244 245 246 253 254 255 256 266 267
RP (279) 48 49 50 51 52 53 54 55 112 113 114 126 127 128 129 130 180
    181 239 240 241 242 243 244 245 246 253 254 255 256 266 267
LC (280) 131 132 203 204 268 269
RC (281) 131 132 203 204 268 269
LB (282) 31 32 33 34 109 110 141 142 143
RB (283) 31 32 33 34 109 110 141 142 143
SEMICOLON (284) 179
COLON (285) 169 181 207 208 228
COMMA (286) 42 58 60 64 132 146 177 206 208 230 248 252 269 271
ASSIGN_T (287) 67 199 201 260 272
LOGICAL_AND (288) 78
LOGICAL_OR (289) 76
EQ (290) 80
NE (291) 81
GT (292) 36 83 209
GE (293) 84
LT (294) 36 85 209
LE (295) 86
ADD (296) 88
SUB (297) 89 98
MUL (298) 91
DIV (299) 92
MOD (300) 93
BIT_AND (301) 94
BIT_OR (302) 95
BIT_XOR (303) 96
BIT_NOT (304) 100
TRUE_T (305) 120
FALSE_T (306) 121
EXCLAMATION (307) 99
DOT (308) 12 111 129 130
ADD_ASSIGN_T (309) 68
SUB_ASSIGN_T (310) 69
MUL_ASSIGN_T (311) 72
DIV_ASSIGN_T (312) 73
MOD_ASSIGN_T (313) 74
INCREMENT (314) 102
DECREMENT (315) 103
TRY (316) 189 190 191
CATCH (317) 195
FINALLY (318) 189 190
THROW (319) 196 197
THROWS (320) 250
VOID_T (321) 22
BOOLEAN_T (322) 23
INT_T (323) 24
DOUBLE_T (324) 25
STRING_T (325) 26
VARIENT_T (326) 27
NATIVE_POINTER_T (327) 28
NEW (328) 126 127 128 129 130 133 134 135 136 137 138
REQUIRE (329) 10
RENAME (330) 15
CLASS_T (331) 225
INTERFACE_T (332) 226
PUBLIC_T (333) 257
PRIVATE_T (334) 258
VIRTUAL_T (335) 222
OVERRIDE_T (336) 223
ABSTRACT_T (337) 224
THIS_T (338) 124
SUPER_T (339) 125
CONSTRUCTOR (340) 253 254 255 256
INSTANCEOF (341) 104
DOWN_CAST_BEGIN (342) 115
DOWN_CAST_END (343) 115
DELEGATE (344) 29 126 266 267
FINAL (345) 200 201 263 264 265
ENUM (346) 268 269
CONST (347) 272 273
FUNCTION (348) 48 49 52 53 239 240 241 242
AS (349) 48 49 52 53 57 58 198 199 200 201 239 240 241 242 261 262
    263 264 265 266 267
THEN (350) 161 162 163 164 167
DIM (351) 198 199 261
END (352) 44 212 214 216 218 282 283
CR (353) 10 15 44 48 49 50 51 147 160 170 180 184 187 188 196 197 198
    199 200 201 212 214 216 218 241 242 245 246 255 256 261 262 263
    264 265 266 267 272 273 279 280 282 283
DECLARE (354) 48 49 50 51 241 242 245 246 255 256
BSUB (355) 50 51 54 55 243 244 245 246
APOSTROPHE (356) 248
LIB (357) 44
UNSAFE (358) 279
SAFE (359) 280
SHARED (360) 275
GLOBAL (361) 277
ATM_ADD_ASSIGN_T (362) 70
ATM_SUB_ASSIGN_T (363) 71


Nonterminals, with rules where they appear

$accept (109)
    on left: 0
translation_unit (110)
    on left: 1 2, on right: 0 2
initial_declaration (111)
    on left: 3 4 5 6 7, on right: 1 7
require_list (112)
    on left: 8 9, on right: 4 5 9
require_declaration (113)
    on left: 10, on right: 8 9
package_name (114)
    on left: 11 12, on right: 10 12 15
rename_list (115)
    on left: 13 14, on right: 4 6 14
rename_declaration (116)
    on left: 15, on right: 13 14
definition_or_statement (117)
    on left: 16 17 18 19 20 21, on right: 2
basic_type_specifier (118)
    on left: 22 23 24 25 26 27 28 29, on right: 31 37 133 134
identifier_type_specifier (119)
    on left: 30, on right: 39 135 136 207 208
array_type_specifier_sub (120)
    on left: 31 32 33 34, on right: 35
array_type_specifier (121)
    on left: 35, on right: 33 38
template_type_specifier (122)
    on left: 36, on right: 34 40 137 138
type_specifier (123)
    on left: 37 38 39 40, on right: 41 42 48 49 52 53 57 58 104 115
    195 198 199 200 201 239 240 241 242 261 262 263 264 265 266 267
    273
type_list (124)
    on left: 41 42, on right: 36 42
lib_function (125)
    on left: 44, on right: 7
$@1 (126)
    on left: 43, on right: 44
lib_function_declaration_list (127)
    on left: 45 46 47, on right: 44 46 47
function_declaration (128)
    on left: 48 49 50 51, on right: 46 56
function_definition (129)
    on left: 52 53 54 55 56, on right: 16
parameter_list (130)
    on left: 57 58, on right: 48 50 52 54 58 239 241 243 245 253 255
    266
argument_list (131)
    on left: 59 60, on right: 60 112 128 130
statement_list (132)
    on left: 61 62, on right: 62 203 282
expression (133)
    on left: 63 64, on right: 64 109 110 114 141 147 161 162 163 164
    167 170 178 180 181 183 196 199 201 260 272
assignment_expression (134)
    on left: 65 66, on right: 59 60 63 64 66 145 146 176 177
assignment_operator (135)
    on left: 67 68 69 70 71 72 73 74, on right: 66
logical_or_expression (136)
    on left: 75 76, on right: 65 76
logical_and_expression (137)
    on left: 77 78, on right: 75 76 78
equality_expression (138)
    on left: 79 80 81, on right: 77 78 80 81
relational_expression (139)
    on left: 82 83 84 85 86, on right: 79 80 81 83 84 85 86
additive_expression (140)
    on left: 87 88 89, on right: 82 83 84 85 86 88 89
multiplicative_expression (141)
    on left: 90 91 92 93 94 95 96, on right: 87 88 89 91 92 93 94 95
    96
unary_expression (142)
    on left: 97 98 99 100, on right: 90 91 92 93 94 95 96 98 99 100
postfix_expression (143)
    on left: 101 102 103 104, on right: 97
primary_expression (144)
    on left: 105 106 107 108, on right: 66 101 102 103 104 111 112
    113 115
primary_no_new_array (145)
    on left: 109 110 111 112 113 114 115 116 117 118 119 120 121 122
    123 124 125 126 127 128 129 130, on right: 105 109
array_literal (146)
    on left: 131 132, on right: 123
array_creation (147)
    on left: 133 134 135 136 137 138, on right: 106
dimension_expression_list (148)
    on left: 139 140, on right: 133 134 135 136 137 138 140
dimension_expression (149)
    on left: 141, on right: 139 140
dimension_list (150)
    on left: 142 143, on right: 134 136 138 143
expression_list (151)
    on left: 144 145 146, on right: 131 132 146 177
statement (152)
    on left: 147 148 149 150 151 152 153 154 155 156 157 158 159 160,
    on right: 18 61 62
if_statement (153)
    on left: 161 162 163 164, on right: 148
elsif_list (154)
    on left: 165 166, on right: 163 164 166
elsif (155)
    on left: 167, on right: 165 166
label_opt (156)
    on left: 168 169, on right: 178 179 180 181
switch_statement (157)
    on left: 170, on right: 149
case_list (158)
    on left: 171 172, on right: 170 172
one_case (159)
    on left: 173, on right: 171 172
default_opt (160)
    on left: 174 175, on right: 170
case_expression_list (161)
    on left: 176 177, on right: 173
while_statement (162)
    on left: 178, on right: 150
for_statement (163)
    on left: 179, on right: 151
do_while_statement (164)
    on left: 180, on right: 152
foreach_statement (165)
    on left: 181, on right: 153
expression_opt (166)
    on left: 182 183, on right: 179 184
return_statement (167)
    on left: 184, on right: 154
identifier_opt (168)
    on left: 185 186, on right: 187 188
break_statement (169)
    on left: 187, on right: 155
continue_statement (170)
    on left: 188, on right: 156
try_statement (171)
    on left: 189 190 191, on right: 157
catch_list (172)
    on left: 192 193, on right: 189 191 193
catch_clause (173)
    on left: 195, on right: 192 193
@2 (174)
    on left: 194, on right: 195
throw_statement (175)
    on left: 196 197, on right: 158
declaration_statement (176)
    on left: 198 199 200 201, on right: 159
block (177)
    on left: 203 204, on right: 180 181 190
@3 (178)
    on left: 202, on right: 203
template_def_list (179)
    on left: 205 206 207 208, on right: 206 208 209
template_list (180)
    on left: 209 210, on right: 212 214 216 218
class_definition (181)
    on left: 212 214 216 218, on right: 17 47
$@4 (182)
    on left: 211, on right: 212
$@5 (183)
    on left: 213, on right: 214
$@6 (184)
    on left: 215, on right: 216
$@7 (185)
    on left: 217, on right: 218
class_or_member_modifier_list (186)
    on left: 219 220, on right: 214 218 220 236 238 262 264 265
class_or_member_modifier (187)
    on left: 221 222 223 224, on right: 219 220
class_or_interface (188)
    on left: 225 226, on right: 212 214 216 218
extends (189)
    on left: 227 228, on right: 212 214 216 218
extends_list (190)
    on left: 229 230, on right: 228 230
member_declaration_list (191)
    on left: 231 232, on right: 212 214 232
member_declaration (192)
    on left: 233 234, on right: 231 232
method_member (193)
    on left: 235 236 237 238, on right: 233
method_function_definition (194)
    on left: 239 240 241 242 243 244 245 246, on right: 235 236
apostrophe (195)
    on left: 247 248, on right: 48 49 50 51 52 53 54 55 266 267
throws_clause (196)
    on left: 249 250, on right: 48 49 50 51 52 53 54 55 239 240 241
    242 243 244 245 246 253 254 255 256 266 267
exception_list (197)
    on left: 251 252, on right: 250 252
constructor_definition (198)
    on left: 253 254 255 256, on right: 237 238
access_modifier (199)
    on left: 257 258, on right: 221
initializer_opt (200)
    on left: 259 260, on right: 261 262 263 264 265
field_member (201)
    on left: 261 262 263 264 265, on right: 234
delegate_definition (202)
    on left: 266 267, on right: 19
enum_definition (203)
    on left: 268 269, on right: 20
enumerator_list (204)
    on left: 270 271, on right: 268 269 271
const_definition (205)
    on left: 272 273, on right: 21
shared (206)
    on left: 274 275, on right: 198 199 212 214 216 218
global (207)
    on left: 276 277, on right: 35 133 134 135 136 137 138
unsafe (208)
    on left: 278 279 280, on right: 282
myblock (209)
    on left: 282 283, on right: 52 53 54 55 161 162 163 164 167 173
    175 178 179 189 190 191 195 239 240 243 244 253 254
@8 (210)
    on left: 281, on right: 282


state 0

    0 $accept: . translation_unit $end

    REQUIRE  shift, and go to state 1
    RENAME   shift, and go to state 2

    $default  reduce using rule 3 (initial_declaration)

    translation_unit     go to state 3
    initial_declaration  go to state 4
    require_list         go to state 5
    require_declaration  go to state 6
    rename_list          go to state 7
    rename_declaration   go to state 8


state 1

   10 require_declaration: REQUIRE . package_name CR

    IDENTIFIER  shift, and go to state 9

    package_name  go to state 10


state 2

   15 rename_declaration: RENAME . package_name IDENTIFIER CR

    IDENTIFIER  shift, and go to state 9

    package_name  go to state 11


state 3

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . definition_or_statement

    $end            shift, and go to state 12
    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    DELEGATE        shift, and go to state 37
    FINAL           shift, and go to state 38
    ENUM            shift, and go to state 39
    CONST           shift, and go to state 40
    FUNCTION        shift, and go to state 41
    DIM             shift, and go to state 42
    CR              shift, and go to state 43
    DECLARE         shift, and go to state 44
    BSUB            shift, and go to state 45
    SHARED          shift, and go to state 46

    WHILE     reduce using rule 168 (label_opt)
    DO_T      reduce using rule 168 (label_opt)
    FOR       reduce using rule 168 (label_opt)
    FOREACH   reduce using rule 168 (label_opt)
    $default  reduce using rule 274 (shared)

    definition_or_statement    go to state 47
    function_declaration       go to state 48
    function_definition        go to state 49
    expression                 go to state 50
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    statement                  go to state 64
    if_statement               go to state 65
    label_opt                  go to state 66
    switch_statement           go to state 67
    while_statement            go to state 68
    for_statement              go to state 69
    do_while_statement         go to state 70
    foreach_statement          go to state 71
    return_statement           go to state 72
    break_statement            go to state 73
    continue_statement         go to state 74
    try_statement              go to state 75
    throw_statement            go to state 76
    declaration_statement      go to state 77
    class_definition           go to state 78
    delegate_definition        go to state 79
    enum_definition            go to state 80
    const_definition           go to state 81
    shared                     go to state 82


state 4

    1 translation_unit: initial_declaration .
    7 initial_declaration: initial_declaration . lib_function

    LIB  shift, and go to state 83

    $default  reduce using rule 1 (translation_unit)

    lib_function  go to state 84


state 5

    4 initial_declaration: require_list . rename_list
    5                    | require_list .
    9 require_list: require_list . require_declaration

    REQUIRE  shift, and go to state 1
    RENAME   shift, and go to state 2

    $default  reduce using rule 5 (initial_declaration)

    require_declaration  go to state 85
    rename_list          go to state 86
    rename_declaration   go to state 8


state 6

    8 require_list: require_declaration .

    $default  reduce using rule 8 (require_list)


state 7

    6 initial_declaration: rename_list .
   14 rename_list: rename_list . rename_declaration

    RENAME  shift, and go to state 2

    $default  reduce using rule 6 (initial_declaration)

    rename_declaration  go to state 87


state 8

   13 rename_list: rename_declaration .

    $default  reduce using rule 13 (rename_list)


state 9

   11 package_name: IDENTIFIER .

    $default  reduce using rule 11 (package_name)


state 10

   10 require_declaration: REQUIRE package_name . CR
   12 package_name: package_name . DOT IDENTIFIER

    DOT  shift, and go to state 88
    CR   shift, and go to state 89


state 11

   12 package_name: package_name . DOT IDENTIFIER
   15 rename_declaration: RENAME package_name . IDENTIFIER CR

    IDENTIFIER  shift, and go to state 90
    DOT         shift, and go to state 88


state 12

    0 $accept: translation_unit $end .

    $default  accept


state 13

  116 primary_no_new_array: INT_LITERAL .

    $default  reduce using rule 116 (primary_no_new_array)


state 14

  117 primary_no_new_array: DOUBLE_LITERAL .

    $default  reduce using rule 117 (primary_no_new_array)


state 15

  118 primary_no_new_array: STRING_LITERAL .

    $default  reduce using rule 118 (primary_no_new_array)


state 16

  119 primary_no_new_array: REGEXP_LITERAL .

    $default  reduce using rule 119 (primary_no_new_array)


state 17

  107 primary_expression: IDENTIFIER .
  110 primary_no_new_array: IDENTIFIER . LB expression RB
  169 label_opt: IDENTIFIER . COLON

    LB     shift, and go to state 91
    COLON  shift, and go to state 92

    $default  reduce using rule 107 (primary_expression)


state 18

  108 primary_expression: AUTOVAR .

    $default  reduce using rule 108 (primary_expression)


state 19

  161 if_statement: IF . expression THEN myblock
  162             | IF . expression THEN myblock ELSE myblock
  163             | IF . expression THEN myblock elsif_list
  164             | IF . expression THEN myblock elsif_list ELSE myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 94
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 20

  170 switch_statement: SWITCH . expression CR case_list default_opt

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 95
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 21

  184 return_statement: RETURN_T . expression_opt CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 182 (expression_opt)

    expression                 go to state 96
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_opt             go to state 97


state 22

  187 break_statement: BREAK . identifier_opt CR

    IDENTIFIER  shift, and go to state 98

    $default  reduce using rule 185 (identifier_opt)

    identifier_opt  go to state 99


state 23

  188 continue_statement: CONTINUE . identifier_opt CR

    IDENTIFIER  shift, and go to state 98

    $default  reduce using rule 185 (identifier_opt)

    identifier_opt  go to state 100


state 24

  122 primary_no_new_array: NULL_T .

    $default  reduce using rule 122 (primary_no_new_array)


state 25

  114 primary_no_new_array: LP . expression RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 101
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 26

  131 array_literal: LC . expression_list RC
  132              | LC . expression_list COMMA RC

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 144 (expression_list)

    assignment_expression      go to state 102
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_list            go to state 103


state 27

   98 unary_expression: SUB . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 104
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 28

  100 unary_expression: BIT_NOT . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 106
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 29

  120 primary_no_new_array: TRUE_T .

    $default  reduce using rule 120 (primary_no_new_array)


state 30

  121 primary_no_new_array: FALSE_T .

    $default  reduce using rule 121 (primary_no_new_array)


state 31

   99 unary_expression: EXCLAMATION . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 107
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 32

  189 try_statement: TRY . myblock catch_list FINALLY myblock
  190              | TRY . myblock FINALLY block
  191              | TRY . myblock catch_list

    CR  shift, and go to state 108

    myblock  go to state 109


state 33

  196 throw_statement: THROW . expression CR
  197                | THROW . CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    CR              shift, and go to state 110

    expression                 go to state 111
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 34

  126 primary_no_new_array: NEW . DELEGATE LP RP
  127                     | NEW . IDENTIFIER LP RP
  128                     | NEW . IDENTIFIER LP argument_list RP
  129                     | NEW . IDENTIFIER DOT IDENTIFIER LP RP
  130                     | NEW . IDENTIFIER DOT IDENTIFIER LP argument_list RP
  133 array_creation: NEW . basic_type_specifier dimension_expression_list global
  134               | NEW . basic_type_specifier dimension_expression_list dimension_list global
  135               | NEW . identifier_type_specifier dimension_expression_list global
  136               | NEW . identifier_type_specifier dimension_expression_list dimension_list global
  137               | NEW . template_type_specifier dimension_expression_list global
  138               | NEW . template_type_specifier dimension_expression_list dimension_list global

    IDENTIFIER        shift, and go to state 112
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 120

    basic_type_specifier       go to state 121
    identifier_type_specifier  go to state 122
    template_type_specifier    go to state 123


state 35

  124 primary_no_new_array: THIS_T .

    $default  reduce using rule 124 (primary_no_new_array)


state 36

  125 primary_no_new_array: SUPER_T .

    $default  reduce using rule 125 (primary_no_new_array)


state 37

  266 delegate_definition: DELEGATE . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  267                    | DELEGATE . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 124


state 38

  200 declaration_statement: FINAL . IDENTIFIER AS type_specifier CR
  201                      | FINAL . IDENTIFIER AS type_specifier ASSIGN_T expression CR

    IDENTIFIER  shift, and go to state 125


state 39

  268 enum_definition: ENUM . IDENTIFIER LC enumerator_list RC
  269                | ENUM . IDENTIFIER LC enumerator_list COMMA RC

    IDENTIFIER  shift, and go to state 126


state 40

  272 const_definition: CONST . IDENTIFIER ASSIGN_T expression CR
  273                 | CONST . type_specifier IDENTIFIER CR

    IDENTIFIER        shift, and go to state 127
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 134


state 41

   52 function_definition: FUNCTION . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   53                    | FUNCTION . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 135


state 42

  198 declaration_statement: DIM . IDENTIFIER AS shared type_specifier CR
  199                      | DIM . IDENTIFIER AS shared type_specifier ASSIGN_T expression CR

    IDENTIFIER  shift, and go to state 136


state 43

  160 statement: CR .

    $default  reduce using rule 160 (statement)


state 44

   48 function_declaration: DECLARE . FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   49                     | DECLARE . FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR
   50                     | DECLARE . BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   51                     | DECLARE . BSUB IDENTIFIER LP apostrophe RP throws_clause CR

    FUNCTION  shift, and go to state 137
    BSUB      shift, and go to state 138


state 45

   54 function_definition: BSUB . IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock
   55                    | BSUB . IDENTIFIER LP apostrophe RP throws_clause myblock

    IDENTIFIER  shift, and go to state 139


state 46

  275 shared: SHARED .

    $default  reduce using rule 275 (shared)


state 47

    2 translation_unit: translation_unit definition_or_statement .

    $default  reduce using rule 2 (translation_unit)


state 48

   56 function_definition: function_declaration .

    $default  reduce using rule 56 (function_definition)


state 49

   16 definition_or_statement: function_definition .

    $default  reduce using rule 16 (definition_or_statement)


state 50

   64 expression: expression . COMMA assignment_expression
  147 statement: expression . CR

    COMMA  shift, and go to state 140
    CR     shift, and go to state 141


state 51

   63 expression: assignment_expression .

    $default  reduce using rule 63 (expression)


state 52

   65 assignment_expression: logical_or_expression .
   76 logical_or_expression: logical_or_expression . LOGICAL_OR logical_and_expression

    LOGICAL_OR  shift, and go to state 142

    $default  reduce using rule 65 (assignment_expression)


state 53

   75 logical_or_expression: logical_and_expression .
   78 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 143

    $default  reduce using rule 75 (logical_or_expression)


state 54

   77 logical_and_expression: equality_expression .
   80 equality_expression: equality_expression . EQ relational_expression
   81                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 144
    NE  shift, and go to state 145

    $default  reduce using rule 77 (logical_and_expression)


state 55

   79 equality_expression: relational_expression .
   83 relational_expression: relational_expression . GT additive_expression
   84                      | relational_expression . GE additive_expression
   85                      | relational_expression . LT additive_expression
   86                      | relational_expression . LE additive_expression

    GT  shift, and go to state 146
    GE  shift, and go to state 147
    LT  shift, and go to state 148
    LE  shift, and go to state 149

    $default  reduce using rule 79 (equality_expression)


state 56

   82 relational_expression: additive_expression .
   88 additive_expression: additive_expression . ADD multiplicative_expression
   89                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 150
    SUB  shift, and go to state 151

    $default  reduce using rule 82 (relational_expression)


state 57

   87 additive_expression: multiplicative_expression .
   91 multiplicative_expression: multiplicative_expression . MUL unary_expression
   92                          | multiplicative_expression . DIV unary_expression
   93                          | multiplicative_expression . MOD unary_expression
   94                          | multiplicative_expression . BIT_AND unary_expression
   95                          | multiplicative_expression . BIT_OR unary_expression
   96                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 152
    DIV      shift, and go to state 153
    MOD      shift, and go to state 154
    BIT_AND  shift, and go to state 155
    BIT_OR   shift, and go to state 156
    BIT_XOR  shift, and go to state 157

    $default  reduce using rule 87 (additive_expression)


state 58

   90 multiplicative_expression: unary_expression .

    $default  reduce using rule 90 (multiplicative_expression)


state 59

   97 unary_expression: postfix_expression .

    $default  reduce using rule 97 (unary_expression)


state 60

   66 assignment_expression: primary_expression . assignment_operator assignment_expression
  101 postfix_expression: primary_expression .
  102                   | primary_expression . INCREMENT
  103                   | primary_expression . DECREMENT
  104                   | primary_expression . INSTANCEOF type_specifier
  111 primary_no_new_array: primary_expression . DOT IDENTIFIER
  112                     | primary_expression . LP argument_list RP
  113                     | primary_expression . LP RP
  115                     | primary_expression . DOWN_CAST_BEGIN type_specifier DOWN_CAST_END

    LP                shift, and go to state 158
    ASSIGN_T          shift, and go to state 159
    DOT               shift, and go to state 160
    ADD_ASSIGN_T      shift, and go to state 161
    SUB_ASSIGN_T      shift, and go to state 162
    MUL_ASSIGN_T      shift, and go to state 163
    DIV_ASSIGN_T      shift, and go to state 164
    MOD_ASSIGN_T      shift, and go to state 165
    INCREMENT         shift, and go to state 166
    DECREMENT         shift, and go to state 167
    INSTANCEOF        shift, and go to state 168
    DOWN_CAST_BEGIN   shift, and go to state 169
    ATM_ADD_ASSIGN_T  shift, and go to state 170
    ATM_SUB_ASSIGN_T  shift, and go to state 171

    $default  reduce using rule 101 (postfix_expression)

    assignment_operator  go to state 172


state 61

  105 primary_expression: primary_no_new_array .
  109 primary_no_new_array: primary_no_new_array . LB expression RB

    LB  shift, and go to state 173

    $default  reduce using rule 105 (primary_expression)


state 62

  123 primary_no_new_array: array_literal .

    $default  reduce using rule 123 (primary_no_new_array)


state 63

  106 primary_expression: array_creation .

    $default  reduce using rule 106 (primary_expression)


state 64

   18 definition_or_statement: statement .

    $default  reduce using rule 18 (definition_or_statement)


state 65

  148 statement: if_statement .

    $default  reduce using rule 148 (statement)


state 66

  178 while_statement: label_opt . WHILE expression myblock
  179 for_statement: label_opt . FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock
  180 do_while_statement: label_opt . DO_T block WHILE LP expression RP CR
  181 foreach_statement: label_opt . FOREACH LP IDENTIFIER COLON expression RP block

    WHILE    shift, and go to state 174
    DO_T     shift, and go to state 175
    FOR      shift, and go to state 176
    FOREACH  shift, and go to state 177


state 67

  149 statement: switch_statement .

    $default  reduce using rule 149 (statement)


state 68

  150 statement: while_statement .

    $default  reduce using rule 150 (statement)


state 69

  151 statement: for_statement .

    $default  reduce using rule 151 (statement)


state 70

  152 statement: do_while_statement .

    $default  reduce using rule 152 (statement)


state 71

  153 statement: foreach_statement .

    $default  reduce using rule 153 (statement)


state 72

  154 statement: return_statement .

    $default  reduce using rule 154 (statement)


state 73

  155 statement: break_statement .

    $default  reduce using rule 155 (statement)


state 74

  156 statement: continue_statement .

    $default  reduce using rule 156 (statement)


state 75

  157 statement: try_statement .

    $default  reduce using rule 157 (statement)


state 76

  158 statement: throw_statement .

    $default  reduce using rule 158 (statement)


state 77

  159 statement: declaration_statement .

    $default  reduce using rule 159 (statement)


state 78

   17 definition_or_statement: class_definition .

    $default  reduce using rule 17 (definition_or_statement)


state 79

   19 definition_or_statement: delegate_definition .

    $default  reduce using rule 19 (definition_or_statement)


state 80

   20 definition_or_statement: enum_definition .

    $default  reduce using rule 20 (definition_or_statement)


state 81

   21 definition_or_statement: const_definition .

    $default  reduce using rule 21 (definition_or_statement)


state 82

  212 class_definition: shared . class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list END
  214                 | shared . class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END
  216                 | shared . class_or_interface IDENTIFIER template_list extends CR $@6 END
  218                 | shared . class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 END

    CLASS_T      shift, and go to state 178
    INTERFACE_T  shift, and go to state 179
    PUBLIC_T     shift, and go to state 180
    PRIVATE_T    shift, and go to state 181
    VIRTUAL_T    shift, and go to state 182
    OVERRIDE_T   shift, and go to state 183
    ABSTRACT_T   shift, and go to state 184

    class_or_member_modifier_list  go to state 185
    class_or_member_modifier       go to state 186
    class_or_interface             go to state 187
    access_modifier                go to state 188


state 83

   44 lib_function: LIB . IDENTIFIER $@1 CR lib_function_declaration_list END

    IDENTIFIER  shift, and go to state 189


state 84

    7 initial_declaration: initial_declaration lib_function .

    $default  reduce using rule 7 (initial_declaration)


state 85

    9 require_list: require_list require_declaration .

    $default  reduce using rule 9 (require_list)


state 86

    4 initial_declaration: require_list rename_list .
   14 rename_list: rename_list . rename_declaration

    RENAME  shift, and go to state 2

    $default  reduce using rule 4 (initial_declaration)

    rename_declaration  go to state 87


state 87

   14 rename_list: rename_list rename_declaration .

    $default  reduce using rule 14 (rename_list)


state 88

   12 package_name: package_name DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 190


state 89

   10 require_declaration: REQUIRE package_name CR .

    $default  reduce using rule 10 (require_declaration)


state 90

   15 rename_declaration: RENAME package_name IDENTIFIER . CR

    CR  shift, and go to state 191


state 91

  110 primary_no_new_array: IDENTIFIER LB . expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 192
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 92

  169 label_opt: IDENTIFIER COLON .

    $default  reduce using rule 169 (label_opt)


state 93

  107 primary_expression: IDENTIFIER .
  110 primary_no_new_array: IDENTIFIER . LB expression RB

    LB  shift, and go to state 91

    $default  reduce using rule 107 (primary_expression)


state 94

   64 expression: expression . COMMA assignment_expression
  161 if_statement: IF expression . THEN myblock
  162             | IF expression . THEN myblock ELSE myblock
  163             | IF expression . THEN myblock elsif_list
  164             | IF expression . THEN myblock elsif_list ELSE myblock

    COMMA  shift, and go to state 140
    THEN   shift, and go to state 193


state 95

   64 expression: expression . COMMA assignment_expression
  170 switch_statement: SWITCH expression . CR case_list default_opt

    COMMA  shift, and go to state 140
    CR     shift, and go to state 194


state 96

   64 expression: expression . COMMA assignment_expression
  183 expression_opt: expression .

    COMMA  shift, and go to state 140

    $default  reduce using rule 183 (expression_opt)


state 97

  184 return_statement: RETURN_T expression_opt . CR

    CR  shift, and go to state 195


state 98

  186 identifier_opt: IDENTIFIER .

    $default  reduce using rule 186 (identifier_opt)


state 99

  187 break_statement: BREAK identifier_opt . CR

    CR  shift, and go to state 196


state 100

  188 continue_statement: CONTINUE identifier_opt . CR

    CR  shift, and go to state 197


state 101

   64 expression: expression . COMMA assignment_expression
  114 primary_no_new_array: LP expression . RP

    RP     shift, and go to state 198
    COMMA  shift, and go to state 140


state 102

  145 expression_list: assignment_expression .

    $default  reduce using rule 145 (expression_list)


state 103

  131 array_literal: LC expression_list . RC
  132              | LC expression_list . COMMA RC
  146 expression_list: expression_list . COMMA assignment_expression

    RC     shift, and go to state 199
    COMMA  shift, and go to state 200


state 104

   98 unary_expression: SUB unary_expression .

    $default  reduce using rule 98 (unary_expression)


state 105

  101 postfix_expression: primary_expression .
  102                   | primary_expression . INCREMENT
  103                   | primary_expression . DECREMENT
  104                   | primary_expression . INSTANCEOF type_specifier
  111 primary_no_new_array: primary_expression . DOT IDENTIFIER
  112                     | primary_expression . LP argument_list RP
  113                     | primary_expression . LP RP
  115                     | primary_expression . DOWN_CAST_BEGIN type_specifier DOWN_CAST_END

    LP               shift, and go to state 158
    DOT              shift, and go to state 160
    INCREMENT        shift, and go to state 166
    DECREMENT        shift, and go to state 167
    INSTANCEOF       shift, and go to state 168
    DOWN_CAST_BEGIN  shift, and go to state 169

    $default  reduce using rule 101 (postfix_expression)


state 106

  100 unary_expression: BIT_NOT unary_expression .

    $default  reduce using rule 100 (unary_expression)


state 107

   99 unary_expression: EXCLAMATION unary_expression .

    $default  reduce using rule 99 (unary_expression)


state 108

  282 myblock: CR . unsafe @8 statement_list END
  283        | CR . END

    END     shift, and go to state 201
    UNSAFE  shift, and go to state 202
    SAFE    shift, and go to state 203

    $default  reduce using rule 278 (unsafe)

    unsafe  go to state 204


state 109

  189 try_statement: TRY myblock . catch_list FINALLY myblock
  190              | TRY myblock . FINALLY block
  191              | TRY myblock . catch_list

    CATCH    shift, and go to state 205
    FINALLY  shift, and go to state 206

    catch_list    go to state 207
    catch_clause  go to state 208


state 110

  197 throw_statement: THROW CR .

    $default  reduce using rule 197 (throw_statement)


state 111

   64 expression: expression . COMMA assignment_expression
  196 throw_statement: THROW expression . CR

    COMMA  shift, and go to state 140
    CR     shift, and go to state 209


state 112

   30 identifier_type_specifier: IDENTIFIER .
   36 template_type_specifier: IDENTIFIER . LT type_list GT
  127 primary_no_new_array: NEW IDENTIFIER . LP RP
  128                     | NEW IDENTIFIER . LP argument_list RP
  129                     | NEW IDENTIFIER . DOT IDENTIFIER LP RP
  130                     | NEW IDENTIFIER . DOT IDENTIFIER LP argument_list RP

    LP   shift, and go to state 210
    LT   shift, and go to state 211
    DOT  shift, and go to state 212

    $default  reduce using rule 30 (identifier_type_specifier)


state 113

   22 basic_type_specifier: VOID_T .

    $default  reduce using rule 22 (basic_type_specifier)


state 114

   23 basic_type_specifier: BOOLEAN_T .

    $default  reduce using rule 23 (basic_type_specifier)


state 115

   24 basic_type_specifier: INT_T .

    $default  reduce using rule 24 (basic_type_specifier)


state 116

   25 basic_type_specifier: DOUBLE_T .

    $default  reduce using rule 25 (basic_type_specifier)


state 117

   26 basic_type_specifier: STRING_T .

    $default  reduce using rule 26 (basic_type_specifier)


state 118

   27 basic_type_specifier: VARIENT_T .

    $default  reduce using rule 27 (basic_type_specifier)


state 119

   28 basic_type_specifier: NATIVE_POINTER_T .

    $default  reduce using rule 28 (basic_type_specifier)


state 120

   29 basic_type_specifier: DELEGATE .
  126 primary_no_new_array: NEW DELEGATE . LP RP

    LP  shift, and go to state 213

    $default  reduce using rule 29 (basic_type_specifier)


state 121

  133 array_creation: NEW basic_type_specifier . dimension_expression_list global
  134               | NEW basic_type_specifier . dimension_expression_list dimension_list global

    LB  shift, and go to state 214

    dimension_expression_list  go to state 215
    dimension_expression       go to state 216


state 122

  135 array_creation: NEW identifier_type_specifier . dimension_expression_list global
  136               | NEW identifier_type_specifier . dimension_expression_list dimension_list global

    LB  shift, and go to state 214

    dimension_expression_list  go to state 217
    dimension_expression       go to state 216


state 123

  137 array_creation: NEW template_type_specifier . dimension_expression_list global
  138               | NEW template_type_specifier . dimension_expression_list dimension_list global

    LB  shift, and go to state 214

    dimension_expression_list  go to state 218
    dimension_expression       go to state 216


state 124

  266 delegate_definition: DELEGATE IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  267                    | DELEGATE IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause CR

    LP  shift, and go to state 219


state 125

  200 declaration_statement: FINAL IDENTIFIER . AS type_specifier CR
  201                      | FINAL IDENTIFIER . AS type_specifier ASSIGN_T expression CR

    AS  shift, and go to state 220


state 126

  268 enum_definition: ENUM IDENTIFIER . LC enumerator_list RC
  269                | ENUM IDENTIFIER . LC enumerator_list COMMA RC

    LC  shift, and go to state 221


state 127

   30 identifier_type_specifier: IDENTIFIER .
   32 array_type_specifier_sub: IDENTIFIER . LB RB
   36 template_type_specifier: IDENTIFIER . LT type_list GT
  272 const_definition: CONST IDENTIFIER . ASSIGN_T expression CR

    LB        shift, and go to state 222
    ASSIGN_T  shift, and go to state 223
    LT        shift, and go to state 211

    $default  reduce using rule 30 (identifier_type_specifier)


state 128

   29 basic_type_specifier: DELEGATE .

    $default  reduce using rule 29 (basic_type_specifier)


state 129

   31 array_type_specifier_sub: basic_type_specifier . LB RB
   37 type_specifier: basic_type_specifier .

    LB  shift, and go to state 224

    $default  reduce using rule 37 (type_specifier)


state 130

   39 type_specifier: identifier_type_specifier .

    $default  reduce using rule 39 (type_specifier)


state 131

   35 array_type_specifier: array_type_specifier_sub . global

    GLOBAL  shift, and go to state 225

    $default  reduce using rule 276 (global)

    global  go to state 226


state 132

   33 array_type_specifier_sub: array_type_specifier . LB RB
   38 type_specifier: array_type_specifier .

    LB  shift, and go to state 227

    $default  reduce using rule 38 (type_specifier)


state 133

   34 array_type_specifier_sub: template_type_specifier . LB RB
   40 type_specifier: template_type_specifier .

    LB  shift, and go to state 228

    $default  reduce using rule 40 (type_specifier)


state 134

  273 const_definition: CONST type_specifier . IDENTIFIER CR

    IDENTIFIER  shift, and go to state 229


state 135

   52 function_definition: FUNCTION IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   53                    | FUNCTION IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause myblock

    LP  shift, and go to state 230


state 136

  198 declaration_statement: DIM IDENTIFIER . AS shared type_specifier CR
  199                      | DIM IDENTIFIER . AS shared type_specifier ASSIGN_T expression CR

    AS  shift, and go to state 231


state 137

   48 function_declaration: DECLARE FUNCTION . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   49                     | DECLARE FUNCTION . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 232


state 138

   50 function_declaration: DECLARE BSUB . IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   51                     | DECLARE BSUB . IDENTIFIER LP apostrophe RP throws_clause CR

    IDENTIFIER  shift, and go to state 233


state 139

   54 function_definition: BSUB IDENTIFIER . LP parameter_list apostrophe RP throws_clause myblock
   55                    | BSUB IDENTIFIER . LP apostrophe RP throws_clause myblock

    LP  shift, and go to state 234


state 140

   64 expression: expression COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    assignment_expression      go to state 235
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 141

  147 statement: expression CR .

    $default  reduce using rule 147 (statement)


state 142

   76 logical_or_expression: logical_or_expression LOGICAL_OR . logical_and_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    logical_and_expression     go to state 236
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 143

   78 logical_and_expression: logical_and_expression LOGICAL_AND . equality_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    equality_expression        go to state 237
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 144

   80 equality_expression: equality_expression EQ . relational_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    relational_expression      go to state 238
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 145

   81 equality_expression: equality_expression NE . relational_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    relational_expression      go to state 239
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 146

   83 relational_expression: relational_expression GT . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    additive_expression        go to state 240
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 147

   84 relational_expression: relational_expression GE . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    additive_expression        go to state 241
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 148

   85 relational_expression: relational_expression LT . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    additive_expression        go to state 242
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 149

   86 relational_expression: relational_expression LE . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    additive_expression        go to state 243
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 150

   88 additive_expression: additive_expression ADD . multiplicative_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    multiplicative_expression  go to state 244
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 151

   89 additive_expression: additive_expression SUB . multiplicative_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    multiplicative_expression  go to state 245
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 105
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 152

   91 multiplicative_expression: multiplicative_expression MUL . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 246
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 153

   92 multiplicative_expression: multiplicative_expression DIV . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 247
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 154

   93 multiplicative_expression: multiplicative_expression MOD . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 248
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 155

   94 multiplicative_expression: multiplicative_expression BIT_AND . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 249
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 156

   95 multiplicative_expression: multiplicative_expression BIT_OR . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 250
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 157

   96 multiplicative_expression: multiplicative_expression BIT_XOR . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    unary_expression      go to state 251
    postfix_expression    go to state 59
    primary_expression    go to state 105
    primary_no_new_array  go to state 61
    array_literal         go to state 62
    array_creation        go to state 63


state 158

  112 primary_no_new_array: primary_expression LP . argument_list RP
  113                     | primary_expression LP . RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    RP              shift, and go to state 252
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    argument_list              go to state 253
    assignment_expression      go to state 254
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 159

   67 assignment_operator: ASSIGN_T .

    $default  reduce using rule 67 (assignment_operator)


state 160

  111 primary_no_new_array: primary_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 255


state 161

   68 assignment_operator: ADD_ASSIGN_T .

    $default  reduce using rule 68 (assignment_operator)


state 162

   69 assignment_operator: SUB_ASSIGN_T .

    $default  reduce using rule 69 (assignment_operator)


state 163

   72 assignment_operator: MUL_ASSIGN_T .

    $default  reduce using rule 72 (assignment_operator)


state 164

   73 assignment_operator: DIV_ASSIGN_T .

    $default  reduce using rule 73 (assignment_operator)


state 165

   74 assignment_operator: MOD_ASSIGN_T .

    $default  reduce using rule 74 (assignment_operator)


state 166

  102 postfix_expression: primary_expression INCREMENT .

    $default  reduce using rule 102 (postfix_expression)


state 167

  103 postfix_expression: primary_expression DECREMENT .

    $default  reduce using rule 103 (postfix_expression)


state 168

  104 postfix_expression: primary_expression INSTANCEOF . type_specifier

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 257


state 169

  115 primary_no_new_array: primary_expression DOWN_CAST_BEGIN . type_specifier DOWN_CAST_END

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 258


state 170

   70 assignment_operator: ATM_ADD_ASSIGN_T .

    $default  reduce using rule 70 (assignment_operator)


state 171

   71 assignment_operator: ATM_SUB_ASSIGN_T .

    $default  reduce using rule 71 (assignment_operator)


state 172

   66 assignment_expression: primary_expression assignment_operator . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    assignment_expression      go to state 259
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 173

  109 primary_no_new_array: primary_no_new_array LB . expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 260
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 174

  178 while_statement: label_opt WHILE . expression myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 261
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 175

  180 do_while_statement: label_opt DO_T . block WHILE LP expression RP CR

    LC  shift, and go to state 262

    block  go to state 263


state 176

  179 for_statement: label_opt FOR . expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 182 (expression_opt)

    expression                 go to state 96
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_opt             go to state 264


state 177

  181 foreach_statement: label_opt FOREACH . LP IDENTIFIER COLON expression RP block

    LP  shift, and go to state 265


state 178

  225 class_or_interface: CLASS_T .

    $default  reduce using rule 225 (class_or_interface)


state 179

  226 class_or_interface: INTERFACE_T .

    $default  reduce using rule 226 (class_or_interface)


state 180

  257 access_modifier: PUBLIC_T .

    $default  reduce using rule 257 (access_modifier)


state 181

  258 access_modifier: PRIVATE_T .

    $default  reduce using rule 258 (access_modifier)


state 182

  222 class_or_member_modifier: VIRTUAL_T .

    $default  reduce using rule 222 (class_or_member_modifier)


state 183

  223 class_or_member_modifier: OVERRIDE_T .

    $default  reduce using rule 223 (class_or_member_modifier)


state 184

  224 class_or_member_modifier: ABSTRACT_T .

    $default  reduce using rule 224 (class_or_member_modifier)


state 185

  214 class_definition: shared class_or_member_modifier_list . class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END
  218                 | shared class_or_member_modifier_list . class_or_interface IDENTIFIER template_list extends CR $@7 END
  220 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier

    CLASS_T      shift, and go to state 178
    INTERFACE_T  shift, and go to state 179
    PUBLIC_T     shift, and go to state 180
    PRIVATE_T    shift, and go to state 181
    VIRTUAL_T    shift, and go to state 182
    OVERRIDE_T   shift, and go to state 183
    ABSTRACT_T   shift, and go to state 184

    class_or_member_modifier  go to state 266
    class_or_interface        go to state 267
    access_modifier           go to state 188


state 186

  219 class_or_member_modifier_list: class_or_member_modifier .

    $default  reduce using rule 219 (class_or_member_modifier_list)


state 187

  212 class_definition: shared class_or_interface . IDENTIFIER template_list extends CR $@4 member_declaration_list END
  216                 | shared class_or_interface . IDENTIFIER template_list extends CR $@6 END

    IDENTIFIER  shift, and go to state 268


state 188

  221 class_or_member_modifier: access_modifier .

    $default  reduce using rule 221 (class_or_member_modifier)


state 189

   44 lib_function: LIB IDENTIFIER . $@1 CR lib_function_declaration_list END

    $default  reduce using rule 43 ($@1)

    $@1  go to state 269


state 190

   12 package_name: package_name DOT IDENTIFIER .

    $default  reduce using rule 12 (package_name)


state 191

   15 rename_declaration: RENAME package_name IDENTIFIER CR .

    $default  reduce using rule 15 (rename_declaration)


state 192

   64 expression: expression . COMMA assignment_expression
  110 primary_no_new_array: IDENTIFIER LB expression . RB

    RB     shift, and go to state 270
    COMMA  shift, and go to state 140


state 193

  161 if_statement: IF expression THEN . myblock
  162             | IF expression THEN . myblock ELSE myblock
  163             | IF expression THEN . myblock elsif_list
  164             | IF expression THEN . myblock elsif_list ELSE myblock

    CR  shift, and go to state 108

    myblock  go to state 271


state 194

  170 switch_statement: SWITCH expression CR . case_list default_opt

    CASE  shift, and go to state 272

    case_list  go to state 273
    one_case   go to state 274


state 195

  184 return_statement: RETURN_T expression_opt CR .

    $default  reduce using rule 184 (return_statement)


state 196

  187 break_statement: BREAK identifier_opt CR .

    $default  reduce using rule 187 (break_statement)


state 197

  188 continue_statement: CONTINUE identifier_opt CR .

    $default  reduce using rule 188 (continue_statement)


state 198

  114 primary_no_new_array: LP expression RP .

    $default  reduce using rule 114 (primary_no_new_array)


state 199

  131 array_literal: LC expression_list RC .

    $default  reduce using rule 131 (array_literal)


state 200

  132 array_literal: LC expression_list COMMA . RC
  146 expression_list: expression_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    RC              shift, and go to state 275
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    assignment_expression      go to state 276
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 201

  283 myblock: CR END .

    $default  reduce using rule 283 (myblock)


state 202

  279 unsafe: UNSAFE . CR

    CR  shift, and go to state 277


state 203

  280 unsafe: SAFE . CR

    CR  shift, and go to state 278


state 204

  282 myblock: CR unsafe . @8 statement_list END

    $default  reduce using rule 281 (@8)

    @8  go to state 279


state 205

  195 catch_clause: CATCH . @2 type_specifier IDENTIFIER myblock

    $default  reduce using rule 194 (@2)

    @2  go to state 280


state 206

  190 try_statement: TRY myblock FINALLY . block

    LC  shift, and go to state 262

    block  go to state 281


state 207

  189 try_statement: TRY myblock catch_list . FINALLY myblock
  191              | TRY myblock catch_list .
  193 catch_list: catch_list . catch_clause

    CATCH    shift, and go to state 205
    FINALLY  shift, and go to state 282

    $default  reduce using rule 191 (try_statement)

    catch_clause  go to state 283


state 208

  192 catch_list: catch_clause .

    $default  reduce using rule 192 (catch_list)


state 209

  196 throw_statement: THROW expression CR .

    $default  reduce using rule 196 (throw_statement)


state 210

  127 primary_no_new_array: NEW IDENTIFIER LP . RP
  128                     | NEW IDENTIFIER LP . argument_list RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    RP              shift, and go to state 284
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    argument_list              go to state 285
    assignment_expression      go to state 254
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 211

   36 template_type_specifier: IDENTIFIER LT . type_list GT

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 286
    type_list                  go to state 287


state 212

  129 primary_no_new_array: NEW IDENTIFIER DOT . IDENTIFIER LP RP
  130                     | NEW IDENTIFIER DOT . IDENTIFIER LP argument_list RP

    IDENTIFIER  shift, and go to state 288


state 213

  126 primary_no_new_array: NEW DELEGATE LP . RP

    RP  shift, and go to state 289


state 214

  141 dimension_expression: LB . expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 290
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 215

  133 array_creation: NEW basic_type_specifier dimension_expression_list . global
  134               | NEW basic_type_specifier dimension_expression_list . dimension_list global
  140 dimension_expression_list: dimension_expression_list . dimension_expression

    LB      shift, and go to state 291
    GLOBAL  shift, and go to state 225

    $default  reduce using rule 276 (global)

    dimension_expression  go to state 292
    dimension_list        go to state 293
    global                go to state 294


state 216

  139 dimension_expression_list: dimension_expression .

    $default  reduce using rule 139 (dimension_expression_list)


state 217

  135 array_creation: NEW identifier_type_specifier dimension_expression_list . global
  136               | NEW identifier_type_specifier dimension_expression_list . dimension_list global
  140 dimension_expression_list: dimension_expression_list . dimension_expression

    LB      shift, and go to state 291
    GLOBAL  shift, and go to state 225

    $default  reduce using rule 276 (global)

    dimension_expression  go to state 292
    dimension_list        go to state 295
    global                go to state 296


state 218

  137 array_creation: NEW template_type_specifier dimension_expression_list . global
  138               | NEW template_type_specifier dimension_expression_list . dimension_list global
  140 dimension_expression_list: dimension_expression_list . dimension_expression

    LB      shift, and go to state 291
    GLOBAL  shift, and go to state 225

    $default  reduce using rule 276 (global)

    dimension_expression  go to state 292
    dimension_list        go to state 297
    global                go to state 298


state 219

  266 delegate_definition: DELEGATE IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause CR
  267                    | DELEGATE IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 299
    COMMA       shift, and go to state 300

    $default  reduce using rule 247 (apostrophe)

    parameter_list  go to state 301
    apostrophe      go to state 302


state 220

  200 declaration_statement: FINAL IDENTIFIER AS . type_specifier CR
  201                      | FINAL IDENTIFIER AS . type_specifier ASSIGN_T expression CR

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 303


state 221

  268 enum_definition: ENUM IDENTIFIER LC . enumerator_list RC
  269                | ENUM IDENTIFIER LC . enumerator_list COMMA RC

    IDENTIFIER  shift, and go to state 304

    enumerator_list  go to state 305


state 222

   32 array_type_specifier_sub: IDENTIFIER LB . RB

    RB  shift, and go to state 306


state 223

  272 const_definition: CONST IDENTIFIER ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 307
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 224

   31 array_type_specifier_sub: basic_type_specifier LB . RB

    RB  shift, and go to state 308


state 225

  277 global: GLOBAL .

    $default  reduce using rule 277 (global)


state 226

   35 array_type_specifier: array_type_specifier_sub global .

    $default  reduce using rule 35 (array_type_specifier)


state 227

   33 array_type_specifier_sub: array_type_specifier LB . RB

    RB  shift, and go to state 309


state 228

   34 array_type_specifier_sub: template_type_specifier LB . RB

    RB  shift, and go to state 310


state 229

  273 const_definition: CONST type_specifier IDENTIFIER . CR

    CR  shift, and go to state 311


state 230

   52 function_definition: FUNCTION IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause myblock
   53                    | FUNCTION IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 299
    COMMA       shift, and go to state 300

    $default  reduce using rule 247 (apostrophe)

    parameter_list  go to state 312
    apostrophe      go to state 313


state 231

  198 declaration_statement: DIM IDENTIFIER AS . shared type_specifier CR
  199                      | DIM IDENTIFIER AS . shared type_specifier ASSIGN_T expression CR

    SHARED  shift, and go to state 46

    $default  reduce using rule 274 (shared)

    shared  go to state 314


state 232

   48 function_declaration: DECLARE FUNCTION IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   49                     | DECLARE FUNCTION IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause CR

    LP  shift, and go to state 315


state 233

   50 function_declaration: DECLARE BSUB IDENTIFIER . LP parameter_list apostrophe RP throws_clause CR
   51                     | DECLARE BSUB IDENTIFIER . LP apostrophe RP throws_clause CR

    LP  shift, and go to state 316


state 234

   54 function_definition: BSUB IDENTIFIER LP . parameter_list apostrophe RP throws_clause myblock
   55                    | BSUB IDENTIFIER LP . apostrophe RP throws_clause myblock

    IDENTIFIER  shift, and go to state 299
    COMMA       shift, and go to state 300

    $default  reduce using rule 247 (apostrophe)

    parameter_list  go to state 317
    apostrophe      go to state 318


state 235

   64 expression: expression COMMA assignment_expression .

    $default  reduce using rule 64 (expression)


state 236

   76 logical_or_expression: logical_or_expression LOGICAL_OR logical_and_expression .
   78 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 143

    $default  reduce using rule 76 (logical_or_expression)


state 237

   78 logical_and_expression: logical_and_expression LOGICAL_AND equality_expression .
   80 equality_expression: equality_expression . EQ relational_expression
   81                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 144
    NE  shift, and go to state 145

    $default  reduce using rule 78 (logical_and_expression)


state 238

   80 equality_expression: equality_expression EQ relational_expression .
   83 relational_expression: relational_expression . GT additive_expression
   84                      | relational_expression . GE additive_expression
   85                      | relational_expression . LT additive_expression
   86                      | relational_expression . LE additive_expression

    GT  shift, and go to state 146
    GE  shift, and go to state 147
    LT  shift, and go to state 148
    LE  shift, and go to state 149

    $default  reduce using rule 80 (equality_expression)


state 239

   81 equality_expression: equality_expression NE relational_expression .
   83 relational_expression: relational_expression . GT additive_expression
   84                      | relational_expression . GE additive_expression
   85                      | relational_expression . LT additive_expression
   86                      | relational_expression . LE additive_expression

    GT  shift, and go to state 146
    GE  shift, and go to state 147
    LT  shift, and go to state 148
    LE  shift, and go to state 149

    $default  reduce using rule 81 (equality_expression)


state 240

   83 relational_expression: relational_expression GT additive_expression .
   88 additive_expression: additive_expression . ADD multiplicative_expression
   89                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 150
    SUB  shift, and go to state 151

    $default  reduce using rule 83 (relational_expression)


state 241

   84 relational_expression: relational_expression GE additive_expression .
   88 additive_expression: additive_expression . ADD multiplicative_expression
   89                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 150
    SUB  shift, and go to state 151

    $default  reduce using rule 84 (relational_expression)


state 242

   85 relational_expression: relational_expression LT additive_expression .
   88 additive_expression: additive_expression . ADD multiplicative_expression
   89                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 150
    SUB  shift, and go to state 151

    $default  reduce using rule 85 (relational_expression)


state 243

   86 relational_expression: relational_expression LE additive_expression .
   88 additive_expression: additive_expression . ADD multiplicative_expression
   89                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 150
    SUB  shift, and go to state 151

    $default  reduce using rule 86 (relational_expression)


state 244

   88 additive_expression: additive_expression ADD multiplicative_expression .
   91 multiplicative_expression: multiplicative_expression . MUL unary_expression
   92                          | multiplicative_expression . DIV unary_expression
   93                          | multiplicative_expression . MOD unary_expression
   94                          | multiplicative_expression . BIT_AND unary_expression
   95                          | multiplicative_expression . BIT_OR unary_expression
   96                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 152
    DIV      shift, and go to state 153
    MOD      shift, and go to state 154
    BIT_AND  shift, and go to state 155
    BIT_OR   shift, and go to state 156
    BIT_XOR  shift, and go to state 157

    $default  reduce using rule 88 (additive_expression)


state 245

   89 additive_expression: additive_expression SUB multiplicative_expression .
   91 multiplicative_expression: multiplicative_expression . MUL unary_expression
   92                          | multiplicative_expression . DIV unary_expression
   93                          | multiplicative_expression . MOD unary_expression
   94                          | multiplicative_expression . BIT_AND unary_expression
   95                          | multiplicative_expression . BIT_OR unary_expression
   96                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 152
    DIV      shift, and go to state 153
    MOD      shift, and go to state 154
    BIT_AND  shift, and go to state 155
    BIT_OR   shift, and go to state 156
    BIT_XOR  shift, and go to state 157

    $default  reduce using rule 89 (additive_expression)


state 246

   91 multiplicative_expression: multiplicative_expression MUL unary_expression .

    $default  reduce using rule 91 (multiplicative_expression)


state 247

   92 multiplicative_expression: multiplicative_expression DIV unary_expression .

    $default  reduce using rule 92 (multiplicative_expression)


state 248

   93 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 93 (multiplicative_expression)


state 249

   94 multiplicative_expression: multiplicative_expression BIT_AND unary_expression .

    $default  reduce using rule 94 (multiplicative_expression)


state 250

   95 multiplicative_expression: multiplicative_expression BIT_OR unary_expression .

    $default  reduce using rule 95 (multiplicative_expression)


state 251

   96 multiplicative_expression: multiplicative_expression BIT_XOR unary_expression .

    $default  reduce using rule 96 (multiplicative_expression)


state 252

  113 primary_no_new_array: primary_expression LP RP .

    $default  reduce using rule 113 (primary_no_new_array)


state 253

   60 argument_list: argument_list . COMMA assignment_expression
  112 primary_no_new_array: primary_expression LP argument_list . RP

    RP     shift, and go to state 319
    COMMA  shift, and go to state 320


state 254

   59 argument_list: assignment_expression .

    $default  reduce using rule 59 (argument_list)


state 255

  111 primary_no_new_array: primary_expression DOT IDENTIFIER .

    $default  reduce using rule 111 (primary_no_new_array)


state 256

   30 identifier_type_specifier: IDENTIFIER .
   32 array_type_specifier_sub: IDENTIFIER . LB RB
   36 template_type_specifier: IDENTIFIER . LT type_list GT

    LB  shift, and go to state 222
    LT  shift, and go to state 211

    LT        [reduce using rule 30 (identifier_type_specifier)]
    $default  reduce using rule 30 (identifier_type_specifier)


state 257

  104 postfix_expression: primary_expression INSTANCEOF type_specifier .

    $default  reduce using rule 104 (postfix_expression)


state 258

  115 primary_no_new_array: primary_expression DOWN_CAST_BEGIN type_specifier . DOWN_CAST_END

    DOWN_CAST_END  shift, and go to state 321


state 259

   66 assignment_expression: primary_expression assignment_operator assignment_expression .

    $default  reduce using rule 66 (assignment_expression)


state 260

   64 expression: expression . COMMA assignment_expression
  109 primary_no_new_array: primary_no_new_array LB expression . RB

    RB     shift, and go to state 322
    COMMA  shift, and go to state 140


state 261

   64 expression: expression . COMMA assignment_expression
  178 while_statement: label_opt WHILE expression . myblock

    COMMA  shift, and go to state 140
    CR     shift, and go to state 108

    myblock  go to state 323


state 262

  203 block: LC . @3 statement_list RC
  204      | LC . RC

    RC  shift, and go to state 324

    $default  reduce using rule 202 (@3)

    @3  go to state 325


state 263

  180 do_while_statement: label_opt DO_T block . WHILE LP expression RP CR

    WHILE  shift, and go to state 326


state 264

  179 for_statement: label_opt FOR expression_opt . SEMICOLON expression_opt SEMICOLON expression_opt myblock

    SEMICOLON  shift, and go to state 327


state 265

  181 foreach_statement: label_opt FOREACH LP . IDENTIFIER COLON expression RP block

    IDENTIFIER  shift, and go to state 328


state 266

  220 class_or_member_modifier_list: class_or_member_modifier_list class_or_member_modifier .

    $default  reduce using rule 220 (class_or_member_modifier_list)


state 267

  214 class_definition: shared class_or_member_modifier_list class_or_interface . IDENTIFIER template_list extends CR $@5 member_declaration_list END
  218                 | shared class_or_member_modifier_list class_or_interface . IDENTIFIER template_list extends CR $@7 END

    IDENTIFIER  shift, and go to state 329


state 268

  212 class_definition: shared class_or_interface IDENTIFIER . template_list extends CR $@4 member_declaration_list END
  216                 | shared class_or_interface IDENTIFIER . template_list extends CR $@6 END

    LT  shift, and go to state 330

    $default  reduce using rule 210 (template_list)

    template_list  go to state 331


state 269

   44 lib_function: LIB IDENTIFIER $@1 . CR lib_function_declaration_list END

    CR  shift, and go to state 332


state 270

  110 primary_no_new_array: IDENTIFIER LB expression RB .

    $default  reduce using rule 110 (primary_no_new_array)


state 271

  161 if_statement: IF expression THEN myblock .
  162             | IF expression THEN myblock . ELSE myblock
  163             | IF expression THEN myblock . elsif_list
  164             | IF expression THEN myblock . elsif_list ELSE myblock

    ELSE   shift, and go to state 333
    ELSIF  shift, and go to state 334

    $default  reduce using rule 161 (if_statement)

    elsif_list  go to state 335
    elsif       go to state 336


state 272

  173 one_case: CASE . case_expression_list myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 144 (expression_list)

    assignment_expression      go to state 337
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_list            go to state 338
    case_expression_list       go to state 339


state 273

  170 switch_statement: SWITCH expression CR case_list . default_opt
  172 case_list: case_list . one_case

    CASE       shift, and go to state 272
    DEFAULT_T  shift, and go to state 340

    $default  reduce using rule 174 (default_opt)

    one_case     go to state 341
    default_opt  go to state 342


state 274

  171 case_list: one_case .

    $default  reduce using rule 171 (case_list)


state 275

  132 array_literal: LC expression_list COMMA RC .

    $default  reduce using rule 132 (array_literal)


state 276

  146 expression_list: expression_list COMMA assignment_expression .

    $default  reduce using rule 146 (expression_list)


state 277

  279 unsafe: UNSAFE CR .

    $default  reduce using rule 279 (unsafe)


state 278

  280 unsafe: SAFE CR .

    $default  reduce using rule 280 (unsafe)


state 279

  282 myblock: CR unsafe @8 . statement_list END

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    FINAL           shift, and go to state 38
    DIM             shift, and go to state 42
    CR              shift, and go to state 43

    $default  reduce using rule 168 (label_opt)

    statement_list             go to state 343
    expression                 go to state 50
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    statement                  go to state 344
    if_statement               go to state 65
    label_opt                  go to state 66
    switch_statement           go to state 67
    while_statement            go to state 68
    for_statement              go to state 69
    do_while_statement         go to state 70
    foreach_statement          go to state 71
    return_statement           go to state 72
    break_statement            go to state 73
    continue_statement         go to state 74
    try_statement              go to state 75
    throw_statement            go to state 76
    declaration_statement      go to state 77


state 280

  195 catch_clause: CATCH @2 . type_specifier IDENTIFIER myblock

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 345


state 281

  190 try_statement: TRY myblock FINALLY block .

    $default  reduce using rule 190 (try_statement)


state 282

  189 try_statement: TRY myblock catch_list FINALLY . myblock

    CR  shift, and go to state 108

    myblock  go to state 346


state 283

  193 catch_list: catch_list catch_clause .

    $default  reduce using rule 193 (catch_list)


state 284

  127 primary_no_new_array: NEW IDENTIFIER LP RP .

    $default  reduce using rule 127 (primary_no_new_array)


state 285

   60 argument_list: argument_list . COMMA assignment_expression
  128 primary_no_new_array: NEW IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 347
    COMMA  shift, and go to state 320


state 286

   41 type_list: type_specifier .

    $default  reduce using rule 41 (type_list)


state 287

   36 template_type_specifier: IDENTIFIER LT type_list . GT
   42 type_list: type_list . COMMA type_specifier

    COMMA  shift, and go to state 348
    GT     shift, and go to state 349


state 288

  129 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER . LP RP
  130                     | NEW IDENTIFIER DOT IDENTIFIER . LP argument_list RP

    LP  shift, and go to state 350


state 289

  126 primary_no_new_array: NEW DELEGATE LP RP .

    $default  reduce using rule 126 (primary_no_new_array)


state 290

   64 expression: expression . COMMA assignment_expression
  141 dimension_expression: LB expression . RB

    RB     shift, and go to state 351
    COMMA  shift, and go to state 140


state 291

  141 dimension_expression: LB . expression RB
  142 dimension_list: LB . RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    RB              shift, and go to state 352
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 290
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 292

  140 dimension_expression_list: dimension_expression_list dimension_expression .

    $default  reduce using rule 140 (dimension_expression_list)


state 293

  134 array_creation: NEW basic_type_specifier dimension_expression_list dimension_list . global
  143 dimension_list: dimension_list . LB RB

    LB      shift, and go to state 353
    GLOBAL  shift, and go to state 225

    $default  reduce using rule 276 (global)

    global  go to state 354


state 294

  133 array_creation: NEW basic_type_specifier dimension_expression_list global .

    $default  reduce using rule 133 (array_creation)


state 295

  136 array_creation: NEW identifier_type_specifier dimension_expression_list dimension_list . global
  143 dimension_list: dimension_list . LB RB

    LB      shift, and go to state 353
    GLOBAL  shift, and go to state 225

    $default  reduce using rule 276 (global)

    global  go to state 355


state 296

  135 array_creation: NEW identifier_type_specifier dimension_expression_list global .

    $default  reduce using rule 135 (array_creation)


state 297

  138 array_creation: NEW template_type_specifier dimension_expression_list dimension_list . global
  143 dimension_list: dimension_list . LB RB

    LB      shift, and go to state 353
    GLOBAL  shift, and go to state 225

    $default  reduce using rule 276 (global)

    global  go to state 356


state 298

  137 array_creation: NEW template_type_specifier dimension_expression_list global .

    $default  reduce using rule 137 (array_creation)


state 299

   57 parameter_list: IDENTIFIER . AS type_specifier

    AS  shift, and go to state 357


state 300

  248 apostrophe: COMMA . APOSTROPHE

    APOSTROPHE  shift, and go to state 358


state 301

   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  266 delegate_definition: DELEGATE IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause CR

    COMMA  shift, and go to state 359

    $default  reduce using rule 247 (apostrophe)

    apostrophe  go to state 360


state 302

  267 delegate_definition: DELEGATE IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 361


state 303

  200 declaration_statement: FINAL IDENTIFIER AS type_specifier . CR
  201                      | FINAL IDENTIFIER AS type_specifier . ASSIGN_T expression CR

    ASSIGN_T  shift, and go to state 362
    CR        shift, and go to state 363


state 304

  270 enumerator_list: IDENTIFIER .

    $default  reduce using rule 270 (enumerator_list)


state 305

  268 enum_definition: ENUM IDENTIFIER LC enumerator_list . RC
  269                | ENUM IDENTIFIER LC enumerator_list . COMMA RC
  271 enumerator_list: enumerator_list . COMMA IDENTIFIER

    RC     shift, and go to state 364
    COMMA  shift, and go to state 365


state 306

   32 array_type_specifier_sub: IDENTIFIER LB RB .

    $default  reduce using rule 32 (array_type_specifier_sub)


state 307

   64 expression: expression . COMMA assignment_expression
  272 const_definition: CONST IDENTIFIER ASSIGN_T expression . CR

    COMMA  shift, and go to state 140
    CR     shift, and go to state 366


state 308

   31 array_type_specifier_sub: basic_type_specifier LB RB .

    $default  reduce using rule 31 (array_type_specifier_sub)


state 309

   33 array_type_specifier_sub: array_type_specifier LB RB .

    $default  reduce using rule 33 (array_type_specifier_sub)


state 310

   34 array_type_specifier_sub: template_type_specifier LB RB .

    $default  reduce using rule 34 (array_type_specifier_sub)


state 311

  273 const_definition: CONST type_specifier IDENTIFIER CR .

    $default  reduce using rule 273 (const_definition)


state 312

   52 function_definition: FUNCTION IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause myblock
   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 359

    $default  reduce using rule 247 (apostrophe)

    apostrophe  go to state 367


state 313

   53 function_definition: FUNCTION IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause myblock

    RP  shift, and go to state 368


state 314

  198 declaration_statement: DIM IDENTIFIER AS shared . type_specifier CR
  199                      | DIM IDENTIFIER AS shared . type_specifier ASSIGN_T expression CR

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 369


state 315

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause CR
   49                     | DECLARE FUNCTION IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 299
    COMMA       shift, and go to state 300

    $default  reduce using rule 247 (apostrophe)

    parameter_list  go to state 370
    apostrophe      go to state 371


state 316

   50 function_declaration: DECLARE BSUB IDENTIFIER LP . parameter_list apostrophe RP throws_clause CR
   51                     | DECLARE BSUB IDENTIFIER LP . apostrophe RP throws_clause CR

    IDENTIFIER  shift, and go to state 299
    COMMA       shift, and go to state 300

    $default  reduce using rule 247 (apostrophe)

    parameter_list  go to state 372
    apostrophe      go to state 373


state 317

   54 function_definition: BSUB IDENTIFIER LP parameter_list . apostrophe RP throws_clause myblock
   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 359

    $default  reduce using rule 247 (apostrophe)

    apostrophe  go to state 374


state 318

   55 function_definition: BSUB IDENTIFIER LP apostrophe . RP throws_clause myblock

    RP  shift, and go to state 375


state 319

  112 primary_no_new_array: primary_expression LP argument_list RP .

    $default  reduce using rule 112 (primary_no_new_array)


state 320

   60 argument_list: argument_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    assignment_expression      go to state 376
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 321

  115 primary_no_new_array: primary_expression DOWN_CAST_BEGIN type_specifier DOWN_CAST_END .

    $default  reduce using rule 115 (primary_no_new_array)


state 322

  109 primary_no_new_array: primary_no_new_array LB expression RB .

    $default  reduce using rule 109 (primary_no_new_array)


state 323

  178 while_statement: label_opt WHILE expression myblock .

    $default  reduce using rule 178 (while_statement)


state 324

  204 block: LC RC .

    $default  reduce using rule 204 (block)


state 325

  203 block: LC @3 . statement_list RC

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    FINAL           shift, and go to state 38
    DIM             shift, and go to state 42
    CR              shift, and go to state 43

    $default  reduce using rule 168 (label_opt)

    statement_list             go to state 377
    expression                 go to state 50
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    statement                  go to state 344
    if_statement               go to state 65
    label_opt                  go to state 66
    switch_statement           go to state 67
    while_statement            go to state 68
    for_statement              go to state 69
    do_while_statement         go to state 70
    foreach_statement          go to state 71
    return_statement           go to state 72
    break_statement            go to state 73
    continue_statement         go to state 74
    try_statement              go to state 75
    throw_statement            go to state 76
    declaration_statement      go to state 77


state 326

  180 do_while_statement: label_opt DO_T block WHILE . LP expression RP CR

    LP  shift, and go to state 378


state 327

  179 for_statement: label_opt FOR expression_opt SEMICOLON . expression_opt SEMICOLON expression_opt myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 182 (expression_opt)

    expression                 go to state 96
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_opt             go to state 379


state 328

  181 foreach_statement: label_opt FOREACH LP IDENTIFIER . COLON expression RP block

    COLON  shift, and go to state 380


state 329

  214 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER . template_list extends CR $@5 member_declaration_list END
  218                 | shared class_or_member_modifier_list class_or_interface IDENTIFIER . template_list extends CR $@7 END

    LT  shift, and go to state 330

    $default  reduce using rule 210 (template_list)

    template_list  go to state 381


state 330

  209 template_list: LT . template_def_list GT

    IDENTIFIER  shift, and go to state 382

    template_def_list  go to state 383


state 331

  212 class_definition: shared class_or_interface IDENTIFIER template_list . extends CR $@4 member_declaration_list END
  216                 | shared class_or_interface IDENTIFIER template_list . extends CR $@6 END

    COLON  shift, and go to state 384

    $default  reduce using rule 227 (extends)

    extends  go to state 385


state 332

   44 lib_function: LIB IDENTIFIER $@1 CR . lib_function_declaration_list END

    $default  reduce using rule 45 (lib_function_declaration_list)

    lib_function_declaration_list  go to state 386


state 333

  162 if_statement: IF expression THEN myblock ELSE . myblock

    CR  shift, and go to state 108

    myblock  go to state 387


state 334

  167 elsif: ELSIF . expression THEN myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 388
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 335

  163 if_statement: IF expression THEN myblock elsif_list .
  164             | IF expression THEN myblock elsif_list . ELSE myblock
  166 elsif_list: elsif_list . elsif

    ELSE   shift, and go to state 389
    ELSIF  shift, and go to state 334

    $default  reduce using rule 163 (if_statement)

    elsif  go to state 390


state 336

  165 elsif_list: elsif .

    $default  reduce using rule 165 (elsif_list)


state 337

  145 expression_list: assignment_expression .
  176 case_expression_list: assignment_expression .

    CR        reduce using rule 176 (case_expression_list)
    $default  reduce using rule 145 (expression_list)


state 338

  146 expression_list: expression_list . COMMA assignment_expression
  177 case_expression_list: expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 391


state 339

  173 one_case: CASE case_expression_list . myblock

    CR  shift, and go to state 108

    myblock  go to state 392


state 340

  175 default_opt: DEFAULT_T . myblock

    CR  shift, and go to state 108

    myblock  go to state 393


state 341

  172 case_list: case_list one_case .

    $default  reduce using rule 172 (case_list)


state 342

  170 switch_statement: SWITCH expression CR case_list default_opt .

    $default  reduce using rule 170 (switch_statement)


state 343

   62 statement_list: statement_list . statement
  282 myblock: CR unsafe @8 statement_list . END

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    FINAL           shift, and go to state 38
    DIM             shift, and go to state 42
    END             shift, and go to state 394
    CR              shift, and go to state 43

    $default  reduce using rule 168 (label_opt)

    expression                 go to state 50
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    statement                  go to state 395
    if_statement               go to state 65
    label_opt                  go to state 66
    switch_statement           go to state 67
    while_statement            go to state 68
    for_statement              go to state 69
    do_while_statement         go to state 70
    foreach_statement          go to state 71
    return_statement           go to state 72
    break_statement            go to state 73
    continue_statement         go to state 74
    try_statement              go to state 75
    throw_statement            go to state 76
    declaration_statement      go to state 77


state 344

   61 statement_list: statement .

    $default  reduce using rule 61 (statement_list)


state 345

  195 catch_clause: CATCH @2 type_specifier . IDENTIFIER myblock

    IDENTIFIER  shift, and go to state 396


state 346

  189 try_statement: TRY myblock catch_list FINALLY myblock .

    $default  reduce using rule 189 (try_statement)


state 347

  128 primary_no_new_array: NEW IDENTIFIER LP argument_list RP .

    $default  reduce using rule 128 (primary_no_new_array)


state 348

   42 type_list: type_list COMMA . type_specifier

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 397


state 349

   36 template_type_specifier: IDENTIFIER LT type_list GT .

    $default  reduce using rule 36 (template_type_specifier)


state 350

  129 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP . RP
  130                     | NEW IDENTIFIER DOT IDENTIFIER LP . argument_list RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    RP              shift, and go to state 398
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    argument_list              go to state 399
    assignment_expression      go to state 254
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 351

  141 dimension_expression: LB expression RB .

    $default  reduce using rule 141 (dimension_expression)


state 352

  142 dimension_list: LB RB .

    $default  reduce using rule 142 (dimension_list)


state 353

  143 dimension_list: dimension_list LB . RB

    RB  shift, and go to state 400


state 354

  134 array_creation: NEW basic_type_specifier dimension_expression_list dimension_list global .

    $default  reduce using rule 134 (array_creation)


state 355

  136 array_creation: NEW identifier_type_specifier dimension_expression_list dimension_list global .

    $default  reduce using rule 136 (array_creation)


state 356

  138 array_creation: NEW template_type_specifier dimension_expression_list dimension_list global .

    $default  reduce using rule 138 (array_creation)


state 357

   57 parameter_list: IDENTIFIER AS . type_specifier

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 401


state 358

  248 apostrophe: COMMA APOSTROPHE .

    $default  reduce using rule 248 (apostrophe)


state 359

   58 parameter_list: parameter_list COMMA . IDENTIFIER AS type_specifier
  248 apostrophe: COMMA . APOSTROPHE

    IDENTIFIER  shift, and go to state 402
    APOSTROPHE  shift, and go to state 358


state 360

  266 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 403


state 361

  267 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 404


state 362

  201 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 405
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 363

  200 declaration_statement: FINAL IDENTIFIER AS type_specifier CR .

    $default  reduce using rule 200 (declaration_statement)


state 364

  268 enum_definition: ENUM IDENTIFIER LC enumerator_list RC .

    $default  reduce using rule 268 (enum_definition)


state 365

  269 enum_definition: ENUM IDENTIFIER LC enumerator_list COMMA . RC
  271 enumerator_list: enumerator_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 406
    RC          shift, and go to state 407


state 366

  272 const_definition: CONST IDENTIFIER ASSIGN_T expression CR .

    $default  reduce using rule 272 (const_definition)


state 367

   52 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause myblock

    RP  shift, and go to state 408


state 368

   53 function_definition: FUNCTION IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 409


state 369

  198 declaration_statement: DIM IDENTIFIER AS shared type_specifier . CR
  199                      | DIM IDENTIFIER AS shared type_specifier . ASSIGN_T expression CR

    ASSIGN_T  shift, and go to state 410
    CR        shift, and go to state 411


state 370

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause CR
   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 359

    $default  reduce using rule 247 (apostrophe)

    apostrophe  go to state 412


state 371

   49 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 413


state 372

   50 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list . apostrophe RP throws_clause CR
   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 359

    $default  reduce using rule 247 (apostrophe)

    apostrophe  go to state 414


state 373

   51 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe . RP throws_clause CR

    RP  shift, and go to state 415


state 374

   54 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe . RP throws_clause myblock

    RP  shift, and go to state 416


state 375

   55 function_definition: BSUB IDENTIFIER LP apostrophe RP . throws_clause myblock

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 418


state 376

   60 argument_list: argument_list COMMA assignment_expression .

    $default  reduce using rule 60 (argument_list)


state 377

   62 statement_list: statement_list . statement
  203 block: LC @3 statement_list . RC

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 17
    AUTOVAR         shift, and go to state 18
    IF              shift, and go to state 19
    SWITCH          shift, and go to state 20
    RETURN_T        shift, and go to state 21
    BREAK           shift, and go to state 22
    CONTINUE        shift, and go to state 23
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    RC              shift, and go to state 419
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    TRY             shift, and go to state 32
    THROW           shift, and go to state 33
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36
    FINAL           shift, and go to state 38
    DIM             shift, and go to state 42
    CR              shift, and go to state 43

    $default  reduce using rule 168 (label_opt)

    expression                 go to state 50
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    statement                  go to state 395
    if_statement               go to state 65
    label_opt                  go to state 66
    switch_statement           go to state 67
    while_statement            go to state 68
    for_statement              go to state 69
    do_while_statement         go to state 70
    foreach_statement          go to state 71
    return_statement           go to state 72
    break_statement            go to state 73
    continue_statement         go to state 74
    try_statement              go to state 75
    throw_statement            go to state 76
    declaration_statement      go to state 77


state 378

  180 do_while_statement: label_opt DO_T block WHILE LP . expression RP CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 420
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 379

  179 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt . SEMICOLON expression_opt myblock

    SEMICOLON  shift, and go to state 421


state 380

  181 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON . expression RP block

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 422
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 381

  214 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list . extends CR $@5 member_declaration_list END
  218                 | shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list . extends CR $@7 END

    COLON  shift, and go to state 384

    $default  reduce using rule 227 (extends)

    extends  go to state 423


state 382

  205 template_def_list: IDENTIFIER .
  207                  | IDENTIFIER . COLON identifier_type_specifier

    COLON  shift, and go to state 424

    $default  reduce using rule 205 (template_def_list)


state 383

  206 template_def_list: template_def_list . COMMA IDENTIFIER
  208                  | template_def_list . COMMA IDENTIFIER COLON identifier_type_specifier
  209 template_list: LT template_def_list . GT

    COMMA  shift, and go to state 425
    GT     shift, and go to state 426


state 384

  228 extends: COLON . extends_list

    IDENTIFIER  shift, and go to state 427

    extends_list  go to state 428


state 385

  212 class_definition: shared class_or_interface IDENTIFIER template_list extends . CR $@4 member_declaration_list END
  216                 | shared class_or_interface IDENTIFIER template_list extends . CR $@6 END

    CR  shift, and go to state 429


state 386

   44 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list . END
   46 lib_function_declaration_list: lib_function_declaration_list . function_declaration
   47                              | lib_function_declaration_list . class_definition

    END      shift, and go to state 430
    DECLARE  shift, and go to state 44
    SHARED   shift, and go to state 46

    $default  reduce using rule 274 (shared)

    function_declaration  go to state 431
    class_definition      go to state 432
    shared                go to state 82


state 387

  162 if_statement: IF expression THEN myblock ELSE myblock .

    $default  reduce using rule 162 (if_statement)


state 388

   64 expression: expression . COMMA assignment_expression
  167 elsif: ELSIF expression . THEN myblock

    COMMA  shift, and go to state 140
    THEN   shift, and go to state 433


state 389

  164 if_statement: IF expression THEN myblock elsif_list ELSE . myblock

    CR  shift, and go to state 108

    myblock  go to state 434


state 390

  166 elsif_list: elsif_list elsif .

    $default  reduce using rule 166 (elsif_list)


state 391

  146 expression_list: expression_list COMMA . assignment_expression
  177 case_expression_list: expression_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    assignment_expression      go to state 435
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 392

  173 one_case: CASE case_expression_list myblock .

    $default  reduce using rule 173 (one_case)


state 393

  175 default_opt: DEFAULT_T myblock .

    $default  reduce using rule 175 (default_opt)


state 394

  282 myblock: CR unsafe @8 statement_list END .

    $default  reduce using rule 282 (myblock)


state 395

   62 statement_list: statement_list statement .

    $default  reduce using rule 62 (statement_list)


state 396

  195 catch_clause: CATCH @2 type_specifier IDENTIFIER . myblock

    CR  shift, and go to state 108

    myblock  go to state 436


state 397

   42 type_list: type_list COMMA type_specifier .

    $default  reduce using rule 42 (type_list)


state 398

  129 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP RP .

    $default  reduce using rule 129 (primary_no_new_array)


state 399

   60 argument_list: argument_list . COMMA assignment_expression
  130 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 437
    COMMA  shift, and go to state 320


state 400

  143 dimension_list: dimension_list LB RB .

    $default  reduce using rule 143 (dimension_list)


state 401

   57 parameter_list: IDENTIFIER AS type_specifier .

    $default  reduce using rule 57 (parameter_list)


state 402

   58 parameter_list: parameter_list COMMA IDENTIFIER . AS type_specifier

    AS  shift, and go to state 438


state 403

  266 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 439


state 404

  267 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 440


state 405

   64 expression: expression . COMMA assignment_expression
  201 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T expression . CR

    COMMA  shift, and go to state 140
    CR     shift, and go to state 441


state 406

  271 enumerator_list: enumerator_list COMMA IDENTIFIER .

    $default  reduce using rule 271 (enumerator_list)


state 407

  269 enum_definition: ENUM IDENTIFIER LC enumerator_list COMMA RC .

    $default  reduce using rule 269 (enum_definition)


state 408

   52 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 442


state 409

   53 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 443


state 410

  199 declaration_statement: DIM IDENTIFIER AS shared type_specifier ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 444
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 411

  198 declaration_statement: DIM IDENTIFIER AS shared type_specifier CR .

    $default  reduce using rule 198 (declaration_statement)


state 412

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 445


state 413

   49 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 446


state 414

   50 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe . RP throws_clause CR

    RP  shift, and go to state 447


state 415

   51 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP . throws_clause CR

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 448


state 416

   54 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP . throws_clause myblock

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 449


state 417

  250 throws_clause: THROWS . exception_list

    IDENTIFIER  shift, and go to state 450

    exception_list  go to state 451


state 418

   55 function_definition: BSUB IDENTIFIER LP apostrophe RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 452


state 419

  203 block: LC @3 statement_list RC .

    $default  reduce using rule 203 (block)


state 420

   64 expression: expression . COMMA assignment_expression
  180 do_while_statement: label_opt DO_T block WHILE LP expression . RP CR

    RP     shift, and go to state 453
    COMMA  shift, and go to state 140


state 421

  179 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON . expression_opt myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    $default  reduce using rule 182 (expression_opt)

    expression                 go to state 96
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63
    expression_opt             go to state 454


state 422

   64 expression: expression . COMMA assignment_expression
  181 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression . RP block

    RP     shift, and go to state 455
    COMMA  shift, and go to state 140


state 423

  214 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends . CR $@5 member_declaration_list END
  218                 | shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends . CR $@7 END

    CR  shift, and go to state 456


state 424

  207 template_def_list: IDENTIFIER COLON . identifier_type_specifier

    IDENTIFIER  shift, and go to state 457

    identifier_type_specifier  go to state 458


state 425

  206 template_def_list: template_def_list COMMA . IDENTIFIER
  208                  | template_def_list COMMA . IDENTIFIER COLON identifier_type_specifier

    IDENTIFIER  shift, and go to state 459


state 426

  209 template_list: LT template_def_list GT .

    $default  reduce using rule 209 (template_list)


state 427

  229 extends_list: IDENTIFIER .

    $default  reduce using rule 229 (extends_list)


state 428

  228 extends: COLON extends_list .
  230 extends_list: extends_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 460

    $default  reduce using rule 228 (extends)


state 429

  212 class_definition: shared class_or_interface IDENTIFIER template_list extends CR . $@4 member_declaration_list END
  216                 | shared class_or_interface IDENTIFIER template_list extends CR . $@6 END

    END       reduce using rule 215 ($@6)
    $default  reduce using rule 211 ($@4)

    $@4  go to state 461
    $@6  go to state 462


state 430

   44 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list END .

    $default  reduce using rule 44 (lib_function)


state 431

   46 lib_function_declaration_list: lib_function_declaration_list function_declaration .

    $default  reduce using rule 46 (lib_function_declaration_list)


state 432

   47 lib_function_declaration_list: lib_function_declaration_list class_definition .

    $default  reduce using rule 47 (lib_function_declaration_list)


state 433

  167 elsif: ELSIF expression THEN . myblock

    CR  shift, and go to state 108

    myblock  go to state 463


state 434

  164 if_statement: IF expression THEN myblock elsif_list ELSE myblock .

    $default  reduce using rule 164 (if_statement)


state 435

  146 expression_list: expression_list COMMA assignment_expression .
  177 case_expression_list: expression_list COMMA assignment_expression .

    CR        reduce using rule 177 (case_expression_list)
    $default  reduce using rule 146 (expression_list)


state 436

  195 catch_clause: CATCH @2 type_specifier IDENTIFIER myblock .

    $default  reduce using rule 195 (catch_clause)


state 437

  130 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP argument_list RP .

    $default  reduce using rule 130 (primary_no_new_array)


state 438

   58 parameter_list: parameter_list COMMA IDENTIFIER AS . type_specifier

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 464


state 439

  266 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 465


state 440

  267 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 466


state 441

  201 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T expression CR .

    $default  reduce using rule 201 (declaration_statement)


state 442

   52 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 467


state 443

   53 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 468


state 444

   64 expression: expression . COMMA assignment_expression
  199 declaration_statement: DIM IDENTIFIER AS shared type_specifier ASSIGN_T expression . CR

    COMMA  shift, and go to state 140
    CR     shift, and go to state 469


state 445

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 470


state 446

   49 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 471


state 447

   50 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP . throws_clause CR

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 472


state 448

   51 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause . CR

    CR  shift, and go to state 473


state 449

   54 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 474


state 450

  251 exception_list: IDENTIFIER .

    $default  reduce using rule 251 (exception_list)


state 451

  250 throws_clause: THROWS exception_list .
  252 exception_list: exception_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 475

    $default  reduce using rule 250 (throws_clause)


state 452

   55 function_definition: BSUB IDENTIFIER LP apostrophe RP throws_clause myblock .

    $default  reduce using rule 55 (function_definition)


state 453

  180 do_while_statement: label_opt DO_T block WHILE LP expression RP . CR

    CR  shift, and go to state 476


state 454

  179 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt . myblock

    CR  shift, and go to state 108

    myblock  go to state 477


state 455

  181 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP . block

    LC  shift, and go to state 262

    block  go to state 478


state 456

  214 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR . $@5 member_declaration_list END
  218                 | shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR . $@7 END

    END       reduce using rule 217 ($@7)
    $default  reduce using rule 213 ($@5)

    $@5  go to state 479
    $@7  go to state 480


state 457

   30 identifier_type_specifier: IDENTIFIER .

    $default  reduce using rule 30 (identifier_type_specifier)


state 458

  207 template_def_list: IDENTIFIER COLON identifier_type_specifier .

    $default  reduce using rule 207 (template_def_list)


state 459

  206 template_def_list: template_def_list COMMA IDENTIFIER .
  208                  | template_def_list COMMA IDENTIFIER . COLON identifier_type_specifier

    COLON  shift, and go to state 481

    $default  reduce using rule 206 (template_def_list)


state 460

  230 extends_list: extends_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 482


state 461

  212 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@4 . member_declaration_list END

    PUBLIC_T     shift, and go to state 180
    PRIVATE_T    shift, and go to state 181
    VIRTUAL_T    shift, and go to state 182
    OVERRIDE_T   shift, and go to state 183
    ABSTRACT_T   shift, and go to state 184
    CONSTRUCTOR  shift, and go to state 483
    FINAL        shift, and go to state 484
    FUNCTION     shift, and go to state 485
    DIM          shift, and go to state 486
    DECLARE      shift, and go to state 487
    BSUB         shift, and go to state 488

    class_or_member_modifier_list  go to state 489
    class_or_member_modifier       go to state 186
    member_declaration_list        go to state 490
    member_declaration             go to state 491
    method_member                  go to state 492
    method_function_definition     go to state 493
    constructor_definition         go to state 494
    access_modifier                go to state 188
    field_member                   go to state 495


state 462

  216 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@6 . END

    END  shift, and go to state 496


state 463

  167 elsif: ELSIF expression THEN myblock .

    $default  reduce using rule 167 (elsif)


state 464

   58 parameter_list: parameter_list COMMA IDENTIFIER AS type_specifier .

    $default  reduce using rule 58 (parameter_list)


state 465

  266 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 497


state 466

  267 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 498


state 467

   52 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 499


state 468

   53 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 500


state 469

  199 declaration_statement: DIM IDENTIFIER AS shared type_specifier ASSIGN_T expression CR .

    $default  reduce using rule 199 (declaration_statement)


state 470

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 501


state 471

   49 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 502


state 472

   50 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause . CR

    CR  shift, and go to state 503


state 473

   51 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause CR .

    $default  reduce using rule 51 (function_declaration)


state 474

   54 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock .

    $default  reduce using rule 54 (function_definition)


state 475

  252 exception_list: exception_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 504


state 476

  180 do_while_statement: label_opt DO_T block WHILE LP expression RP CR .

    $default  reduce using rule 180 (do_while_statement)


state 477

  179 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock .

    $default  reduce using rule 179 (for_statement)


state 478

  181 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP block .

    $default  reduce using rule 181 (foreach_statement)


state 479

  214 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 . member_declaration_list END

    PUBLIC_T     shift, and go to state 180
    PRIVATE_T    shift, and go to state 181
    VIRTUAL_T    shift, and go to state 182
    OVERRIDE_T   shift, and go to state 183
    ABSTRACT_T   shift, and go to state 184
    CONSTRUCTOR  shift, and go to state 483
    FINAL        shift, and go to state 484
    FUNCTION     shift, and go to state 485
    DIM          shift, and go to state 486
    DECLARE      shift, and go to state 487
    BSUB         shift, and go to state 488

    class_or_member_modifier_list  go to state 489
    class_or_member_modifier       go to state 186
    member_declaration_list        go to state 505
    member_declaration             go to state 491
    method_member                  go to state 492
    method_function_definition     go to state 493
    constructor_definition         go to state 494
    access_modifier                go to state 188
    field_member                   go to state 495


state 480

  218 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 . END

    END  shift, and go to state 506


state 481

  208 template_def_list: template_def_list COMMA IDENTIFIER COLON . identifier_type_specifier

    IDENTIFIER  shift, and go to state 457

    identifier_type_specifier  go to state 507


state 482

  230 extends_list: extends_list COMMA IDENTIFIER .

    $default  reduce using rule 230 (extends_list)


state 483

  253 constructor_definition: CONSTRUCTOR . IDENTIFIER LP parameter_list RP throws_clause myblock
  254                       | CONSTRUCTOR . IDENTIFIER LP RP throws_clause myblock

    IDENTIFIER  shift, and go to state 508


state 484

  263 field_member: FINAL . IDENTIFIER AS type_specifier initializer_opt CR
  265             | FINAL . class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 509
    PUBLIC_T    shift, and go to state 180
    PRIVATE_T   shift, and go to state 181
    VIRTUAL_T   shift, and go to state 182
    OVERRIDE_T  shift, and go to state 183
    ABSTRACT_T  shift, and go to state 184

    class_or_member_modifier_list  go to state 510
    class_or_member_modifier       go to state 186
    access_modifier                go to state 188


state 485

  239 method_function_definition: FUNCTION . IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock
  240                           | FUNCTION . IDENTIFIER LP RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 511


state 486

  261 field_member: DIM . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 512


state 487

  241 method_function_definition: DECLARE . FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  242                           | DECLARE . FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR
  245                           | DECLARE . BSUB IDENTIFIER LP parameter_list RP throws_clause CR
  246                           | DECLARE . BSUB IDENTIFIER LP RP throws_clause CR
  255 constructor_definition: DECLARE . CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR
  256                       | DECLARE . CONSTRUCTOR IDENTIFIER LP RP throws_clause CR

    CONSTRUCTOR  shift, and go to state 513
    FUNCTION     shift, and go to state 514
    BSUB         shift, and go to state 515


state 488

  243 method_function_definition: BSUB . IDENTIFIER LP parameter_list RP throws_clause myblock
  244                           | BSUB . IDENTIFIER LP RP throws_clause myblock

    IDENTIFIER  shift, and go to state 516


state 489

  220 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier
  236 method_member: class_or_member_modifier_list . method_function_definition
  238              | class_or_member_modifier_list . constructor_definition
  262 field_member: class_or_member_modifier_list . IDENTIFIER AS type_specifier initializer_opt CR
  264             | class_or_member_modifier_list . FINAL IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER   shift, and go to state 517
    PUBLIC_T     shift, and go to state 180
    PRIVATE_T    shift, and go to state 181
    VIRTUAL_T    shift, and go to state 182
    OVERRIDE_T   shift, and go to state 183
    ABSTRACT_T   shift, and go to state 184
    CONSTRUCTOR  shift, and go to state 483
    FINAL        shift, and go to state 518
    FUNCTION     shift, and go to state 485
    DECLARE      shift, and go to state 487
    BSUB         shift, and go to state 488

    class_or_member_modifier    go to state 266
    method_function_definition  go to state 519
    constructor_definition      go to state 520
    access_modifier             go to state 188


state 490

  212 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list . END
  232 member_declaration_list: member_declaration_list . member_declaration

    PUBLIC_T     shift, and go to state 180
    PRIVATE_T    shift, and go to state 181
    VIRTUAL_T    shift, and go to state 182
    OVERRIDE_T   shift, and go to state 183
    ABSTRACT_T   shift, and go to state 184
    CONSTRUCTOR  shift, and go to state 483
    FINAL        shift, and go to state 484
    FUNCTION     shift, and go to state 485
    DIM          shift, and go to state 486
    END          shift, and go to state 521
    DECLARE      shift, and go to state 487
    BSUB         shift, and go to state 488

    class_or_member_modifier_list  go to state 489
    class_or_member_modifier       go to state 186
    member_declaration             go to state 522
    method_member                  go to state 492
    method_function_definition     go to state 493
    constructor_definition         go to state 494
    access_modifier                go to state 188
    field_member                   go to state 495


state 491

  231 member_declaration_list: member_declaration .

    $default  reduce using rule 231 (member_declaration_list)


state 492

  233 member_declaration: method_member .

    $default  reduce using rule 233 (member_declaration)


state 493

  235 method_member: method_function_definition .

    $default  reduce using rule 235 (method_member)


state 494

  237 method_member: constructor_definition .

    $default  reduce using rule 237 (method_member)


state 495

  234 member_declaration: field_member .

    $default  reduce using rule 234 (member_declaration)


state 496

  216 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@6 END .

    $default  reduce using rule 216 (class_definition)


state 497

  266 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 523


state 498

  267 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 267 (delegate_definition)


state 499

   52 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 524


state 500

   53 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 53 (function_definition)


state 501

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 525


state 502

   49 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 526


state 503

   50 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR .

    $default  reduce using rule 50 (function_declaration)


state 504

  252 exception_list: exception_list COMMA IDENTIFIER .

    $default  reduce using rule 252 (exception_list)


state 505

  214 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list . END
  232 member_declaration_list: member_declaration_list . member_declaration

    PUBLIC_T     shift, and go to state 180
    PRIVATE_T    shift, and go to state 181
    VIRTUAL_T    shift, and go to state 182
    OVERRIDE_T   shift, and go to state 183
    ABSTRACT_T   shift, and go to state 184
    CONSTRUCTOR  shift, and go to state 483
    FINAL        shift, and go to state 484
    FUNCTION     shift, and go to state 485
    DIM          shift, and go to state 486
    END          shift, and go to state 527
    DECLARE      shift, and go to state 487
    BSUB         shift, and go to state 488

    class_or_member_modifier_list  go to state 489
    class_or_member_modifier       go to state 186
    member_declaration             go to state 522
    method_member                  go to state 492
    method_function_definition     go to state 493
    constructor_definition         go to state 494
    access_modifier                go to state 188
    field_member                   go to state 495


state 506

  218 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 END .

    $default  reduce using rule 218 (class_definition)


state 507

  208 template_def_list: template_def_list COMMA IDENTIFIER COLON identifier_type_specifier .

    $default  reduce using rule 208 (template_def_list)


state 508

  253 constructor_definition: CONSTRUCTOR IDENTIFIER . LP parameter_list RP throws_clause myblock
  254                       | CONSTRUCTOR IDENTIFIER . LP RP throws_clause myblock

    LP  shift, and go to state 528


state 509

  263 field_member: FINAL IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 529


state 510

  220 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier
  265 field_member: FINAL class_or_member_modifier_list . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 530
    PUBLIC_T    shift, and go to state 180
    PRIVATE_T   shift, and go to state 181
    VIRTUAL_T   shift, and go to state 182
    OVERRIDE_T  shift, and go to state 183
    ABSTRACT_T  shift, and go to state 184

    class_or_member_modifier  go to state 266
    access_modifier           go to state 188


state 511

  239 method_function_definition: FUNCTION IDENTIFIER . LP parameter_list RP AS type_specifier throws_clause myblock
  240                           | FUNCTION IDENTIFIER . LP RP AS type_specifier throws_clause myblock

    LP  shift, and go to state 531


state 512

  261 field_member: DIM IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 532


state 513

  255 constructor_definition: DECLARE CONSTRUCTOR . IDENTIFIER LP parameter_list RP throws_clause CR
  256                       | DECLARE CONSTRUCTOR . IDENTIFIER LP RP throws_clause CR

    IDENTIFIER  shift, and go to state 533


state 514

  241 method_function_definition: DECLARE FUNCTION . IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  242                           | DECLARE FUNCTION . IDENTIFIER LP RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 534


state 515

  245 method_function_definition: DECLARE BSUB . IDENTIFIER LP parameter_list RP throws_clause CR
  246                           | DECLARE BSUB . IDENTIFIER LP RP throws_clause CR

    IDENTIFIER  shift, and go to state 535


state 516

  243 method_function_definition: BSUB IDENTIFIER . LP parameter_list RP throws_clause myblock
  244                           | BSUB IDENTIFIER . LP RP throws_clause myblock

    LP  shift, and go to state 536


state 517

  262 field_member: class_or_member_modifier_list IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 537


state 518

  264 field_member: class_or_member_modifier_list FINAL . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 538


state 519

  236 method_member: class_or_member_modifier_list method_function_definition .

    $default  reduce using rule 236 (method_member)


state 520

  238 method_member: class_or_member_modifier_list constructor_definition .

    $default  reduce using rule 238 (method_member)


state 521

  212 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list END .

    $default  reduce using rule 212 (class_definition)


state 522

  232 member_declaration_list: member_declaration_list member_declaration .

    $default  reduce using rule 232 (member_declaration_list)


state 523

  266 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 266 (delegate_definition)


state 524

   52 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 52 (function_definition)


state 525

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 539


state 526

   49 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 49 (function_declaration)


state 527

  214 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END .

    $default  reduce using rule 214 (class_definition)


state 528

  253 constructor_definition: CONSTRUCTOR IDENTIFIER LP . parameter_list RP throws_clause myblock
  254                       | CONSTRUCTOR IDENTIFIER LP . RP throws_clause myblock

    IDENTIFIER  shift, and go to state 299
    RP          shift, and go to state 540

    parameter_list  go to state 541


state 529

  263 field_member: FINAL IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 542


state 530

  265 field_member: FINAL class_or_member_modifier_list IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 543


state 531

  239 method_function_definition: FUNCTION IDENTIFIER LP . parameter_list RP AS type_specifier throws_clause myblock
  240                           | FUNCTION IDENTIFIER LP . RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 299
    RP          shift, and go to state 544

    parameter_list  go to state 545


state 532

  261 field_member: DIM IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 546


state 533

  255 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER . LP parameter_list RP throws_clause CR
  256                       | DECLARE CONSTRUCTOR IDENTIFIER . LP RP throws_clause CR

    LP  shift, and go to state 547


state 534

  241 method_function_definition: DECLARE FUNCTION IDENTIFIER . LP parameter_list RP AS type_specifier throws_clause CR
  242                           | DECLARE FUNCTION IDENTIFIER . LP RP AS type_specifier throws_clause CR

    LP  shift, and go to state 548


state 535

  245 method_function_definition: DECLARE BSUB IDENTIFIER . LP parameter_list RP throws_clause CR
  246                           | DECLARE BSUB IDENTIFIER . LP RP throws_clause CR

    LP  shift, and go to state 549


state 536

  243 method_function_definition: BSUB IDENTIFIER LP . parameter_list RP throws_clause myblock
  244                           | BSUB IDENTIFIER LP . RP throws_clause myblock

    IDENTIFIER  shift, and go to state 299
    RP          shift, and go to state 550

    parameter_list  go to state 551


state 537

  262 field_member: class_or_member_modifier_list IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 552


state 538

  264 field_member: class_or_member_modifier_list FINAL IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 553


state 539

   48 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 48 (function_declaration)


state 540

  254 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP . throws_clause myblock

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 554


state 541

   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  253 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list . RP throws_clause myblock

    RP     shift, and go to state 555
    COMMA  shift, and go to state 556


state 542

  263 field_member: FINAL IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 557

    $default  reduce using rule 259 (initializer_opt)

    initializer_opt  go to state 558


state 543

  265 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 559


state 544

  240 method_function_definition: FUNCTION IDENTIFIER LP RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 560


state 545

   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  239 method_function_definition: FUNCTION IDENTIFIER LP parameter_list . RP AS type_specifier throws_clause myblock

    RP     shift, and go to state 561
    COMMA  shift, and go to state 556


state 546

  261 field_member: DIM IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 557

    $default  reduce using rule 259 (initializer_opt)

    initializer_opt  go to state 562


state 547

  255 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP . parameter_list RP throws_clause CR
  256                       | DECLARE CONSTRUCTOR IDENTIFIER LP . RP throws_clause CR

    IDENTIFIER  shift, and go to state 299
    RP          shift, and go to state 563

    parameter_list  go to state 564


state 548

  241 method_function_definition: DECLARE FUNCTION IDENTIFIER LP . parameter_list RP AS type_specifier throws_clause CR
  242                           | DECLARE FUNCTION IDENTIFIER LP . RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 299
    RP          shift, and go to state 565

    parameter_list  go to state 566


state 549

  245 method_function_definition: DECLARE BSUB IDENTIFIER LP . parameter_list RP throws_clause CR
  246                           | DECLARE BSUB IDENTIFIER LP . RP throws_clause CR

    IDENTIFIER  shift, and go to state 299
    RP          shift, and go to state 567

    parameter_list  go to state 568


state 550

  244 method_function_definition: BSUB IDENTIFIER LP RP . throws_clause myblock

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 569


state 551

   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  243 method_function_definition: BSUB IDENTIFIER LP parameter_list . RP throws_clause myblock

    RP     shift, and go to state 570
    COMMA  shift, and go to state 556


state 552

  262 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 557

    $default  reduce using rule 259 (initializer_opt)

    initializer_opt  go to state 571


state 553

  264 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 572


state 554

  254 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 573


state 555

  253 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP . throws_clause myblock

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 574


state 556

   58 parameter_list: parameter_list COMMA . IDENTIFIER AS type_specifier

    IDENTIFIER  shift, and go to state 402


state 557

  260 initializer_opt: ASSIGN_T . expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    STRING_LITERAL  shift, and go to state 15
    REGEXP_LITERAL  shift, and go to state 16
    IDENTIFIER      shift, and go to state 93
    AUTOVAR         shift, and go to state 18
    NULL_T          shift, and go to state 24
    LP              shift, and go to state 25
    LC              shift, and go to state 26
    SUB             shift, and go to state 27
    BIT_NOT         shift, and go to state 28
    TRUE_T          shift, and go to state 29
    FALSE_T         shift, and go to state 30
    EXCLAMATION     shift, and go to state 31
    NEW             shift, and go to state 34
    THIS_T          shift, and go to state 35
    SUPER_T         shift, and go to state 36

    expression                 go to state 575
    assignment_expression      go to state 51
    logical_or_expression      go to state 52
    logical_and_expression     go to state 53
    equality_expression        go to state 54
    relational_expression      go to state 55
    additive_expression        go to state 56
    multiplicative_expression  go to state 57
    unary_expression           go to state 58
    postfix_expression         go to state 59
    primary_expression         go to state 60
    primary_no_new_array       go to state 61
    array_literal              go to state 62
    array_creation             go to state 63


state 558

  263 field_member: FINAL IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 576


state 559

  265 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 557

    $default  reduce using rule 259 (initializer_opt)

    initializer_opt  go to state 577


state 560

  240 method_function_definition: FUNCTION IDENTIFIER LP RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 578


state 561

  239 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 579


state 562

  261 field_member: DIM IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 580


state 563

  256 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP . throws_clause CR

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 581


state 564

   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  255 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list . RP throws_clause CR

    RP     shift, and go to state 582
    COMMA  shift, and go to state 556


state 565

  242 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 583


state 566

   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  241 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list . RP AS type_specifier throws_clause CR

    RP     shift, and go to state 584
    COMMA  shift, and go to state 556


state 567

  246 method_function_definition: DECLARE BSUB IDENTIFIER LP RP . throws_clause CR

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 585


state 568

   58 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  245 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list . RP throws_clause CR

    RP     shift, and go to state 586
    COMMA  shift, and go to state 556


state 569

  244 method_function_definition: BSUB IDENTIFIER LP RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 587


state 570

  243 method_function_definition: BSUB IDENTIFIER LP parameter_list RP . throws_clause myblock

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 588


state 571

  262 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 589


state 572

  264 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 557

    $default  reduce using rule 259 (initializer_opt)

    initializer_opt  go to state 590


state 573

  254 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP throws_clause myblock .

    $default  reduce using rule 254 (constructor_definition)


state 574

  253 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 591


state 575

   64 expression: expression . COMMA assignment_expression
  260 initializer_opt: ASSIGN_T expression .

    COMMA  shift, and go to state 140

    $default  reduce using rule 260 (initializer_opt)


state 576

  263 field_member: FINAL IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 263 (field_member)


state 577

  265 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 592


state 578

  240 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 593


state 579

  239 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 594


state 580

  261 field_member: DIM IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 261 (field_member)


state 581

  256 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause . CR

    CR  shift, and go to state 595


state 582

  255 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP . throws_clause CR

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 596


state 583

  242 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 597


state 584

  241 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 598


state 585

  246 method_function_definition: DECLARE BSUB IDENTIFIER LP RP throws_clause . CR

    CR  shift, and go to state 599


state 586

  245 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP . throws_clause CR

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 600


state 587

  244 method_function_definition: BSUB IDENTIFIER LP RP throws_clause myblock .

    $default  reduce using rule 244 (method_function_definition)


state 588

  243 method_function_definition: BSUB IDENTIFIER LP parameter_list RP throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 601


state 589

  262 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 262 (field_member)


state 590

  264 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 602


state 591

  253 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause myblock .

    $default  reduce using rule 253 (constructor_definition)


state 592

  265 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 265 (field_member)


state 593

  240 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 603


state 594

  239 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 604


state 595

  256 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause CR .

    $default  reduce using rule 256 (constructor_definition)


state 596

  255 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause . CR

    CR  shift, and go to state 605


state 597

  242 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 606


state 598

  241 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 256
    VOID_T            shift, and go to state 113
    BOOLEAN_T         shift, and go to state 114
    INT_T             shift, and go to state 115
    DOUBLE_T          shift, and go to state 116
    STRING_T          shift, and go to state 117
    VARIENT_T         shift, and go to state 118
    NATIVE_POINTER_T  shift, and go to state 119
    DELEGATE          shift, and go to state 128

    basic_type_specifier       go to state 129
    identifier_type_specifier  go to state 130
    array_type_specifier_sub   go to state 131
    array_type_specifier       go to state 132
    template_type_specifier    go to state 133
    type_specifier             go to state 607


state 599

  246 method_function_definition: DECLARE BSUB IDENTIFIER LP RP throws_clause CR .

    $default  reduce using rule 246 (method_function_definition)


state 600

  245 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause . CR

    CR  shift, and go to state 608


state 601

  243 method_function_definition: BSUB IDENTIFIER LP parameter_list RP throws_clause myblock .

    $default  reduce using rule 243 (method_function_definition)


state 602

  264 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 264 (field_member)


state 603

  240 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 240 (method_function_definition)


state 604

  239 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 108

    myblock  go to state 609


state 605

  255 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR .

    $default  reduce using rule 255 (constructor_definition)


state 606

  242 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 610


state 607

  241 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 417

    $default  reduce using rule 249 (throws_clause)

    throws_clause  go to state 611


state 608

  245 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause CR .

    $default  reduce using rule 245 (method_function_definition)


state 609

  239 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 239 (method_function_definition)


state 610

  242 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR .

    $default  reduce using rule 242 (method_function_definition)


state 611

  241 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 612


state 612

  241 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR .

    $default  reduce using rule 241 (method_function_definition)
