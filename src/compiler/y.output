State 259 conflicts: 1 shift/reduce


Grammar

    0 $accept: translation_unit $end

    1 translation_unit: initial_declaration
    2                 | translation_unit definition_or_statement

    3 initial_declaration: /* empty */
    4                    | require_list rename_list
    5                    | require_list
    6                    | rename_list
    7                    | initial_declaration lib_function

    8 require_list: require_declaration
    9             | require_list require_declaration

   10 require_declaration: REQUIRE package_name CR

   11 package_name: IDENTIFIER
   12             | package_name DOT IDENTIFIER

   13 rename_list: rename_declaration
   14            | rename_list rename_declaration

   15 rename_declaration: RENAME package_name IDENTIFIER CR

   16 definition_or_statement: function_definition
   17                        | class_definition
   18                        | statement
   19                        | delegate_definition
   20                        | enum_definition
   21                        | const_definition

   22 basic_type_specifier: VOID_T
   23                     | BOOLEAN_T
   24                     | INT_T
   25                     | DOUBLE_T
   26                     | STRING_T
   27                     | VARIENT_T
   28                     | FLOAT_T
   29                     | NATIVE_POINTER_T
   30                     | DELEGATE

   31 identifier_type_specifier: IDENTIFIER

   32 array_type_specifier_sub: basic_type_specifier LB RB
   33                         | IDENTIFIER LB RB
   34                         | array_type_specifier LB RB
   35                         | template_type_specifier LB RB

   36 array_type_specifier: array_type_specifier_sub global

   37 template_type_specifier: IDENTIFIER LT type_list GT

   38 type_specifier: basic_type_specifier
   39               | array_type_specifier
   40               | identifier_type_specifier
   41               | template_type_specifier

   42 type_list: type_specifier
   43          | type_list COMMA type_specifier

   44 $@1: /* empty */

   45 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list END

   46 lib_function_declaration_list: /* empty */
   47                              | lib_function_declaration_list function_declaration
   48                              | lib_function_declaration_list class_definition

   49 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   50                     | DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR
   51                     | DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   52                     | DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause CR

   53 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   54                    | FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock
   55                    | BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock
   56                    | BSUB IDENTIFIER LP apostrophe RP throws_clause myblock
   57                    | function_declaration

   58 parameter_list: IDENTIFIER AS type_specifier
   59               | parameter_list COMMA IDENTIFIER AS type_specifier

   60 argument_list: assignment_expression
   61              | argument_list COMMA assignment_expression

   62 statement_list: statement
   63               | statement_list statement

   64 expression: assignment_expression
   65           | expression COMMA assignment_expression

   66 assignment_expression: logical_or_expression
   67                      | primary_expression assignment_operator assignment_expression

   68 assignment_operator: ASSIGN_T
   69                    | ADD_ASSIGN_T
   70                    | SUB_ASSIGN_T
   71                    | ATM_ADD_ASSIGN_T
   72                    | ATM_SUB_ASSIGN_T
   73                    | MUL_ASSIGN_T
   74                    | DIV_ASSIGN_T
   75                    | MOD_ASSIGN_T

   76 logical_or_expression: logical_and_expression
   77                      | logical_or_expression LOGICAL_OR logical_and_expression

   78 logical_and_expression: equality_expression
   79                       | logical_and_expression LOGICAL_AND equality_expression

   80 equality_expression: relational_expression
   81                    | equality_expression EQ relational_expression
   82                    | equality_expression NE relational_expression

   83 relational_expression: additive_expression
   84                      | relational_expression GT additive_expression
   85                      | relational_expression GE additive_expression
   86                      | relational_expression LT additive_expression
   87                      | relational_expression LE additive_expression

   88 additive_expression: multiplicative_expression
   89                    | additive_expression ADD multiplicative_expression
   90                    | additive_expression SUB multiplicative_expression

   91 multiplicative_expression: unary_expression
   92                          | multiplicative_expression MUL unary_expression
   93                          | multiplicative_expression DIV unary_expression
   94                          | multiplicative_expression MOD unary_expression
   95                          | multiplicative_expression BIT_AND unary_expression
   96                          | multiplicative_expression BIT_OR unary_expression
   97                          | multiplicative_expression BIT_XOR unary_expression

   98 unary_expression: postfix_expression
   99                 | SUB unary_expression
  100                 | EXCLAMATION unary_expression
  101                 | BIT_NOT unary_expression

  102 postfix_expression: primary_expression
  103                   | primary_expression INCREMENT
  104                   | primary_expression DECREMENT
  105                   | primary_expression INSTANCEOF type_specifier

  106 primary_expression: primary_no_new_array
  107                   | array_creation
  108                   | IDENTIFIER
  109                   | AUTOVAR

  110 primary_no_new_array: primary_no_new_array LB expression RB
  111                     | IDENTIFIER LB expression RB
  112                     | IDENTIFIER LB expression COLON expression RB
  113                     | primary_no_new_array LB expression COLON expression RB
  114                     | primary_expression DOT IDENTIFIER
  115                     | primary_expression LP argument_list RP
  116                     | primary_expression LP RP
  117                     | LP expression RP
  118                     | primary_expression DOWN_CAST_BEGIN type_specifier DOWN_CAST_END
  119                     | INT_LITERAL
  120                     | DOUBLE_LITERAL
  121                     | FLOAT_LITERAL
  122                     | STRING_LITERAL
  123                     | REGEXP_LITERAL
  124                     | TRUE_T
  125                     | FALSE_T
  126                     | NULL_T
  127                     | array_literal
  128                     | THIS_T
  129                     | SUPER_T
  130                     | NEW DELEGATE LP RP
  131                     | NEW IDENTIFIER LP RP
  132                     | NEW IDENTIFIER LP argument_list RP
  133                     | NEW IDENTIFIER DOT IDENTIFIER LP RP
  134                     | NEW IDENTIFIER DOT IDENTIFIER LP argument_list RP

  135 array_literal: LC expression_list RC
  136              | LC expression_list COMMA RC

  137 array_creation: NEW basic_type_specifier dimension_expression_list global
  138               | NEW basic_type_specifier dimension_expression_list dimension_list global
  139               | NEW identifier_type_specifier dimension_expression_list global
  140               | NEW identifier_type_specifier dimension_expression_list dimension_list global
  141               | NEW template_type_specifier dimension_expression_list global
  142               | NEW template_type_specifier dimension_expression_list dimension_list global

  143 dimension_expression_list: dimension_expression
  144                          | dimension_expression_list dimension_expression

  145 dimension_expression: LB expression RB

  146 dimension_list: LB RB
  147               | dimension_list LB RB

  148 expression_list: /* empty */
  149                | assignment_expression
  150                | expression_list COMMA assignment_expression

  151 statement: expression CR
  152          | if_statement
  153          | switch_statement
  154          | while_statement
  155          | for_statement
  156          | do_while_statement
  157          | foreach_statement
  158          | return_statement
  159          | break_statement
  160          | continue_statement
  161          | try_statement
  162          | throw_statement
  163          | declaration_statement
  164          | CR

  165 if_statement: IF expression THEN myblock
  166             | IF expression THEN myblock ELSE myblock
  167             | IF expression THEN myblock elsif_list
  168             | IF expression THEN myblock elsif_list ELSE myblock

  169 elsif_list: elsif
  170           | elsif_list elsif

  171 elsif: ELSIF expression THEN myblock

  172 label_opt: /* empty */
  173          | IDENTIFIER COLON

  174 switch_statement: SWITCH expression CR case_list default_opt

  175 case_list: one_case
  176          | case_list one_case

  177 one_case: CASE case_expression_list myblock

  178 default_opt: /* empty */
  179            | DEFAULT_T myblock

  180 case_expression_list: assignment_expression
  181                     | expression_list COMMA assignment_expression

  182 while_statement: label_opt WHILE expression myblock

  183 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock

  184 do_while_statement: label_opt DO_T block WHILE LP expression RP CR

  185 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP block

  186 expression_opt: /* empty */
  187               | expression

  188 return_statement: RETURN_T expression_opt CR

  189 identifier_opt: /* empty */
  190               | IDENTIFIER

  191 break_statement: BREAK identifier_opt CR

  192 continue_statement: CONTINUE identifier_opt CR

  193 try_statement: TRY myblock catch_list FINALLY myblock
  194              | TRY myblock FINALLY block
  195              | TRY myblock catch_list

  196 catch_list: catch_clause
  197           | catch_list catch_clause

  198 @2: /* empty */

  199 catch_clause: CATCH @2 type_specifier IDENTIFIER myblock

  200 throw_statement: THROW expression CR
  201                | THROW CR

  202 declaration_statement: DIM volatile IDENTIFIER AS shared type_specifier CR
  203                      | DIM volatile IDENTIFIER AS shared type_specifier ASSIGN_T expression CR
  204                      | FINAL IDENTIFIER AS type_specifier CR
  205                      | FINAL IDENTIFIER AS type_specifier ASSIGN_T expression CR

  206 @3: /* empty */

  207 block: LC @3 statement_list RC
  208      | LC RC

  209 template_def_list: IDENTIFIER
  210                  | template_def_list COMMA IDENTIFIER
  211                  | IDENTIFIER COLON identifier_type_specifier
  212                  | template_def_list COMMA IDENTIFIER COLON identifier_type_specifier

  213 template_list: LT template_def_list GT
  214              | /* empty */

  215 $@4: /* empty */

  216 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list END

  217 $@5: /* empty */

  218 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END

  219 $@6: /* empty */

  220 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@6 END

  221 $@7: /* empty */

  222 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 END

  223 class_or_member_modifier_list: class_or_member_modifier
  224                              | class_or_member_modifier_list class_or_member_modifier

  225 class_or_member_modifier: access_modifier
  226                         | VIRTUAL_T
  227                         | OVERRIDE_T
  228                         | ABSTRACT_T

  229 class_or_interface: CLASS_T
  230                   | INTERFACE_T

  231 extends: /* empty */
  232        | COLON extends_list

  233 extends_list: IDENTIFIER
  234             | extends_list COMMA IDENTIFIER

  235 member_declaration_list: member_declaration
  236                        | member_declaration_list member_declaration

  237 member_declaration: method_member
  238                   | field_member

  239 method_member: method_function_definition
  240              | class_or_member_modifier_list method_function_definition
  241              | constructor_definition
  242              | class_or_member_modifier_list constructor_definition

  243 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock
  244                           | FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause myblock
  245                           | DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  246                           | DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR
  247                           | BSUB IDENTIFIER LP parameter_list RP throws_clause myblock
  248                           | BSUB IDENTIFIER LP RP throws_clause myblock
  249                           | DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause CR
  250                           | DECLARE BSUB IDENTIFIER LP RP throws_clause CR

  251 apostrophe: /* empty */
  252           | COMMA APOSTROPHE

  253 throws_clause: /* empty */
  254              | THROWS exception_list

  255 exception_list: IDENTIFIER
  256               | exception_list COMMA IDENTIFIER

  257 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause myblock
  258                       | CONSTRUCTOR IDENTIFIER LP RP throws_clause myblock
  259                       | DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR
  260                       | DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause CR

  261 access_modifier: PUBLIC_T
  262                | PRIVATE_T

  263 initializer_opt: /* empty */
  264                | ASSIGN_T expression

  265 field_member: DIM IDENTIFIER AS type_specifier initializer_opt CR
  266             | class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR
  267             | FINAL IDENTIFIER AS type_specifier initializer_opt CR
  268             | class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt CR
  269             | FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR

  270 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  271                    | DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

  272 enum_definition: ENUM IDENTIFIER LC enumerator_list RC
  273                | ENUM IDENTIFIER LC enumerator_list COMMA RC

  274 enumerator_list: IDENTIFIER
  275                | enumerator_list COMMA IDENTIFIER

  276 const_definition: CONST IDENTIFIER ASSIGN_T expression CR
  277                 | CONST type_specifier IDENTIFIER CR

  278 shared: /* empty */
  279       | SHARED

  280 volatile: /* empty */
  281         | VOLATILE

  282 global: /* empty */
  283       | GLOBAL

  284 unsafe: /* empty */
  285       | UNSAFE CR
  286       | SAFE CR

  287 @8: /* empty */

  288 myblock: CR unsafe @8 statement_list END
  289        | CR END


Terminals, with rules where they appear

$end (0) 0
error (256)
INT_LITERAL (258) 119
DOUBLE_LITERAL (259) 120
FLOAT_LITERAL (260) 121
STRING_LITERAL (261) 122
REGEXP_LITERAL (262) 123
IDENTIFIER (263) 11 12 15 31 33 37 45 49 50 51 52 53 54 55 56 58 59
    108 111 112 114 131 132 133 134 173 185 190 199 202 203 204 205
    209 210 211 212 216 218 220 222 233 234 243 244 245 246 247 248
    249 250 255 256 257 258 259 260 265 266 267 268 269 270 271 272
    273 274 275 276 277
AUTOVAR (264) 109
IF (265) 165 166 167 168
ELSE (266) 166 168
ELSIF (267) 171
SWITCH (268) 174
CASE (269) 177
DEFAULT_T (270) 179
WHILE (271) 182 184
DO_T (272) 184
FOR (273) 183
FOREACH (274) 185
RETURN_T (275) 188
BREAK (276) 191
CONTINUE (277) 192
NULL_T (278) 126
LP (279) 49 50 51 52 53 54 55 56 115 116 117 130 131 132 133 134 184
    185 243 244 245 246 247 248 249 250 257 258 259 260 270 271
RP (280) 49 50 51 52 53 54 55 56 115 116 117 130 131 132 133 134 184
    185 243 244 245 246 247 248 249 250 257 258 259 260 270 271
LC (281) 135 136 207 208 272 273
RC (282) 135 136 207 208 272 273
LB (283) 32 33 34 35 110 111 112 113 145 146 147
RB (284) 32 33 34 35 110 111 112 113 145 146 147
SEMICOLON (285) 183
COLON (286) 112 113 173 185 211 212 232
COMMA (287) 43 59 61 65 136 150 181 210 212 234 252 256 273 275
ASSIGN_T (288) 68 203 205 264 276
LOGICAL_AND (289) 79
LOGICAL_OR (290) 77
EQ (291) 81
NE (292) 82
GT (293) 37 84 213
GE (294) 85
LT (295) 37 86 213
LE (296) 87
ADD (297) 89
SUB (298) 90 99
MUL (299) 92
DIV (300) 93
MOD (301) 94
BIT_AND (302) 95
BIT_OR (303) 96
BIT_XOR (304) 97
BIT_NOT (305) 101
TRUE_T (306) 124
FALSE_T (307) 125
EXCLAMATION (308) 100
DOT (309) 12 114 133 134
ADD_ASSIGN_T (310) 69
SUB_ASSIGN_T (311) 70
MUL_ASSIGN_T (312) 73
DIV_ASSIGN_T (313) 74
MOD_ASSIGN_T (314) 75
INCREMENT (315) 103
DECREMENT (316) 104
TRY (317) 193 194 195
CATCH (318) 199
FINALLY (319) 193 194
THROW (320) 200 201
THROWS (321) 254
VOID_T (322) 22
BOOLEAN_T (323) 23
INT_T (324) 24
DOUBLE_T (325) 25
STRING_T (326) 26
VARIENT_T (327) 27
FLOAT_T (328) 28
NATIVE_POINTER_T (329) 29
NEW (330) 130 131 132 133 134 137 138 139 140 141 142
REQUIRE (331) 10
RENAME (332) 15
CLASS_T (333) 229
INTERFACE_T (334) 230
PUBLIC_T (335) 261
PRIVATE_T (336) 262
VIRTUAL_T (337) 226
OVERRIDE_T (338) 227
ABSTRACT_T (339) 228
THIS_T (340) 128
SUPER_T (341) 129
CONSTRUCTOR (342) 257 258 259 260
INSTANCEOF (343) 105
DOWN_CAST_BEGIN (344) 118
DOWN_CAST_END (345) 118
DELEGATE (346) 30 130 270 271
FINAL (347) 204 205 267 268 269
ENUM (348) 272 273
CONST (349) 276 277
FUNCTION (350) 49 50 53 54 243 244 245 246
AS (351) 49 50 53 54 58 59 202 203 204 205 243 244 245 246 265 266
    267 268 269 270 271
THEN (352) 165 166 167 168 171
DIM (353) 202 203 265
END (354) 45 216 218 220 222 288 289
CR (355) 10 15 45 49 50 51 52 151 164 174 184 188 191 192 200 201 202
    203 204 205 216 218 220 222 245 246 249 250 259 260 265 266 267
    268 269 270 271 276 277 285 286 288 289
DECLARE (356) 49 50 51 52 245 246 249 250 259 260
BSUB (357) 51 52 55 56 247 248 249 250
APOSTROPHE (358) 252
LIB (359) 45
UNSAFE (360) 285
SAFE (361) 286
SHARED (362) 279
GLOBAL (363) 283
VOLATILE (364) 281
ATM_ADD_ASSIGN_T (365) 71
ATM_SUB_ASSIGN_T (366) 72


Nonterminals, with rules where they appear

$accept (112)
    on left: 0
translation_unit (113)
    on left: 1 2, on right: 0 2
initial_declaration (114)
    on left: 3 4 5 6 7, on right: 1 7
require_list (115)
    on left: 8 9, on right: 4 5 9
require_declaration (116)
    on left: 10, on right: 8 9
package_name (117)
    on left: 11 12, on right: 10 12 15
rename_list (118)
    on left: 13 14, on right: 4 6 14
rename_declaration (119)
    on left: 15, on right: 13 14
definition_or_statement (120)
    on left: 16 17 18 19 20 21, on right: 2
basic_type_specifier (121)
    on left: 22 23 24 25 26 27 28 29 30, on right: 32 38 137 138
identifier_type_specifier (122)
    on left: 31, on right: 40 139 140 211 212
array_type_specifier_sub (123)
    on left: 32 33 34 35, on right: 36
array_type_specifier (124)
    on left: 36, on right: 34 39
template_type_specifier (125)
    on left: 37, on right: 35 41 141 142
type_specifier (126)
    on left: 38 39 40 41, on right: 42 43 49 50 53 54 58 59 105 118
    199 202 203 204 205 243 244 245 246 265 266 267 268 269 270 271
    277
type_list (127)
    on left: 42 43, on right: 37 43
lib_function (128)
    on left: 45, on right: 7
$@1 (129)
    on left: 44, on right: 45
lib_function_declaration_list (130)
    on left: 46 47 48, on right: 45 47 48
function_declaration (131)
    on left: 49 50 51 52, on right: 47 57
function_definition (132)
    on left: 53 54 55 56 57, on right: 16
parameter_list (133)
    on left: 58 59, on right: 49 51 53 55 59 243 245 247 249 257 259
    270
argument_list (134)
    on left: 60 61, on right: 61 115 132 134
statement_list (135)
    on left: 62 63, on right: 63 207 288
expression (136)
    on left: 64 65, on right: 65 110 111 112 113 117 145 151 165 166
    167 168 171 174 182 184 185 187 200 203 205 264 276
assignment_expression (137)
    on left: 66 67, on right: 60 61 64 65 67 149 150 180 181
assignment_operator (138)
    on left: 68 69 70 71 72 73 74 75, on right: 67
logical_or_expression (139)
    on left: 76 77, on right: 66 77
logical_and_expression (140)
    on left: 78 79, on right: 76 77 79
equality_expression (141)
    on left: 80 81 82, on right: 78 79 81 82
relational_expression (142)
    on left: 83 84 85 86 87, on right: 80 81 82 84 85 86 87
additive_expression (143)
    on left: 88 89 90, on right: 83 84 85 86 87 89 90
multiplicative_expression (144)
    on left: 91 92 93 94 95 96 97, on right: 88 89 90 92 93 94 95 96
    97
unary_expression (145)
    on left: 98 99 100 101, on right: 91 92 93 94 95 96 97 99 100 101
postfix_expression (146)
    on left: 102 103 104 105, on right: 98
primary_expression (147)
    on left: 106 107 108 109, on right: 67 102 103 104 105 114 115
    116 118
primary_no_new_array (148)
    on left: 110 111 112 113 114 115 116 117 118 119 120 121 122 123
    124 125 126 127 128 129 130 131 132 133 134, on right: 106 110
    113
array_literal (149)
    on left: 135 136, on right: 127
array_creation (150)
    on left: 137 138 139 140 141 142, on right: 107
dimension_expression_list (151)
    on left: 143 144, on right: 137 138 139 140 141 142 144
dimension_expression (152)
    on left: 145, on right: 143 144
dimension_list (153)
    on left: 146 147, on right: 138 140 142 147
expression_list (154)
    on left: 148 149 150, on right: 135 136 150 181
statement (155)
    on left: 151 152 153 154 155 156 157 158 159 160 161 162 163 164,
    on right: 18 62 63
if_statement (156)
    on left: 165 166 167 168, on right: 152
elsif_list (157)
    on left: 169 170, on right: 167 168 170
elsif (158)
    on left: 171, on right: 169 170
label_opt (159)
    on left: 172 173, on right: 182 183 184 185
switch_statement (160)
    on left: 174, on right: 153
case_list (161)
    on left: 175 176, on right: 174 176
one_case (162)
    on left: 177, on right: 175 176
default_opt (163)
    on left: 178 179, on right: 174
case_expression_list (164)
    on left: 180 181, on right: 177
while_statement (165)
    on left: 182, on right: 154
for_statement (166)
    on left: 183, on right: 155
do_while_statement (167)
    on left: 184, on right: 156
foreach_statement (168)
    on left: 185, on right: 157
expression_opt (169)
    on left: 186 187, on right: 183 188
return_statement (170)
    on left: 188, on right: 158
identifier_opt (171)
    on left: 189 190, on right: 191 192
break_statement (172)
    on left: 191, on right: 159
continue_statement (173)
    on left: 192, on right: 160
try_statement (174)
    on left: 193 194 195, on right: 161
catch_list (175)
    on left: 196 197, on right: 193 195 197
catch_clause (176)
    on left: 199, on right: 196 197
@2 (177)
    on left: 198, on right: 199
throw_statement (178)
    on left: 200 201, on right: 162
declaration_statement (179)
    on left: 202 203 204 205, on right: 163
block (180)
    on left: 207 208, on right: 184 185 194
@3 (181)
    on left: 206, on right: 207
template_def_list (182)
    on left: 209 210 211 212, on right: 210 212 213
template_list (183)
    on left: 213 214, on right: 216 218 220 222
class_definition (184)
    on left: 216 218 220 222, on right: 17 48
$@4 (185)
    on left: 215, on right: 216
$@5 (186)
    on left: 217, on right: 218
$@6 (187)
    on left: 219, on right: 220
$@7 (188)
    on left: 221, on right: 222
class_or_member_modifier_list (189)
    on left: 223 224, on right: 218 222 224 240 242 266 268 269
class_or_member_modifier (190)
    on left: 225 226 227 228, on right: 223 224
class_or_interface (191)
    on left: 229 230, on right: 216 218 220 222
extends (192)
    on left: 231 232, on right: 216 218 220 222
extends_list (193)
    on left: 233 234, on right: 232 234
member_declaration_list (194)
    on left: 235 236, on right: 216 218 236
member_declaration (195)
    on left: 237 238, on right: 235 236
method_member (196)
    on left: 239 240 241 242, on right: 237
method_function_definition (197)
    on left: 243 244 245 246 247 248 249 250, on right: 239 240
apostrophe (198)
    on left: 251 252, on right: 49 50 51 52 53 54 55 56 270 271
throws_clause (199)
    on left: 253 254, on right: 49 50 51 52 53 54 55 56 243 244 245
    246 247 248 249 250 257 258 259 260 270 271
exception_list (200)
    on left: 255 256, on right: 254 256
constructor_definition (201)
    on left: 257 258 259 260, on right: 241 242
access_modifier (202)
    on left: 261 262, on right: 225
initializer_opt (203)
    on left: 263 264, on right: 265 266 267 268 269
field_member (204)
    on left: 265 266 267 268 269, on right: 238
delegate_definition (205)
    on left: 270 271, on right: 19
enum_definition (206)
    on left: 272 273, on right: 20
enumerator_list (207)
    on left: 274 275, on right: 272 273 275
const_definition (208)
    on left: 276 277, on right: 21
shared (209)
    on left: 278 279, on right: 202 203 216 218 220 222
volatile (210)
    on left: 280 281, on right: 202 203
global (211)
    on left: 282 283, on right: 36 137 138 139 140 141 142
unsafe (212)
    on left: 284 285 286, on right: 288
myblock (213)
    on left: 288 289, on right: 53 54 55 56 165 166 167 168 171 177
    179 182 183 193 194 195 199 243 244 247 248 257 258
@8 (214)
    on left: 287, on right: 288


state 0

    0 $accept: . translation_unit $end

    REQUIRE  shift, and go to state 1
    RENAME   shift, and go to state 2

    $default  reduce using rule 3 (initial_declaration)

    translation_unit     go to state 3
    initial_declaration  go to state 4
    require_list         go to state 5
    require_declaration  go to state 6
    rename_list          go to state 7
    rename_declaration   go to state 8


state 1

   10 require_declaration: REQUIRE . package_name CR

    IDENTIFIER  shift, and go to state 9

    package_name  go to state 10


state 2

   15 rename_declaration: RENAME . package_name IDENTIFIER CR

    IDENTIFIER  shift, and go to state 9

    package_name  go to state 11


state 3

    0 $accept: translation_unit . $end
    2 translation_unit: translation_unit . definition_or_statement

    $end            shift, and go to state 12
    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 18
    AUTOVAR         shift, and go to state 19
    IF              shift, and go to state 20
    SWITCH          shift, and go to state 21
    RETURN_T        shift, and go to state 22
    BREAK           shift, and go to state 23
    CONTINUE        shift, and go to state 24
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    TRY             shift, and go to state 33
    THROW           shift, and go to state 34
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37
    DELEGATE        shift, and go to state 38
    FINAL           shift, and go to state 39
    ENUM            shift, and go to state 40
    CONST           shift, and go to state 41
    FUNCTION        shift, and go to state 42
    DIM             shift, and go to state 43
    CR              shift, and go to state 44
    DECLARE         shift, and go to state 45
    BSUB            shift, and go to state 46
    SHARED          shift, and go to state 47

    WHILE     reduce using rule 172 (label_opt)
    DO_T      reduce using rule 172 (label_opt)
    FOR       reduce using rule 172 (label_opt)
    FOREACH   reduce using rule 172 (label_opt)
    $default  reduce using rule 278 (shared)

    definition_or_statement    go to state 48
    function_declaration       go to state 49
    function_definition        go to state 50
    expression                 go to state 51
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64
    statement                  go to state 65
    if_statement               go to state 66
    label_opt                  go to state 67
    switch_statement           go to state 68
    while_statement            go to state 69
    for_statement              go to state 70
    do_while_statement         go to state 71
    foreach_statement          go to state 72
    return_statement           go to state 73
    break_statement            go to state 74
    continue_statement         go to state 75
    try_statement              go to state 76
    throw_statement            go to state 77
    declaration_statement      go to state 78
    class_definition           go to state 79
    delegate_definition        go to state 80
    enum_definition            go to state 81
    const_definition           go to state 82
    shared                     go to state 83


state 4

    1 translation_unit: initial_declaration .
    7 initial_declaration: initial_declaration . lib_function

    LIB  shift, and go to state 84

    $default  reduce using rule 1 (translation_unit)

    lib_function  go to state 85


state 5

    4 initial_declaration: require_list . rename_list
    5                    | require_list .
    9 require_list: require_list . require_declaration

    REQUIRE  shift, and go to state 1
    RENAME   shift, and go to state 2

    $default  reduce using rule 5 (initial_declaration)

    require_declaration  go to state 86
    rename_list          go to state 87
    rename_declaration   go to state 8


state 6

    8 require_list: require_declaration .

    $default  reduce using rule 8 (require_list)


state 7

    6 initial_declaration: rename_list .
   14 rename_list: rename_list . rename_declaration

    RENAME  shift, and go to state 2

    $default  reduce using rule 6 (initial_declaration)

    rename_declaration  go to state 88


state 8

   13 rename_list: rename_declaration .

    $default  reduce using rule 13 (rename_list)


state 9

   11 package_name: IDENTIFIER .

    $default  reduce using rule 11 (package_name)


state 10

   10 require_declaration: REQUIRE package_name . CR
   12 package_name: package_name . DOT IDENTIFIER

    DOT  shift, and go to state 89
    CR   shift, and go to state 90


state 11

   12 package_name: package_name . DOT IDENTIFIER
   15 rename_declaration: RENAME package_name . IDENTIFIER CR

    IDENTIFIER  shift, and go to state 91
    DOT         shift, and go to state 89


state 12

    0 $accept: translation_unit $end .

    $default  accept


state 13

  119 primary_no_new_array: INT_LITERAL .

    $default  reduce using rule 119 (primary_no_new_array)


state 14

  120 primary_no_new_array: DOUBLE_LITERAL .

    $default  reduce using rule 120 (primary_no_new_array)


state 15

  121 primary_no_new_array: FLOAT_LITERAL .

    $default  reduce using rule 121 (primary_no_new_array)


state 16

  122 primary_no_new_array: STRING_LITERAL .

    $default  reduce using rule 122 (primary_no_new_array)


state 17

  123 primary_no_new_array: REGEXP_LITERAL .

    $default  reduce using rule 123 (primary_no_new_array)


state 18

  108 primary_expression: IDENTIFIER .
  111 primary_no_new_array: IDENTIFIER . LB expression RB
  112                     | IDENTIFIER . LB expression COLON expression RB
  173 label_opt: IDENTIFIER . COLON

    LB     shift, and go to state 92
    COLON  shift, and go to state 93

    $default  reduce using rule 108 (primary_expression)


state 19

  109 primary_expression: AUTOVAR .

    $default  reduce using rule 109 (primary_expression)


state 20

  165 if_statement: IF . expression THEN myblock
  166             | IF . expression THEN myblock ELSE myblock
  167             | IF . expression THEN myblock elsif_list
  168             | IF . expression THEN myblock elsif_list ELSE myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    expression                 go to state 95
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 21

  174 switch_statement: SWITCH . expression CR case_list default_opt

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    expression                 go to state 96
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 22

  188 return_statement: RETURN_T . expression_opt CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    $default  reduce using rule 186 (expression_opt)

    expression                 go to state 97
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64
    expression_opt             go to state 98


state 23

  191 break_statement: BREAK . identifier_opt CR

    IDENTIFIER  shift, and go to state 99

    $default  reduce using rule 189 (identifier_opt)

    identifier_opt  go to state 100


state 24

  192 continue_statement: CONTINUE . identifier_opt CR

    IDENTIFIER  shift, and go to state 99

    $default  reduce using rule 189 (identifier_opt)

    identifier_opt  go to state 101


state 25

  126 primary_no_new_array: NULL_T .

    $default  reduce using rule 126 (primary_no_new_array)


state 26

  117 primary_no_new_array: LP . expression RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    expression                 go to state 102
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 27

  135 array_literal: LC . expression_list RC
  136              | LC . expression_list COMMA RC

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    $default  reduce using rule 148 (expression_list)

    assignment_expression      go to state 103
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64
    expression_list            go to state 104


state 28

   99 unary_expression: SUB . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    unary_expression      go to state 105
    postfix_expression    go to state 60
    primary_expression    go to state 106
    primary_no_new_array  go to state 62
    array_literal         go to state 63
    array_creation        go to state 64


state 29

  101 unary_expression: BIT_NOT . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    unary_expression      go to state 107
    postfix_expression    go to state 60
    primary_expression    go to state 106
    primary_no_new_array  go to state 62
    array_literal         go to state 63
    array_creation        go to state 64


state 30

  124 primary_no_new_array: TRUE_T .

    $default  reduce using rule 124 (primary_no_new_array)


state 31

  125 primary_no_new_array: FALSE_T .

    $default  reduce using rule 125 (primary_no_new_array)


state 32

  100 unary_expression: EXCLAMATION . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    unary_expression      go to state 108
    postfix_expression    go to state 60
    primary_expression    go to state 106
    primary_no_new_array  go to state 62
    array_literal         go to state 63
    array_creation        go to state 64


state 33

  193 try_statement: TRY . myblock catch_list FINALLY myblock
  194              | TRY . myblock FINALLY block
  195              | TRY . myblock catch_list

    CR  shift, and go to state 109

    myblock  go to state 110


state 34

  200 throw_statement: THROW . expression CR
  201                | THROW . CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37
    CR              shift, and go to state 111

    expression                 go to state 112
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 35

  130 primary_no_new_array: NEW . DELEGATE LP RP
  131                     | NEW . IDENTIFIER LP RP
  132                     | NEW . IDENTIFIER LP argument_list RP
  133                     | NEW . IDENTIFIER DOT IDENTIFIER LP RP
  134                     | NEW . IDENTIFIER DOT IDENTIFIER LP argument_list RP
  137 array_creation: NEW . basic_type_specifier dimension_expression_list global
  138               | NEW . basic_type_specifier dimension_expression_list dimension_list global
  139               | NEW . identifier_type_specifier dimension_expression_list global
  140               | NEW . identifier_type_specifier dimension_expression_list dimension_list global
  141               | NEW . template_type_specifier dimension_expression_list global
  142               | NEW . template_type_specifier dimension_expression_list dimension_list global

    IDENTIFIER        shift, and go to state 113
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 122

    basic_type_specifier       go to state 123
    identifier_type_specifier  go to state 124
    template_type_specifier    go to state 125


state 36

  128 primary_no_new_array: THIS_T .

    $default  reduce using rule 128 (primary_no_new_array)


state 37

  129 primary_no_new_array: SUPER_T .

    $default  reduce using rule 129 (primary_no_new_array)


state 38

  270 delegate_definition: DELEGATE . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  271                    | DELEGATE . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 126


state 39

  204 declaration_statement: FINAL . IDENTIFIER AS type_specifier CR
  205                      | FINAL . IDENTIFIER AS type_specifier ASSIGN_T expression CR

    IDENTIFIER  shift, and go to state 127


state 40

  272 enum_definition: ENUM . IDENTIFIER LC enumerator_list RC
  273                | ENUM . IDENTIFIER LC enumerator_list COMMA RC

    IDENTIFIER  shift, and go to state 128


state 41

  276 const_definition: CONST . IDENTIFIER ASSIGN_T expression CR
  277                 | CONST . type_specifier IDENTIFIER CR

    IDENTIFIER        shift, and go to state 129
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 136


state 42

   53 function_definition: FUNCTION . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   54                    | FUNCTION . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 137


state 43

  202 declaration_statement: DIM . volatile IDENTIFIER AS shared type_specifier CR
  203                      | DIM . volatile IDENTIFIER AS shared type_specifier ASSIGN_T expression CR

    VOLATILE  shift, and go to state 138

    $default  reduce using rule 280 (volatile)

    volatile  go to state 139


state 44

  164 statement: CR .

    $default  reduce using rule 164 (statement)


state 45

   49 function_declaration: DECLARE . FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   50                     | DECLARE . FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR
   51                     | DECLARE . BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   52                     | DECLARE . BSUB IDENTIFIER LP apostrophe RP throws_clause CR

    FUNCTION  shift, and go to state 140
    BSUB      shift, and go to state 141


state 46

   55 function_definition: BSUB . IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock
   56                    | BSUB . IDENTIFIER LP apostrophe RP throws_clause myblock

    IDENTIFIER  shift, and go to state 142


state 47

  279 shared: SHARED .

    $default  reduce using rule 279 (shared)


state 48

    2 translation_unit: translation_unit definition_or_statement .

    $default  reduce using rule 2 (translation_unit)


state 49

   57 function_definition: function_declaration .

    $default  reduce using rule 57 (function_definition)


state 50

   16 definition_or_statement: function_definition .

    $default  reduce using rule 16 (definition_or_statement)


state 51

   65 expression: expression . COMMA assignment_expression
  151 statement: expression . CR

    COMMA  shift, and go to state 143
    CR     shift, and go to state 144


state 52

   64 expression: assignment_expression .

    $default  reduce using rule 64 (expression)


state 53

   66 assignment_expression: logical_or_expression .
   77 logical_or_expression: logical_or_expression . LOGICAL_OR logical_and_expression

    LOGICAL_OR  shift, and go to state 145

    $default  reduce using rule 66 (assignment_expression)


state 54

   76 logical_or_expression: logical_and_expression .
   79 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 146

    $default  reduce using rule 76 (logical_or_expression)


state 55

   78 logical_and_expression: equality_expression .
   81 equality_expression: equality_expression . EQ relational_expression
   82                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 147
    NE  shift, and go to state 148

    $default  reduce using rule 78 (logical_and_expression)


state 56

   80 equality_expression: relational_expression .
   84 relational_expression: relational_expression . GT additive_expression
   85                      | relational_expression . GE additive_expression
   86                      | relational_expression . LT additive_expression
   87                      | relational_expression . LE additive_expression

    GT  shift, and go to state 149
    GE  shift, and go to state 150
    LT  shift, and go to state 151
    LE  shift, and go to state 152

    $default  reduce using rule 80 (equality_expression)


state 57

   83 relational_expression: additive_expression .
   89 additive_expression: additive_expression . ADD multiplicative_expression
   90                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 153
    SUB  shift, and go to state 154

    $default  reduce using rule 83 (relational_expression)


state 58

   88 additive_expression: multiplicative_expression .
   92 multiplicative_expression: multiplicative_expression . MUL unary_expression
   93                          | multiplicative_expression . DIV unary_expression
   94                          | multiplicative_expression . MOD unary_expression
   95                          | multiplicative_expression . BIT_AND unary_expression
   96                          | multiplicative_expression . BIT_OR unary_expression
   97                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 155
    DIV      shift, and go to state 156
    MOD      shift, and go to state 157
    BIT_AND  shift, and go to state 158
    BIT_OR   shift, and go to state 159
    BIT_XOR  shift, and go to state 160

    $default  reduce using rule 88 (additive_expression)


state 59

   91 multiplicative_expression: unary_expression .

    $default  reduce using rule 91 (multiplicative_expression)


state 60

   98 unary_expression: postfix_expression .

    $default  reduce using rule 98 (unary_expression)


state 61

   67 assignment_expression: primary_expression . assignment_operator assignment_expression
  102 postfix_expression: primary_expression .
  103                   | primary_expression . INCREMENT
  104                   | primary_expression . DECREMENT
  105                   | primary_expression . INSTANCEOF type_specifier
  114 primary_no_new_array: primary_expression . DOT IDENTIFIER
  115                     | primary_expression . LP argument_list RP
  116                     | primary_expression . LP RP
  118                     | primary_expression . DOWN_CAST_BEGIN type_specifier DOWN_CAST_END

    LP                shift, and go to state 161
    ASSIGN_T          shift, and go to state 162
    DOT               shift, and go to state 163
    ADD_ASSIGN_T      shift, and go to state 164
    SUB_ASSIGN_T      shift, and go to state 165
    MUL_ASSIGN_T      shift, and go to state 166
    DIV_ASSIGN_T      shift, and go to state 167
    MOD_ASSIGN_T      shift, and go to state 168
    INCREMENT         shift, and go to state 169
    DECREMENT         shift, and go to state 170
    INSTANCEOF        shift, and go to state 171
    DOWN_CAST_BEGIN   shift, and go to state 172
    ATM_ADD_ASSIGN_T  shift, and go to state 173
    ATM_SUB_ASSIGN_T  shift, and go to state 174

    $default  reduce using rule 102 (postfix_expression)

    assignment_operator  go to state 175


state 62

  106 primary_expression: primary_no_new_array .
  110 primary_no_new_array: primary_no_new_array . LB expression RB
  113                     | primary_no_new_array . LB expression COLON expression RB

    LB  shift, and go to state 176

    $default  reduce using rule 106 (primary_expression)


state 63

  127 primary_no_new_array: array_literal .

    $default  reduce using rule 127 (primary_no_new_array)


state 64

  107 primary_expression: array_creation .

    $default  reduce using rule 107 (primary_expression)


state 65

   18 definition_or_statement: statement .

    $default  reduce using rule 18 (definition_or_statement)


state 66

  152 statement: if_statement .

    $default  reduce using rule 152 (statement)


state 67

  182 while_statement: label_opt . WHILE expression myblock
  183 for_statement: label_opt . FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock
  184 do_while_statement: label_opt . DO_T block WHILE LP expression RP CR
  185 foreach_statement: label_opt . FOREACH LP IDENTIFIER COLON expression RP block

    WHILE    shift, and go to state 177
    DO_T     shift, and go to state 178
    FOR      shift, and go to state 179
    FOREACH  shift, and go to state 180


state 68

  153 statement: switch_statement .

    $default  reduce using rule 153 (statement)


state 69

  154 statement: while_statement .

    $default  reduce using rule 154 (statement)


state 70

  155 statement: for_statement .

    $default  reduce using rule 155 (statement)


state 71

  156 statement: do_while_statement .

    $default  reduce using rule 156 (statement)


state 72

  157 statement: foreach_statement .

    $default  reduce using rule 157 (statement)


state 73

  158 statement: return_statement .

    $default  reduce using rule 158 (statement)


state 74

  159 statement: break_statement .

    $default  reduce using rule 159 (statement)


state 75

  160 statement: continue_statement .

    $default  reduce using rule 160 (statement)


state 76

  161 statement: try_statement .

    $default  reduce using rule 161 (statement)


state 77

  162 statement: throw_statement .

    $default  reduce using rule 162 (statement)


state 78

  163 statement: declaration_statement .

    $default  reduce using rule 163 (statement)


state 79

   17 definition_or_statement: class_definition .

    $default  reduce using rule 17 (definition_or_statement)


state 80

   19 definition_or_statement: delegate_definition .

    $default  reduce using rule 19 (definition_or_statement)


state 81

   20 definition_or_statement: enum_definition .

    $default  reduce using rule 20 (definition_or_statement)


state 82

   21 definition_or_statement: const_definition .

    $default  reduce using rule 21 (definition_or_statement)


state 83

  216 class_definition: shared . class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list END
  218                 | shared . class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END
  220                 | shared . class_or_interface IDENTIFIER template_list extends CR $@6 END
  222                 | shared . class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 END

    CLASS_T      shift, and go to state 181
    INTERFACE_T  shift, and go to state 182
    PUBLIC_T     shift, and go to state 183
    PRIVATE_T    shift, and go to state 184
    VIRTUAL_T    shift, and go to state 185
    OVERRIDE_T   shift, and go to state 186
    ABSTRACT_T   shift, and go to state 187

    class_or_member_modifier_list  go to state 188
    class_or_member_modifier       go to state 189
    class_or_interface             go to state 190
    access_modifier                go to state 191


state 84

   45 lib_function: LIB . IDENTIFIER $@1 CR lib_function_declaration_list END

    IDENTIFIER  shift, and go to state 192


state 85

    7 initial_declaration: initial_declaration lib_function .

    $default  reduce using rule 7 (initial_declaration)


state 86

    9 require_list: require_list require_declaration .

    $default  reduce using rule 9 (require_list)


state 87

    4 initial_declaration: require_list rename_list .
   14 rename_list: rename_list . rename_declaration

    RENAME  shift, and go to state 2

    $default  reduce using rule 4 (initial_declaration)

    rename_declaration  go to state 88


state 88

   14 rename_list: rename_list rename_declaration .

    $default  reduce using rule 14 (rename_list)


state 89

   12 package_name: package_name DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 193


state 90

   10 require_declaration: REQUIRE package_name CR .

    $default  reduce using rule 10 (require_declaration)


state 91

   15 rename_declaration: RENAME package_name IDENTIFIER . CR

    CR  shift, and go to state 194


state 92

  111 primary_no_new_array: IDENTIFIER LB . expression RB
  112                     | IDENTIFIER LB . expression COLON expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    expression                 go to state 195
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 93

  173 label_opt: IDENTIFIER COLON .

    $default  reduce using rule 173 (label_opt)


state 94

  108 primary_expression: IDENTIFIER .
  111 primary_no_new_array: IDENTIFIER . LB expression RB
  112                     | IDENTIFIER . LB expression COLON expression RB

    LB  shift, and go to state 92

    $default  reduce using rule 108 (primary_expression)


state 95

   65 expression: expression . COMMA assignment_expression
  165 if_statement: IF expression . THEN myblock
  166             | IF expression . THEN myblock ELSE myblock
  167             | IF expression . THEN myblock elsif_list
  168             | IF expression . THEN myblock elsif_list ELSE myblock

    COMMA  shift, and go to state 143
    THEN   shift, and go to state 196


state 96

   65 expression: expression . COMMA assignment_expression
  174 switch_statement: SWITCH expression . CR case_list default_opt

    COMMA  shift, and go to state 143
    CR     shift, and go to state 197


state 97

   65 expression: expression . COMMA assignment_expression
  187 expression_opt: expression .

    COMMA  shift, and go to state 143

    $default  reduce using rule 187 (expression_opt)


state 98

  188 return_statement: RETURN_T expression_opt . CR

    CR  shift, and go to state 198


state 99

  190 identifier_opt: IDENTIFIER .

    $default  reduce using rule 190 (identifier_opt)


state 100

  191 break_statement: BREAK identifier_opt . CR

    CR  shift, and go to state 199


state 101

  192 continue_statement: CONTINUE identifier_opt . CR

    CR  shift, and go to state 200


state 102

   65 expression: expression . COMMA assignment_expression
  117 primary_no_new_array: LP expression . RP

    RP     shift, and go to state 201
    COMMA  shift, and go to state 143


state 103

  149 expression_list: assignment_expression .

    $default  reduce using rule 149 (expression_list)


state 104

  135 array_literal: LC expression_list . RC
  136              | LC expression_list . COMMA RC
  150 expression_list: expression_list . COMMA assignment_expression

    RC     shift, and go to state 202
    COMMA  shift, and go to state 203


state 105

   99 unary_expression: SUB unary_expression .

    $default  reduce using rule 99 (unary_expression)


state 106

  102 postfix_expression: primary_expression .
  103                   | primary_expression . INCREMENT
  104                   | primary_expression . DECREMENT
  105                   | primary_expression . INSTANCEOF type_specifier
  114 primary_no_new_array: primary_expression . DOT IDENTIFIER
  115                     | primary_expression . LP argument_list RP
  116                     | primary_expression . LP RP
  118                     | primary_expression . DOWN_CAST_BEGIN type_specifier DOWN_CAST_END

    LP               shift, and go to state 161
    DOT              shift, and go to state 163
    INCREMENT        shift, and go to state 169
    DECREMENT        shift, and go to state 170
    INSTANCEOF       shift, and go to state 171
    DOWN_CAST_BEGIN  shift, and go to state 172

    $default  reduce using rule 102 (postfix_expression)


state 107

  101 unary_expression: BIT_NOT unary_expression .

    $default  reduce using rule 101 (unary_expression)


state 108

  100 unary_expression: EXCLAMATION unary_expression .

    $default  reduce using rule 100 (unary_expression)


state 109

  288 myblock: CR . unsafe @8 statement_list END
  289        | CR . END

    END     shift, and go to state 204
    UNSAFE  shift, and go to state 205
    SAFE    shift, and go to state 206

    $default  reduce using rule 284 (unsafe)

    unsafe  go to state 207


state 110

  193 try_statement: TRY myblock . catch_list FINALLY myblock
  194              | TRY myblock . FINALLY block
  195              | TRY myblock . catch_list

    CATCH    shift, and go to state 208
    FINALLY  shift, and go to state 209

    catch_list    go to state 210
    catch_clause  go to state 211


state 111

  201 throw_statement: THROW CR .

    $default  reduce using rule 201 (throw_statement)


state 112

   65 expression: expression . COMMA assignment_expression
  200 throw_statement: THROW expression . CR

    COMMA  shift, and go to state 143
    CR     shift, and go to state 212


state 113

   31 identifier_type_specifier: IDENTIFIER .
   37 template_type_specifier: IDENTIFIER . LT type_list GT
  131 primary_no_new_array: NEW IDENTIFIER . LP RP
  132                     | NEW IDENTIFIER . LP argument_list RP
  133                     | NEW IDENTIFIER . DOT IDENTIFIER LP RP
  134                     | NEW IDENTIFIER . DOT IDENTIFIER LP argument_list RP

    LP   shift, and go to state 213
    LT   shift, and go to state 214
    DOT  shift, and go to state 215

    $default  reduce using rule 31 (identifier_type_specifier)


state 114

   22 basic_type_specifier: VOID_T .

    $default  reduce using rule 22 (basic_type_specifier)


state 115

   23 basic_type_specifier: BOOLEAN_T .

    $default  reduce using rule 23 (basic_type_specifier)


state 116

   24 basic_type_specifier: INT_T .

    $default  reduce using rule 24 (basic_type_specifier)


state 117

   25 basic_type_specifier: DOUBLE_T .

    $default  reduce using rule 25 (basic_type_specifier)


state 118

   26 basic_type_specifier: STRING_T .

    $default  reduce using rule 26 (basic_type_specifier)


state 119

   27 basic_type_specifier: VARIENT_T .

    $default  reduce using rule 27 (basic_type_specifier)


state 120

   28 basic_type_specifier: FLOAT_T .

    $default  reduce using rule 28 (basic_type_specifier)


state 121

   29 basic_type_specifier: NATIVE_POINTER_T .

    $default  reduce using rule 29 (basic_type_specifier)


state 122

   30 basic_type_specifier: DELEGATE .
  130 primary_no_new_array: NEW DELEGATE . LP RP

    LP  shift, and go to state 216

    $default  reduce using rule 30 (basic_type_specifier)


state 123

  137 array_creation: NEW basic_type_specifier . dimension_expression_list global
  138               | NEW basic_type_specifier . dimension_expression_list dimension_list global

    LB  shift, and go to state 217

    dimension_expression_list  go to state 218
    dimension_expression       go to state 219


state 124

  139 array_creation: NEW identifier_type_specifier . dimension_expression_list global
  140               | NEW identifier_type_specifier . dimension_expression_list dimension_list global

    LB  shift, and go to state 217

    dimension_expression_list  go to state 220
    dimension_expression       go to state 219


state 125

  141 array_creation: NEW template_type_specifier . dimension_expression_list global
  142               | NEW template_type_specifier . dimension_expression_list dimension_list global

    LB  shift, and go to state 217

    dimension_expression_list  go to state 221
    dimension_expression       go to state 219


state 126

  270 delegate_definition: DELEGATE IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause CR
  271                    | DELEGATE IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause CR

    LP  shift, and go to state 222


state 127

  204 declaration_statement: FINAL IDENTIFIER . AS type_specifier CR
  205                      | FINAL IDENTIFIER . AS type_specifier ASSIGN_T expression CR

    AS  shift, and go to state 223


state 128

  272 enum_definition: ENUM IDENTIFIER . LC enumerator_list RC
  273                | ENUM IDENTIFIER . LC enumerator_list COMMA RC

    LC  shift, and go to state 224


state 129

   31 identifier_type_specifier: IDENTIFIER .
   33 array_type_specifier_sub: IDENTIFIER . LB RB
   37 template_type_specifier: IDENTIFIER . LT type_list GT
  276 const_definition: CONST IDENTIFIER . ASSIGN_T expression CR

    LB        shift, and go to state 225
    ASSIGN_T  shift, and go to state 226
    LT        shift, and go to state 214

    $default  reduce using rule 31 (identifier_type_specifier)


state 130

   30 basic_type_specifier: DELEGATE .

    $default  reduce using rule 30 (basic_type_specifier)


state 131

   32 array_type_specifier_sub: basic_type_specifier . LB RB
   38 type_specifier: basic_type_specifier .

    LB  shift, and go to state 227

    $default  reduce using rule 38 (type_specifier)


state 132

   40 type_specifier: identifier_type_specifier .

    $default  reduce using rule 40 (type_specifier)


state 133

   36 array_type_specifier: array_type_specifier_sub . global

    GLOBAL  shift, and go to state 228

    $default  reduce using rule 282 (global)

    global  go to state 229


state 134

   34 array_type_specifier_sub: array_type_specifier . LB RB
   39 type_specifier: array_type_specifier .

    LB  shift, and go to state 230

    $default  reduce using rule 39 (type_specifier)


state 135

   35 array_type_specifier_sub: template_type_specifier . LB RB
   41 type_specifier: template_type_specifier .

    LB  shift, and go to state 231

    $default  reduce using rule 41 (type_specifier)


state 136

  277 const_definition: CONST type_specifier . IDENTIFIER CR

    IDENTIFIER  shift, and go to state 232


state 137

   53 function_definition: FUNCTION IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause myblock
   54                    | FUNCTION IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause myblock

    LP  shift, and go to state 233


state 138

  281 volatile: VOLATILE .

    $default  reduce using rule 281 (volatile)


state 139

  202 declaration_statement: DIM volatile . IDENTIFIER AS shared type_specifier CR
  203                      | DIM volatile . IDENTIFIER AS shared type_specifier ASSIGN_T expression CR

    IDENTIFIER  shift, and go to state 234


state 140

   49 function_declaration: DECLARE FUNCTION . IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   50                     | DECLARE FUNCTION . IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 235


state 141

   51 function_declaration: DECLARE BSUB . IDENTIFIER LP parameter_list apostrophe RP throws_clause CR
   52                     | DECLARE BSUB . IDENTIFIER LP apostrophe RP throws_clause CR

    IDENTIFIER  shift, and go to state 236


state 142

   55 function_definition: BSUB IDENTIFIER . LP parameter_list apostrophe RP throws_clause myblock
   56                    | BSUB IDENTIFIER . LP apostrophe RP throws_clause myblock

    LP  shift, and go to state 237


state 143

   65 expression: expression COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    assignment_expression      go to state 238
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 144

  151 statement: expression CR .

    $default  reduce using rule 151 (statement)


state 145

   77 logical_or_expression: logical_or_expression LOGICAL_OR . logical_and_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    logical_and_expression     go to state 239
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 106
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 146

   79 logical_and_expression: logical_and_expression LOGICAL_AND . equality_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    equality_expression        go to state 240
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 106
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 147

   81 equality_expression: equality_expression EQ . relational_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    relational_expression      go to state 241
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 106
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 148

   82 equality_expression: equality_expression NE . relational_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    relational_expression      go to state 242
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 106
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 149

   84 relational_expression: relational_expression GT . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    additive_expression        go to state 243
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 106
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 150

   85 relational_expression: relational_expression GE . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    additive_expression        go to state 244
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 106
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 151

   86 relational_expression: relational_expression LT . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    additive_expression        go to state 245
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 106
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 152

   87 relational_expression: relational_expression LE . additive_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    additive_expression        go to state 246
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 106
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 153

   89 additive_expression: additive_expression ADD . multiplicative_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    multiplicative_expression  go to state 247
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 106
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 154

   90 additive_expression: additive_expression SUB . multiplicative_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    multiplicative_expression  go to state 248
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 106
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 155

   92 multiplicative_expression: multiplicative_expression MUL . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    unary_expression      go to state 249
    postfix_expression    go to state 60
    primary_expression    go to state 106
    primary_no_new_array  go to state 62
    array_literal         go to state 63
    array_creation        go to state 64


state 156

   93 multiplicative_expression: multiplicative_expression DIV . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    unary_expression      go to state 250
    postfix_expression    go to state 60
    primary_expression    go to state 106
    primary_no_new_array  go to state 62
    array_literal         go to state 63
    array_creation        go to state 64


state 157

   94 multiplicative_expression: multiplicative_expression MOD . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    unary_expression      go to state 251
    postfix_expression    go to state 60
    primary_expression    go to state 106
    primary_no_new_array  go to state 62
    array_literal         go to state 63
    array_creation        go to state 64


state 158

   95 multiplicative_expression: multiplicative_expression BIT_AND . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    unary_expression      go to state 252
    postfix_expression    go to state 60
    primary_expression    go to state 106
    primary_no_new_array  go to state 62
    array_literal         go to state 63
    array_creation        go to state 64


state 159

   96 multiplicative_expression: multiplicative_expression BIT_OR . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    unary_expression      go to state 253
    postfix_expression    go to state 60
    primary_expression    go to state 106
    primary_no_new_array  go to state 62
    array_literal         go to state 63
    array_creation        go to state 64


state 160

   97 multiplicative_expression: multiplicative_expression BIT_XOR . unary_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    unary_expression      go to state 254
    postfix_expression    go to state 60
    primary_expression    go to state 106
    primary_no_new_array  go to state 62
    array_literal         go to state 63
    array_creation        go to state 64


state 161

  115 primary_no_new_array: primary_expression LP . argument_list RP
  116                     | primary_expression LP . RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    RP              shift, and go to state 255
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    argument_list              go to state 256
    assignment_expression      go to state 257
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 162

   68 assignment_operator: ASSIGN_T .

    $default  reduce using rule 68 (assignment_operator)


state 163

  114 primary_no_new_array: primary_expression DOT . IDENTIFIER

    IDENTIFIER  shift, and go to state 258


state 164

   69 assignment_operator: ADD_ASSIGN_T .

    $default  reduce using rule 69 (assignment_operator)


state 165

   70 assignment_operator: SUB_ASSIGN_T .

    $default  reduce using rule 70 (assignment_operator)


state 166

   73 assignment_operator: MUL_ASSIGN_T .

    $default  reduce using rule 73 (assignment_operator)


state 167

   74 assignment_operator: DIV_ASSIGN_T .

    $default  reduce using rule 74 (assignment_operator)


state 168

   75 assignment_operator: MOD_ASSIGN_T .

    $default  reduce using rule 75 (assignment_operator)


state 169

  103 postfix_expression: primary_expression INCREMENT .

    $default  reduce using rule 103 (postfix_expression)


state 170

  104 postfix_expression: primary_expression DECREMENT .

    $default  reduce using rule 104 (postfix_expression)


state 171

  105 postfix_expression: primary_expression INSTANCEOF . type_specifier

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 260


state 172

  118 primary_no_new_array: primary_expression DOWN_CAST_BEGIN . type_specifier DOWN_CAST_END

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 261


state 173

   71 assignment_operator: ATM_ADD_ASSIGN_T .

    $default  reduce using rule 71 (assignment_operator)


state 174

   72 assignment_operator: ATM_SUB_ASSIGN_T .

    $default  reduce using rule 72 (assignment_operator)


state 175

   67 assignment_expression: primary_expression assignment_operator . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    assignment_expression      go to state 262
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 176

  110 primary_no_new_array: primary_no_new_array LB . expression RB
  113                     | primary_no_new_array LB . expression COLON expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    expression                 go to state 263
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 177

  182 while_statement: label_opt WHILE . expression myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    expression                 go to state 264
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 178

  184 do_while_statement: label_opt DO_T . block WHILE LP expression RP CR

    LC  shift, and go to state 265

    block  go to state 266


state 179

  183 for_statement: label_opt FOR . expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    $default  reduce using rule 186 (expression_opt)

    expression                 go to state 97
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64
    expression_opt             go to state 267


state 180

  185 foreach_statement: label_opt FOREACH . LP IDENTIFIER COLON expression RP block

    LP  shift, and go to state 268


state 181

  229 class_or_interface: CLASS_T .

    $default  reduce using rule 229 (class_or_interface)


state 182

  230 class_or_interface: INTERFACE_T .

    $default  reduce using rule 230 (class_or_interface)


state 183

  261 access_modifier: PUBLIC_T .

    $default  reduce using rule 261 (access_modifier)


state 184

  262 access_modifier: PRIVATE_T .

    $default  reduce using rule 262 (access_modifier)


state 185

  226 class_or_member_modifier: VIRTUAL_T .

    $default  reduce using rule 226 (class_or_member_modifier)


state 186

  227 class_or_member_modifier: OVERRIDE_T .

    $default  reduce using rule 227 (class_or_member_modifier)


state 187

  228 class_or_member_modifier: ABSTRACT_T .

    $default  reduce using rule 228 (class_or_member_modifier)


state 188

  218 class_definition: shared class_or_member_modifier_list . class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END
  222                 | shared class_or_member_modifier_list . class_or_interface IDENTIFIER template_list extends CR $@7 END
  224 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier

    CLASS_T      shift, and go to state 181
    INTERFACE_T  shift, and go to state 182
    PUBLIC_T     shift, and go to state 183
    PRIVATE_T    shift, and go to state 184
    VIRTUAL_T    shift, and go to state 185
    OVERRIDE_T   shift, and go to state 186
    ABSTRACT_T   shift, and go to state 187

    class_or_member_modifier  go to state 269
    class_or_interface        go to state 270
    access_modifier           go to state 191


state 189

  223 class_or_member_modifier_list: class_or_member_modifier .

    $default  reduce using rule 223 (class_or_member_modifier_list)


state 190

  216 class_definition: shared class_or_interface . IDENTIFIER template_list extends CR $@4 member_declaration_list END
  220                 | shared class_or_interface . IDENTIFIER template_list extends CR $@6 END

    IDENTIFIER  shift, and go to state 271


state 191

  225 class_or_member_modifier: access_modifier .

    $default  reduce using rule 225 (class_or_member_modifier)


state 192

   45 lib_function: LIB IDENTIFIER . $@1 CR lib_function_declaration_list END

    $default  reduce using rule 44 ($@1)

    $@1  go to state 272


state 193

   12 package_name: package_name DOT IDENTIFIER .

    $default  reduce using rule 12 (package_name)


state 194

   15 rename_declaration: RENAME package_name IDENTIFIER CR .

    $default  reduce using rule 15 (rename_declaration)


state 195

   65 expression: expression . COMMA assignment_expression
  111 primary_no_new_array: IDENTIFIER LB expression . RB
  112                     | IDENTIFIER LB expression . COLON expression RB

    RB     shift, and go to state 273
    COLON  shift, and go to state 274
    COMMA  shift, and go to state 143


state 196

  165 if_statement: IF expression THEN . myblock
  166             | IF expression THEN . myblock ELSE myblock
  167             | IF expression THEN . myblock elsif_list
  168             | IF expression THEN . myblock elsif_list ELSE myblock

    CR  shift, and go to state 109

    myblock  go to state 275


state 197

  174 switch_statement: SWITCH expression CR . case_list default_opt

    CASE  shift, and go to state 276

    case_list  go to state 277
    one_case   go to state 278


state 198

  188 return_statement: RETURN_T expression_opt CR .

    $default  reduce using rule 188 (return_statement)


state 199

  191 break_statement: BREAK identifier_opt CR .

    $default  reduce using rule 191 (break_statement)


state 200

  192 continue_statement: CONTINUE identifier_opt CR .

    $default  reduce using rule 192 (continue_statement)


state 201

  117 primary_no_new_array: LP expression RP .

    $default  reduce using rule 117 (primary_no_new_array)


state 202

  135 array_literal: LC expression_list RC .

    $default  reduce using rule 135 (array_literal)


state 203

  136 array_literal: LC expression_list COMMA . RC
  150 expression_list: expression_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    RC              shift, and go to state 279
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    assignment_expression      go to state 280
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 204

  289 myblock: CR END .

    $default  reduce using rule 289 (myblock)


state 205

  285 unsafe: UNSAFE . CR

    CR  shift, and go to state 281


state 206

  286 unsafe: SAFE . CR

    CR  shift, and go to state 282


state 207

  288 myblock: CR unsafe . @8 statement_list END

    $default  reduce using rule 287 (@8)

    @8  go to state 283


state 208

  199 catch_clause: CATCH . @2 type_specifier IDENTIFIER myblock

    $default  reduce using rule 198 (@2)

    @2  go to state 284


state 209

  194 try_statement: TRY myblock FINALLY . block

    LC  shift, and go to state 265

    block  go to state 285


state 210

  193 try_statement: TRY myblock catch_list . FINALLY myblock
  195              | TRY myblock catch_list .
  197 catch_list: catch_list . catch_clause

    CATCH    shift, and go to state 208
    FINALLY  shift, and go to state 286

    $default  reduce using rule 195 (try_statement)

    catch_clause  go to state 287


state 211

  196 catch_list: catch_clause .

    $default  reduce using rule 196 (catch_list)


state 212

  200 throw_statement: THROW expression CR .

    $default  reduce using rule 200 (throw_statement)


state 213

  131 primary_no_new_array: NEW IDENTIFIER LP . RP
  132                     | NEW IDENTIFIER LP . argument_list RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    RP              shift, and go to state 288
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    argument_list              go to state 289
    assignment_expression      go to state 257
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 214

   37 template_type_specifier: IDENTIFIER LT . type_list GT

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 290
    type_list                  go to state 291


state 215

  133 primary_no_new_array: NEW IDENTIFIER DOT . IDENTIFIER LP RP
  134                     | NEW IDENTIFIER DOT . IDENTIFIER LP argument_list RP

    IDENTIFIER  shift, and go to state 292


state 216

  130 primary_no_new_array: NEW DELEGATE LP . RP

    RP  shift, and go to state 293


state 217

  145 dimension_expression: LB . expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    expression                 go to state 294
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 218

  137 array_creation: NEW basic_type_specifier dimension_expression_list . global
  138               | NEW basic_type_specifier dimension_expression_list . dimension_list global
  144 dimension_expression_list: dimension_expression_list . dimension_expression

    LB      shift, and go to state 295
    GLOBAL  shift, and go to state 228

    $default  reduce using rule 282 (global)

    dimension_expression  go to state 296
    dimension_list        go to state 297
    global                go to state 298


state 219

  143 dimension_expression_list: dimension_expression .

    $default  reduce using rule 143 (dimension_expression_list)


state 220

  139 array_creation: NEW identifier_type_specifier dimension_expression_list . global
  140               | NEW identifier_type_specifier dimension_expression_list . dimension_list global
  144 dimension_expression_list: dimension_expression_list . dimension_expression

    LB      shift, and go to state 295
    GLOBAL  shift, and go to state 228

    $default  reduce using rule 282 (global)

    dimension_expression  go to state 296
    dimension_list        go to state 299
    global                go to state 300


state 221

  141 array_creation: NEW template_type_specifier dimension_expression_list . global
  142               | NEW template_type_specifier dimension_expression_list . dimension_list global
  144 dimension_expression_list: dimension_expression_list . dimension_expression

    LB      shift, and go to state 295
    GLOBAL  shift, and go to state 228

    $default  reduce using rule 282 (global)

    dimension_expression  go to state 296
    dimension_list        go to state 301
    global                go to state 302


state 222

  270 delegate_definition: DELEGATE IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause CR
  271                    | DELEGATE IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 303
    COMMA       shift, and go to state 304

    $default  reduce using rule 251 (apostrophe)

    parameter_list  go to state 305
    apostrophe      go to state 306


state 223

  204 declaration_statement: FINAL IDENTIFIER AS . type_specifier CR
  205                      | FINAL IDENTIFIER AS . type_specifier ASSIGN_T expression CR

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 307


state 224

  272 enum_definition: ENUM IDENTIFIER LC . enumerator_list RC
  273                | ENUM IDENTIFIER LC . enumerator_list COMMA RC

    IDENTIFIER  shift, and go to state 308

    enumerator_list  go to state 309


state 225

   33 array_type_specifier_sub: IDENTIFIER LB . RB

    RB  shift, and go to state 310


state 226

  276 const_definition: CONST IDENTIFIER ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    expression                 go to state 311
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 227

   32 array_type_specifier_sub: basic_type_specifier LB . RB

    RB  shift, and go to state 312


state 228

  283 global: GLOBAL .

    $default  reduce using rule 283 (global)


state 229

   36 array_type_specifier: array_type_specifier_sub global .

    $default  reduce using rule 36 (array_type_specifier)


state 230

   34 array_type_specifier_sub: array_type_specifier LB . RB

    RB  shift, and go to state 313


state 231

   35 array_type_specifier_sub: template_type_specifier LB . RB

    RB  shift, and go to state 314


state 232

  277 const_definition: CONST type_specifier IDENTIFIER . CR

    CR  shift, and go to state 315


state 233

   53 function_definition: FUNCTION IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause myblock
   54                    | FUNCTION IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 303
    COMMA       shift, and go to state 304

    $default  reduce using rule 251 (apostrophe)

    parameter_list  go to state 316
    apostrophe      go to state 317


state 234

  202 declaration_statement: DIM volatile IDENTIFIER . AS shared type_specifier CR
  203                      | DIM volatile IDENTIFIER . AS shared type_specifier ASSIGN_T expression CR

    AS  shift, and go to state 318


state 235

   49 function_declaration: DECLARE FUNCTION IDENTIFIER . LP parameter_list apostrophe RP AS type_specifier throws_clause CR
   50                     | DECLARE FUNCTION IDENTIFIER . LP apostrophe RP AS type_specifier throws_clause CR

    LP  shift, and go to state 319


state 236

   51 function_declaration: DECLARE BSUB IDENTIFIER . LP parameter_list apostrophe RP throws_clause CR
   52                     | DECLARE BSUB IDENTIFIER . LP apostrophe RP throws_clause CR

    LP  shift, and go to state 320


state 237

   55 function_definition: BSUB IDENTIFIER LP . parameter_list apostrophe RP throws_clause myblock
   56                    | BSUB IDENTIFIER LP . apostrophe RP throws_clause myblock

    IDENTIFIER  shift, and go to state 303
    COMMA       shift, and go to state 304

    $default  reduce using rule 251 (apostrophe)

    parameter_list  go to state 321
    apostrophe      go to state 322


state 238

   65 expression: expression COMMA assignment_expression .

    $default  reduce using rule 65 (expression)


state 239

   77 logical_or_expression: logical_or_expression LOGICAL_OR logical_and_expression .
   79 logical_and_expression: logical_and_expression . LOGICAL_AND equality_expression

    LOGICAL_AND  shift, and go to state 146

    $default  reduce using rule 77 (logical_or_expression)


state 240

   79 logical_and_expression: logical_and_expression LOGICAL_AND equality_expression .
   81 equality_expression: equality_expression . EQ relational_expression
   82                    | equality_expression . NE relational_expression

    EQ  shift, and go to state 147
    NE  shift, and go to state 148

    $default  reduce using rule 79 (logical_and_expression)


state 241

   81 equality_expression: equality_expression EQ relational_expression .
   84 relational_expression: relational_expression . GT additive_expression
   85                      | relational_expression . GE additive_expression
   86                      | relational_expression . LT additive_expression
   87                      | relational_expression . LE additive_expression

    GT  shift, and go to state 149
    GE  shift, and go to state 150
    LT  shift, and go to state 151
    LE  shift, and go to state 152

    $default  reduce using rule 81 (equality_expression)


state 242

   82 equality_expression: equality_expression NE relational_expression .
   84 relational_expression: relational_expression . GT additive_expression
   85                      | relational_expression . GE additive_expression
   86                      | relational_expression . LT additive_expression
   87                      | relational_expression . LE additive_expression

    GT  shift, and go to state 149
    GE  shift, and go to state 150
    LT  shift, and go to state 151
    LE  shift, and go to state 152

    $default  reduce using rule 82 (equality_expression)


state 243

   84 relational_expression: relational_expression GT additive_expression .
   89 additive_expression: additive_expression . ADD multiplicative_expression
   90                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 153
    SUB  shift, and go to state 154

    $default  reduce using rule 84 (relational_expression)


state 244

   85 relational_expression: relational_expression GE additive_expression .
   89 additive_expression: additive_expression . ADD multiplicative_expression
   90                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 153
    SUB  shift, and go to state 154

    $default  reduce using rule 85 (relational_expression)


state 245

   86 relational_expression: relational_expression LT additive_expression .
   89 additive_expression: additive_expression . ADD multiplicative_expression
   90                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 153
    SUB  shift, and go to state 154

    $default  reduce using rule 86 (relational_expression)


state 246

   87 relational_expression: relational_expression LE additive_expression .
   89 additive_expression: additive_expression . ADD multiplicative_expression
   90                    | additive_expression . SUB multiplicative_expression

    ADD  shift, and go to state 153
    SUB  shift, and go to state 154

    $default  reduce using rule 87 (relational_expression)


state 247

   89 additive_expression: additive_expression ADD multiplicative_expression .
   92 multiplicative_expression: multiplicative_expression . MUL unary_expression
   93                          | multiplicative_expression . DIV unary_expression
   94                          | multiplicative_expression . MOD unary_expression
   95                          | multiplicative_expression . BIT_AND unary_expression
   96                          | multiplicative_expression . BIT_OR unary_expression
   97                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 155
    DIV      shift, and go to state 156
    MOD      shift, and go to state 157
    BIT_AND  shift, and go to state 158
    BIT_OR   shift, and go to state 159
    BIT_XOR  shift, and go to state 160

    $default  reduce using rule 89 (additive_expression)


state 248

   90 additive_expression: additive_expression SUB multiplicative_expression .
   92 multiplicative_expression: multiplicative_expression . MUL unary_expression
   93                          | multiplicative_expression . DIV unary_expression
   94                          | multiplicative_expression . MOD unary_expression
   95                          | multiplicative_expression . BIT_AND unary_expression
   96                          | multiplicative_expression . BIT_OR unary_expression
   97                          | multiplicative_expression . BIT_XOR unary_expression

    MUL      shift, and go to state 155
    DIV      shift, and go to state 156
    MOD      shift, and go to state 157
    BIT_AND  shift, and go to state 158
    BIT_OR   shift, and go to state 159
    BIT_XOR  shift, and go to state 160

    $default  reduce using rule 90 (additive_expression)


state 249

   92 multiplicative_expression: multiplicative_expression MUL unary_expression .

    $default  reduce using rule 92 (multiplicative_expression)


state 250

   93 multiplicative_expression: multiplicative_expression DIV unary_expression .

    $default  reduce using rule 93 (multiplicative_expression)


state 251

   94 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 94 (multiplicative_expression)


state 252

   95 multiplicative_expression: multiplicative_expression BIT_AND unary_expression .

    $default  reduce using rule 95 (multiplicative_expression)


state 253

   96 multiplicative_expression: multiplicative_expression BIT_OR unary_expression .

    $default  reduce using rule 96 (multiplicative_expression)


state 254

   97 multiplicative_expression: multiplicative_expression BIT_XOR unary_expression .

    $default  reduce using rule 97 (multiplicative_expression)


state 255

  116 primary_no_new_array: primary_expression LP RP .

    $default  reduce using rule 116 (primary_no_new_array)


state 256

   61 argument_list: argument_list . COMMA assignment_expression
  115 primary_no_new_array: primary_expression LP argument_list . RP

    RP     shift, and go to state 323
    COMMA  shift, and go to state 324


state 257

   60 argument_list: assignment_expression .

    $default  reduce using rule 60 (argument_list)


state 258

  114 primary_no_new_array: primary_expression DOT IDENTIFIER .

    $default  reduce using rule 114 (primary_no_new_array)


state 259

   31 identifier_type_specifier: IDENTIFIER .
   33 array_type_specifier_sub: IDENTIFIER . LB RB
   37 template_type_specifier: IDENTIFIER . LT type_list GT

    LB  shift, and go to state 225
    LT  shift, and go to state 214

    LT        [reduce using rule 31 (identifier_type_specifier)]
    $default  reduce using rule 31 (identifier_type_specifier)


state 260

  105 postfix_expression: primary_expression INSTANCEOF type_specifier .

    $default  reduce using rule 105 (postfix_expression)


state 261

  118 primary_no_new_array: primary_expression DOWN_CAST_BEGIN type_specifier . DOWN_CAST_END

    DOWN_CAST_END  shift, and go to state 325


state 262

   67 assignment_expression: primary_expression assignment_operator assignment_expression .

    $default  reduce using rule 67 (assignment_expression)


state 263

   65 expression: expression . COMMA assignment_expression
  110 primary_no_new_array: primary_no_new_array LB expression . RB
  113                     | primary_no_new_array LB expression . COLON expression RB

    RB     shift, and go to state 326
    COLON  shift, and go to state 327
    COMMA  shift, and go to state 143


state 264

   65 expression: expression . COMMA assignment_expression
  182 while_statement: label_opt WHILE expression . myblock

    COMMA  shift, and go to state 143
    CR     shift, and go to state 109

    myblock  go to state 328


state 265

  207 block: LC . @3 statement_list RC
  208      | LC . RC

    RC  shift, and go to state 329

    $default  reduce using rule 206 (@3)

    @3  go to state 330


state 266

  184 do_while_statement: label_opt DO_T block . WHILE LP expression RP CR

    WHILE  shift, and go to state 331


state 267

  183 for_statement: label_opt FOR expression_opt . SEMICOLON expression_opt SEMICOLON expression_opt myblock

    SEMICOLON  shift, and go to state 332


state 268

  185 foreach_statement: label_opt FOREACH LP . IDENTIFIER COLON expression RP block

    IDENTIFIER  shift, and go to state 333


state 269

  224 class_or_member_modifier_list: class_or_member_modifier_list class_or_member_modifier .

    $default  reduce using rule 224 (class_or_member_modifier_list)


state 270

  218 class_definition: shared class_or_member_modifier_list class_or_interface . IDENTIFIER template_list extends CR $@5 member_declaration_list END
  222                 | shared class_or_member_modifier_list class_or_interface . IDENTIFIER template_list extends CR $@7 END

    IDENTIFIER  shift, and go to state 334


state 271

  216 class_definition: shared class_or_interface IDENTIFIER . template_list extends CR $@4 member_declaration_list END
  220                 | shared class_or_interface IDENTIFIER . template_list extends CR $@6 END

    LT  shift, and go to state 335

    $default  reduce using rule 214 (template_list)

    template_list  go to state 336


state 272

   45 lib_function: LIB IDENTIFIER $@1 . CR lib_function_declaration_list END

    CR  shift, and go to state 337


state 273

  111 primary_no_new_array: IDENTIFIER LB expression RB .

    $default  reduce using rule 111 (primary_no_new_array)


state 274

  112 primary_no_new_array: IDENTIFIER LB expression COLON . expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    expression                 go to state 338
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 275

  165 if_statement: IF expression THEN myblock .
  166             | IF expression THEN myblock . ELSE myblock
  167             | IF expression THEN myblock . elsif_list
  168             | IF expression THEN myblock . elsif_list ELSE myblock

    ELSE   shift, and go to state 339
    ELSIF  shift, and go to state 340

    $default  reduce using rule 165 (if_statement)

    elsif_list  go to state 341
    elsif       go to state 342


state 276

  177 one_case: CASE . case_expression_list myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    $default  reduce using rule 148 (expression_list)

    assignment_expression      go to state 343
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64
    expression_list            go to state 344
    case_expression_list       go to state 345


state 277

  174 switch_statement: SWITCH expression CR case_list . default_opt
  176 case_list: case_list . one_case

    CASE       shift, and go to state 276
    DEFAULT_T  shift, and go to state 346

    $default  reduce using rule 178 (default_opt)

    one_case     go to state 347
    default_opt  go to state 348


state 278

  175 case_list: one_case .

    $default  reduce using rule 175 (case_list)


state 279

  136 array_literal: LC expression_list COMMA RC .

    $default  reduce using rule 136 (array_literal)


state 280

  150 expression_list: expression_list COMMA assignment_expression .

    $default  reduce using rule 150 (expression_list)


state 281

  285 unsafe: UNSAFE CR .

    $default  reduce using rule 285 (unsafe)


state 282

  286 unsafe: SAFE CR .

    $default  reduce using rule 286 (unsafe)


state 283

  288 myblock: CR unsafe @8 . statement_list END

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 18
    AUTOVAR         shift, and go to state 19
    IF              shift, and go to state 20
    SWITCH          shift, and go to state 21
    RETURN_T        shift, and go to state 22
    BREAK           shift, and go to state 23
    CONTINUE        shift, and go to state 24
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    TRY             shift, and go to state 33
    THROW           shift, and go to state 34
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37
    FINAL           shift, and go to state 39
    DIM             shift, and go to state 43
    CR              shift, and go to state 44

    $default  reduce using rule 172 (label_opt)

    statement_list             go to state 349
    expression                 go to state 51
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64
    statement                  go to state 350
    if_statement               go to state 66
    label_opt                  go to state 67
    switch_statement           go to state 68
    while_statement            go to state 69
    for_statement              go to state 70
    do_while_statement         go to state 71
    foreach_statement          go to state 72
    return_statement           go to state 73
    break_statement            go to state 74
    continue_statement         go to state 75
    try_statement              go to state 76
    throw_statement            go to state 77
    declaration_statement      go to state 78


state 284

  199 catch_clause: CATCH @2 . type_specifier IDENTIFIER myblock

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 351


state 285

  194 try_statement: TRY myblock FINALLY block .

    $default  reduce using rule 194 (try_statement)


state 286

  193 try_statement: TRY myblock catch_list FINALLY . myblock

    CR  shift, and go to state 109

    myblock  go to state 352


state 287

  197 catch_list: catch_list catch_clause .

    $default  reduce using rule 197 (catch_list)


state 288

  131 primary_no_new_array: NEW IDENTIFIER LP RP .

    $default  reduce using rule 131 (primary_no_new_array)


state 289

   61 argument_list: argument_list . COMMA assignment_expression
  132 primary_no_new_array: NEW IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 353
    COMMA  shift, and go to state 324


state 290

   42 type_list: type_specifier .

    $default  reduce using rule 42 (type_list)


state 291

   37 template_type_specifier: IDENTIFIER LT type_list . GT
   43 type_list: type_list . COMMA type_specifier

    COMMA  shift, and go to state 354
    GT     shift, and go to state 355


state 292

  133 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER . LP RP
  134                     | NEW IDENTIFIER DOT IDENTIFIER . LP argument_list RP

    LP  shift, and go to state 356


state 293

  130 primary_no_new_array: NEW DELEGATE LP RP .

    $default  reduce using rule 130 (primary_no_new_array)


state 294

   65 expression: expression . COMMA assignment_expression
  145 dimension_expression: LB expression . RB

    RB     shift, and go to state 357
    COMMA  shift, and go to state 143


state 295

  145 dimension_expression: LB . expression RB
  146 dimension_list: LB . RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    RB              shift, and go to state 358
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    expression                 go to state 294
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 296

  144 dimension_expression_list: dimension_expression_list dimension_expression .

    $default  reduce using rule 144 (dimension_expression_list)


state 297

  138 array_creation: NEW basic_type_specifier dimension_expression_list dimension_list . global
  147 dimension_list: dimension_list . LB RB

    LB      shift, and go to state 359
    GLOBAL  shift, and go to state 228

    $default  reduce using rule 282 (global)

    global  go to state 360


state 298

  137 array_creation: NEW basic_type_specifier dimension_expression_list global .

    $default  reduce using rule 137 (array_creation)


state 299

  140 array_creation: NEW identifier_type_specifier dimension_expression_list dimension_list . global
  147 dimension_list: dimension_list . LB RB

    LB      shift, and go to state 359
    GLOBAL  shift, and go to state 228

    $default  reduce using rule 282 (global)

    global  go to state 361


state 300

  139 array_creation: NEW identifier_type_specifier dimension_expression_list global .

    $default  reduce using rule 139 (array_creation)


state 301

  142 array_creation: NEW template_type_specifier dimension_expression_list dimension_list . global
  147 dimension_list: dimension_list . LB RB

    LB      shift, and go to state 359
    GLOBAL  shift, and go to state 228

    $default  reduce using rule 282 (global)

    global  go to state 362


state 302

  141 array_creation: NEW template_type_specifier dimension_expression_list global .

    $default  reduce using rule 141 (array_creation)


state 303

   58 parameter_list: IDENTIFIER . AS type_specifier

    AS  shift, and go to state 363


state 304

  252 apostrophe: COMMA . APOSTROPHE

    APOSTROPHE  shift, and go to state 364


state 305

   59 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  270 delegate_definition: DELEGATE IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause CR

    COMMA  shift, and go to state 365

    $default  reduce using rule 251 (apostrophe)

    apostrophe  go to state 366


state 306

  271 delegate_definition: DELEGATE IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 367


state 307

  204 declaration_statement: FINAL IDENTIFIER AS type_specifier . CR
  205                      | FINAL IDENTIFIER AS type_specifier . ASSIGN_T expression CR

    ASSIGN_T  shift, and go to state 368
    CR        shift, and go to state 369


state 308

  274 enumerator_list: IDENTIFIER .

    $default  reduce using rule 274 (enumerator_list)


state 309

  272 enum_definition: ENUM IDENTIFIER LC enumerator_list . RC
  273                | ENUM IDENTIFIER LC enumerator_list . COMMA RC
  275 enumerator_list: enumerator_list . COMMA IDENTIFIER

    RC     shift, and go to state 370
    COMMA  shift, and go to state 371


state 310

   33 array_type_specifier_sub: IDENTIFIER LB RB .

    $default  reduce using rule 33 (array_type_specifier_sub)


state 311

   65 expression: expression . COMMA assignment_expression
  276 const_definition: CONST IDENTIFIER ASSIGN_T expression . CR

    COMMA  shift, and go to state 143
    CR     shift, and go to state 372


state 312

   32 array_type_specifier_sub: basic_type_specifier LB RB .

    $default  reduce using rule 32 (array_type_specifier_sub)


state 313

   34 array_type_specifier_sub: array_type_specifier LB RB .

    $default  reduce using rule 34 (array_type_specifier_sub)


state 314

   35 array_type_specifier_sub: template_type_specifier LB RB .

    $default  reduce using rule 35 (array_type_specifier_sub)


state 315

  277 const_definition: CONST type_specifier IDENTIFIER CR .

    $default  reduce using rule 277 (const_definition)


state 316

   53 function_definition: FUNCTION IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause myblock
   59 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 365

    $default  reduce using rule 251 (apostrophe)

    apostrophe  go to state 373


state 317

   54 function_definition: FUNCTION IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause myblock

    RP  shift, and go to state 374


state 318

  202 declaration_statement: DIM volatile IDENTIFIER AS . shared type_specifier CR
  203                      | DIM volatile IDENTIFIER AS . shared type_specifier ASSIGN_T expression CR

    SHARED  shift, and go to state 47

    $default  reduce using rule 278 (shared)

    shared  go to state 375


state 319

   49 function_declaration: DECLARE FUNCTION IDENTIFIER LP . parameter_list apostrophe RP AS type_specifier throws_clause CR
   50                     | DECLARE FUNCTION IDENTIFIER LP . apostrophe RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 303
    COMMA       shift, and go to state 304

    $default  reduce using rule 251 (apostrophe)

    parameter_list  go to state 376
    apostrophe      go to state 377


state 320

   51 function_declaration: DECLARE BSUB IDENTIFIER LP . parameter_list apostrophe RP throws_clause CR
   52                     | DECLARE BSUB IDENTIFIER LP . apostrophe RP throws_clause CR

    IDENTIFIER  shift, and go to state 303
    COMMA       shift, and go to state 304

    $default  reduce using rule 251 (apostrophe)

    parameter_list  go to state 378
    apostrophe      go to state 379


state 321

   55 function_definition: BSUB IDENTIFIER LP parameter_list . apostrophe RP throws_clause myblock
   59 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 365

    $default  reduce using rule 251 (apostrophe)

    apostrophe  go to state 380


state 322

   56 function_definition: BSUB IDENTIFIER LP apostrophe . RP throws_clause myblock

    RP  shift, and go to state 381


state 323

  115 primary_no_new_array: primary_expression LP argument_list RP .

    $default  reduce using rule 115 (primary_no_new_array)


state 324

   61 argument_list: argument_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    assignment_expression      go to state 382
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 325

  118 primary_no_new_array: primary_expression DOWN_CAST_BEGIN type_specifier DOWN_CAST_END .

    $default  reduce using rule 118 (primary_no_new_array)


state 326

  110 primary_no_new_array: primary_no_new_array LB expression RB .

    $default  reduce using rule 110 (primary_no_new_array)


state 327

  113 primary_no_new_array: primary_no_new_array LB expression COLON . expression RB

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    expression                 go to state 383
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 328

  182 while_statement: label_opt WHILE expression myblock .

    $default  reduce using rule 182 (while_statement)


state 329

  208 block: LC RC .

    $default  reduce using rule 208 (block)


state 330

  207 block: LC @3 . statement_list RC

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 18
    AUTOVAR         shift, and go to state 19
    IF              shift, and go to state 20
    SWITCH          shift, and go to state 21
    RETURN_T        shift, and go to state 22
    BREAK           shift, and go to state 23
    CONTINUE        shift, and go to state 24
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    TRY             shift, and go to state 33
    THROW           shift, and go to state 34
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37
    FINAL           shift, and go to state 39
    DIM             shift, and go to state 43
    CR              shift, and go to state 44

    $default  reduce using rule 172 (label_opt)

    statement_list             go to state 384
    expression                 go to state 51
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64
    statement                  go to state 350
    if_statement               go to state 66
    label_opt                  go to state 67
    switch_statement           go to state 68
    while_statement            go to state 69
    for_statement              go to state 70
    do_while_statement         go to state 71
    foreach_statement          go to state 72
    return_statement           go to state 73
    break_statement            go to state 74
    continue_statement         go to state 75
    try_statement              go to state 76
    throw_statement            go to state 77
    declaration_statement      go to state 78


state 331

  184 do_while_statement: label_opt DO_T block WHILE . LP expression RP CR

    LP  shift, and go to state 385


state 332

  183 for_statement: label_opt FOR expression_opt SEMICOLON . expression_opt SEMICOLON expression_opt myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    $default  reduce using rule 186 (expression_opt)

    expression                 go to state 97
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64
    expression_opt             go to state 386


state 333

  185 foreach_statement: label_opt FOREACH LP IDENTIFIER . COLON expression RP block

    COLON  shift, and go to state 387


state 334

  218 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER . template_list extends CR $@5 member_declaration_list END
  222                 | shared class_or_member_modifier_list class_or_interface IDENTIFIER . template_list extends CR $@7 END

    LT  shift, and go to state 335

    $default  reduce using rule 214 (template_list)

    template_list  go to state 388


state 335

  213 template_list: LT . template_def_list GT

    IDENTIFIER  shift, and go to state 389

    template_def_list  go to state 390


state 336

  216 class_definition: shared class_or_interface IDENTIFIER template_list . extends CR $@4 member_declaration_list END
  220                 | shared class_or_interface IDENTIFIER template_list . extends CR $@6 END

    COLON  shift, and go to state 391

    $default  reduce using rule 231 (extends)

    extends  go to state 392


state 337

   45 lib_function: LIB IDENTIFIER $@1 CR . lib_function_declaration_list END

    $default  reduce using rule 46 (lib_function_declaration_list)

    lib_function_declaration_list  go to state 393


state 338

   65 expression: expression . COMMA assignment_expression
  112 primary_no_new_array: IDENTIFIER LB expression COLON expression . RB

    RB     shift, and go to state 394
    COMMA  shift, and go to state 143


state 339

  166 if_statement: IF expression THEN myblock ELSE . myblock

    CR  shift, and go to state 109

    myblock  go to state 395


state 340

  171 elsif: ELSIF . expression THEN myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    expression                 go to state 396
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 341

  167 if_statement: IF expression THEN myblock elsif_list .
  168             | IF expression THEN myblock elsif_list . ELSE myblock
  170 elsif_list: elsif_list . elsif

    ELSE   shift, and go to state 397
    ELSIF  shift, and go to state 340

    $default  reduce using rule 167 (if_statement)

    elsif  go to state 398


state 342

  169 elsif_list: elsif .

    $default  reduce using rule 169 (elsif_list)


state 343

  149 expression_list: assignment_expression .
  180 case_expression_list: assignment_expression .

    CR        reduce using rule 180 (case_expression_list)
    $default  reduce using rule 149 (expression_list)


state 344

  150 expression_list: expression_list . COMMA assignment_expression
  181 case_expression_list: expression_list . COMMA assignment_expression

    COMMA  shift, and go to state 399


state 345

  177 one_case: CASE case_expression_list . myblock

    CR  shift, and go to state 109

    myblock  go to state 400


state 346

  179 default_opt: DEFAULT_T . myblock

    CR  shift, and go to state 109

    myblock  go to state 401


state 347

  176 case_list: case_list one_case .

    $default  reduce using rule 176 (case_list)


state 348

  174 switch_statement: SWITCH expression CR case_list default_opt .

    $default  reduce using rule 174 (switch_statement)


state 349

   63 statement_list: statement_list . statement
  288 myblock: CR unsafe @8 statement_list . END

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 18
    AUTOVAR         shift, and go to state 19
    IF              shift, and go to state 20
    SWITCH          shift, and go to state 21
    RETURN_T        shift, and go to state 22
    BREAK           shift, and go to state 23
    CONTINUE        shift, and go to state 24
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    TRY             shift, and go to state 33
    THROW           shift, and go to state 34
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37
    FINAL           shift, and go to state 39
    DIM             shift, and go to state 43
    END             shift, and go to state 402
    CR              shift, and go to state 44

    $default  reduce using rule 172 (label_opt)

    expression                 go to state 51
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64
    statement                  go to state 403
    if_statement               go to state 66
    label_opt                  go to state 67
    switch_statement           go to state 68
    while_statement            go to state 69
    for_statement              go to state 70
    do_while_statement         go to state 71
    foreach_statement          go to state 72
    return_statement           go to state 73
    break_statement            go to state 74
    continue_statement         go to state 75
    try_statement              go to state 76
    throw_statement            go to state 77
    declaration_statement      go to state 78


state 350

   62 statement_list: statement .

    $default  reduce using rule 62 (statement_list)


state 351

  199 catch_clause: CATCH @2 type_specifier . IDENTIFIER myblock

    IDENTIFIER  shift, and go to state 404


state 352

  193 try_statement: TRY myblock catch_list FINALLY myblock .

    $default  reduce using rule 193 (try_statement)


state 353

  132 primary_no_new_array: NEW IDENTIFIER LP argument_list RP .

    $default  reduce using rule 132 (primary_no_new_array)


state 354

   43 type_list: type_list COMMA . type_specifier

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 405


state 355

   37 template_type_specifier: IDENTIFIER LT type_list GT .

    $default  reduce using rule 37 (template_type_specifier)


state 356

  133 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP . RP
  134                     | NEW IDENTIFIER DOT IDENTIFIER LP . argument_list RP

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    RP              shift, and go to state 406
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    argument_list              go to state 407
    assignment_expression      go to state 257
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 357

  145 dimension_expression: LB expression RB .

    $default  reduce using rule 145 (dimension_expression)


state 358

  146 dimension_list: LB RB .

    $default  reduce using rule 146 (dimension_list)


state 359

  147 dimension_list: dimension_list LB . RB

    RB  shift, and go to state 408


state 360

  138 array_creation: NEW basic_type_specifier dimension_expression_list dimension_list global .

    $default  reduce using rule 138 (array_creation)


state 361

  140 array_creation: NEW identifier_type_specifier dimension_expression_list dimension_list global .

    $default  reduce using rule 140 (array_creation)


state 362

  142 array_creation: NEW template_type_specifier dimension_expression_list dimension_list global .

    $default  reduce using rule 142 (array_creation)


state 363

   58 parameter_list: IDENTIFIER AS . type_specifier

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 409


state 364

  252 apostrophe: COMMA APOSTROPHE .

    $default  reduce using rule 252 (apostrophe)


state 365

   59 parameter_list: parameter_list COMMA . IDENTIFIER AS type_specifier
  252 apostrophe: COMMA . APOSTROPHE

    IDENTIFIER  shift, and go to state 410
    APOSTROPHE  shift, and go to state 364


state 366

  270 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 411


state 367

  271 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 412


state 368

  205 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    expression                 go to state 413
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 369

  204 declaration_statement: FINAL IDENTIFIER AS type_specifier CR .

    $default  reduce using rule 204 (declaration_statement)


state 370

  272 enum_definition: ENUM IDENTIFIER LC enumerator_list RC .

    $default  reduce using rule 272 (enum_definition)


state 371

  273 enum_definition: ENUM IDENTIFIER LC enumerator_list COMMA . RC
  275 enumerator_list: enumerator_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 414
    RC          shift, and go to state 415


state 372

  276 const_definition: CONST IDENTIFIER ASSIGN_T expression CR .

    $default  reduce using rule 276 (const_definition)


state 373

   53 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause myblock

    RP  shift, and go to state 416


state 374

   54 function_definition: FUNCTION IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 417


state 375

  202 declaration_statement: DIM volatile IDENTIFIER AS shared . type_specifier CR
  203                      | DIM volatile IDENTIFIER AS shared . type_specifier ASSIGN_T expression CR

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 418


state 376

   49 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list . apostrophe RP AS type_specifier throws_clause CR
   59 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 365

    $default  reduce using rule 251 (apostrophe)

    apostrophe  go to state 419


state 377

   50 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 420


state 378

   51 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list . apostrophe RP throws_clause CR
   59 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier

    COMMA  shift, and go to state 365

    $default  reduce using rule 251 (apostrophe)

    apostrophe  go to state 421


state 379

   52 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe . RP throws_clause CR

    RP  shift, and go to state 422


state 380

   55 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe . RP throws_clause myblock

    RP  shift, and go to state 423


state 381

   56 function_definition: BSUB IDENTIFIER LP apostrophe RP . throws_clause myblock

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 425


state 382

   61 argument_list: argument_list COMMA assignment_expression .

    $default  reduce using rule 61 (argument_list)


state 383

   65 expression: expression . COMMA assignment_expression
  113 primary_no_new_array: primary_no_new_array LB expression COLON expression . RB

    RB     shift, and go to state 426
    COMMA  shift, and go to state 143


state 384

   63 statement_list: statement_list . statement
  207 block: LC @3 statement_list . RC

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 18
    AUTOVAR         shift, and go to state 19
    IF              shift, and go to state 20
    SWITCH          shift, and go to state 21
    RETURN_T        shift, and go to state 22
    BREAK           shift, and go to state 23
    CONTINUE        shift, and go to state 24
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    RC              shift, and go to state 427
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    TRY             shift, and go to state 33
    THROW           shift, and go to state 34
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37
    FINAL           shift, and go to state 39
    DIM             shift, and go to state 43
    CR              shift, and go to state 44

    $default  reduce using rule 172 (label_opt)

    expression                 go to state 51
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64
    statement                  go to state 403
    if_statement               go to state 66
    label_opt                  go to state 67
    switch_statement           go to state 68
    while_statement            go to state 69
    for_statement              go to state 70
    do_while_statement         go to state 71
    foreach_statement          go to state 72
    return_statement           go to state 73
    break_statement            go to state 74
    continue_statement         go to state 75
    try_statement              go to state 76
    throw_statement            go to state 77
    declaration_statement      go to state 78


state 385

  184 do_while_statement: label_opt DO_T block WHILE LP . expression RP CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    expression                 go to state 428
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 386

  183 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt . SEMICOLON expression_opt myblock

    SEMICOLON  shift, and go to state 429


state 387

  185 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON . expression RP block

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    expression                 go to state 430
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 388

  218 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list . extends CR $@5 member_declaration_list END
  222                 | shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list . extends CR $@7 END

    COLON  shift, and go to state 391

    $default  reduce using rule 231 (extends)

    extends  go to state 431


state 389

  209 template_def_list: IDENTIFIER .
  211                  | IDENTIFIER . COLON identifier_type_specifier

    COLON  shift, and go to state 432

    $default  reduce using rule 209 (template_def_list)


state 390

  210 template_def_list: template_def_list . COMMA IDENTIFIER
  212                  | template_def_list . COMMA IDENTIFIER COLON identifier_type_specifier
  213 template_list: LT template_def_list . GT

    COMMA  shift, and go to state 433
    GT     shift, and go to state 434


state 391

  232 extends: COLON . extends_list

    IDENTIFIER  shift, and go to state 435

    extends_list  go to state 436


state 392

  216 class_definition: shared class_or_interface IDENTIFIER template_list extends . CR $@4 member_declaration_list END
  220                 | shared class_or_interface IDENTIFIER template_list extends . CR $@6 END

    CR  shift, and go to state 437


state 393

   45 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list . END
   47 lib_function_declaration_list: lib_function_declaration_list . function_declaration
   48                              | lib_function_declaration_list . class_definition

    END      shift, and go to state 438
    DECLARE  shift, and go to state 45
    SHARED   shift, and go to state 47

    $default  reduce using rule 278 (shared)

    function_declaration  go to state 439
    class_definition      go to state 440
    shared                go to state 83


state 394

  112 primary_no_new_array: IDENTIFIER LB expression COLON expression RB .

    $default  reduce using rule 112 (primary_no_new_array)


state 395

  166 if_statement: IF expression THEN myblock ELSE myblock .

    $default  reduce using rule 166 (if_statement)


state 396

   65 expression: expression . COMMA assignment_expression
  171 elsif: ELSIF expression . THEN myblock

    COMMA  shift, and go to state 143
    THEN   shift, and go to state 441


state 397

  168 if_statement: IF expression THEN myblock elsif_list ELSE . myblock

    CR  shift, and go to state 109

    myblock  go to state 442


state 398

  170 elsif_list: elsif_list elsif .

    $default  reduce using rule 170 (elsif_list)


state 399

  150 expression_list: expression_list COMMA . assignment_expression
  181 case_expression_list: expression_list COMMA . assignment_expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    assignment_expression      go to state 443
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 400

  177 one_case: CASE case_expression_list myblock .

    $default  reduce using rule 177 (one_case)


state 401

  179 default_opt: DEFAULT_T myblock .

    $default  reduce using rule 179 (default_opt)


state 402

  288 myblock: CR unsafe @8 statement_list END .

    $default  reduce using rule 288 (myblock)


state 403

   63 statement_list: statement_list statement .

    $default  reduce using rule 63 (statement_list)


state 404

  199 catch_clause: CATCH @2 type_specifier IDENTIFIER . myblock

    CR  shift, and go to state 109

    myblock  go to state 444


state 405

   43 type_list: type_list COMMA type_specifier .

    $default  reduce using rule 43 (type_list)


state 406

  133 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP RP .

    $default  reduce using rule 133 (primary_no_new_array)


state 407

   61 argument_list: argument_list . COMMA assignment_expression
  134 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP argument_list . RP

    RP     shift, and go to state 445
    COMMA  shift, and go to state 324


state 408

  147 dimension_list: dimension_list LB RB .

    $default  reduce using rule 147 (dimension_list)


state 409

   58 parameter_list: IDENTIFIER AS type_specifier .

    $default  reduce using rule 58 (parameter_list)


state 410

   59 parameter_list: parameter_list COMMA IDENTIFIER . AS type_specifier

    AS  shift, and go to state 446


state 411

  270 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 447


state 412

  271 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 448


state 413

   65 expression: expression . COMMA assignment_expression
  205 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T expression . CR

    COMMA  shift, and go to state 143
    CR     shift, and go to state 449


state 414

  275 enumerator_list: enumerator_list COMMA IDENTIFIER .

    $default  reduce using rule 275 (enumerator_list)


state 415

  273 enum_definition: ENUM IDENTIFIER LC enumerator_list COMMA RC .

    $default  reduce using rule 273 (enum_definition)


state 416

   53 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 450


state 417

   54 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 451


state 418

  202 declaration_statement: DIM volatile IDENTIFIER AS shared type_specifier . CR
  203                      | DIM volatile IDENTIFIER AS shared type_specifier . ASSIGN_T expression CR

    ASSIGN_T  shift, and go to state 452
    CR        shift, and go to state 453


state 419

   49 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe . RP AS type_specifier throws_clause CR

    RP  shift, and go to state 454


state 420

   50 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 455


state 421

   51 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe . RP throws_clause CR

    RP  shift, and go to state 456


state 422

   52 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP . throws_clause CR

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 457


state 423

   55 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP . throws_clause myblock

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 458


state 424

  254 throws_clause: THROWS . exception_list

    IDENTIFIER  shift, and go to state 459

    exception_list  go to state 460


state 425

   56 function_definition: BSUB IDENTIFIER LP apostrophe RP throws_clause . myblock

    CR  shift, and go to state 109

    myblock  go to state 461


state 426

  113 primary_no_new_array: primary_no_new_array LB expression COLON expression RB .

    $default  reduce using rule 113 (primary_no_new_array)


state 427

  207 block: LC @3 statement_list RC .

    $default  reduce using rule 207 (block)


state 428

   65 expression: expression . COMMA assignment_expression
  184 do_while_statement: label_opt DO_T block WHILE LP expression . RP CR

    RP     shift, and go to state 462
    COMMA  shift, and go to state 143


state 429

  183 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON . expression_opt myblock

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    $default  reduce using rule 186 (expression_opt)

    expression                 go to state 97
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64
    expression_opt             go to state 463


state 430

   65 expression: expression . COMMA assignment_expression
  185 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression . RP block

    RP     shift, and go to state 464
    COMMA  shift, and go to state 143


state 431

  218 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends . CR $@5 member_declaration_list END
  222                 | shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends . CR $@7 END

    CR  shift, and go to state 465


state 432

  211 template_def_list: IDENTIFIER COLON . identifier_type_specifier

    IDENTIFIER  shift, and go to state 466

    identifier_type_specifier  go to state 467


state 433

  210 template_def_list: template_def_list COMMA . IDENTIFIER
  212                  | template_def_list COMMA . IDENTIFIER COLON identifier_type_specifier

    IDENTIFIER  shift, and go to state 468


state 434

  213 template_list: LT template_def_list GT .

    $default  reduce using rule 213 (template_list)


state 435

  233 extends_list: IDENTIFIER .

    $default  reduce using rule 233 (extends_list)


state 436

  232 extends: COLON extends_list .
  234 extends_list: extends_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 469

    $default  reduce using rule 232 (extends)


state 437

  216 class_definition: shared class_or_interface IDENTIFIER template_list extends CR . $@4 member_declaration_list END
  220                 | shared class_or_interface IDENTIFIER template_list extends CR . $@6 END

    END       reduce using rule 219 ($@6)
    $default  reduce using rule 215 ($@4)

    $@4  go to state 470
    $@6  go to state 471


state 438

   45 lib_function: LIB IDENTIFIER $@1 CR lib_function_declaration_list END .

    $default  reduce using rule 45 (lib_function)


state 439

   47 lib_function_declaration_list: lib_function_declaration_list function_declaration .

    $default  reduce using rule 47 (lib_function_declaration_list)


state 440

   48 lib_function_declaration_list: lib_function_declaration_list class_definition .

    $default  reduce using rule 48 (lib_function_declaration_list)


state 441

  171 elsif: ELSIF expression THEN . myblock

    CR  shift, and go to state 109

    myblock  go to state 472


state 442

  168 if_statement: IF expression THEN myblock elsif_list ELSE myblock .

    $default  reduce using rule 168 (if_statement)


state 443

  150 expression_list: expression_list COMMA assignment_expression .
  181 case_expression_list: expression_list COMMA assignment_expression .

    CR        reduce using rule 181 (case_expression_list)
    $default  reduce using rule 150 (expression_list)


state 444

  199 catch_clause: CATCH @2 type_specifier IDENTIFIER myblock .

    $default  reduce using rule 199 (catch_clause)


state 445

  134 primary_no_new_array: NEW IDENTIFIER DOT IDENTIFIER LP argument_list RP .

    $default  reduce using rule 134 (primary_no_new_array)


state 446

   59 parameter_list: parameter_list COMMA IDENTIFIER AS . type_specifier

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 473


state 447

  270 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 474


state 448

  271 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 475


state 449

  205 declaration_statement: FINAL IDENTIFIER AS type_specifier ASSIGN_T expression CR .

    $default  reduce using rule 205 (declaration_statement)


state 450

   53 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 476


state 451

   54 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 477


state 452

  203 declaration_statement: DIM volatile IDENTIFIER AS shared type_specifier ASSIGN_T . expression CR

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    expression                 go to state 478
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 453

  202 declaration_statement: DIM volatile IDENTIFIER AS shared type_specifier CR .

    $default  reduce using rule 202 (declaration_statement)


state 454

   49 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 479


state 455

   50 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 480


state 456

   51 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP . throws_clause CR

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 481


state 457

   52 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause . CR

    CR  shift, and go to state 482


state 458

   55 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause . myblock

    CR  shift, and go to state 109

    myblock  go to state 483


state 459

  255 exception_list: IDENTIFIER .

    $default  reduce using rule 255 (exception_list)


state 460

  254 throws_clause: THROWS exception_list .
  256 exception_list: exception_list . COMMA IDENTIFIER

    COMMA  shift, and go to state 484

    $default  reduce using rule 254 (throws_clause)


state 461

   56 function_definition: BSUB IDENTIFIER LP apostrophe RP throws_clause myblock .

    $default  reduce using rule 56 (function_definition)


state 462

  184 do_while_statement: label_opt DO_T block WHILE LP expression RP . CR

    CR  shift, and go to state 485


state 463

  183 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt . myblock

    CR  shift, and go to state 109

    myblock  go to state 486


state 464

  185 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP . block

    LC  shift, and go to state 265

    block  go to state 487


state 465

  218 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR . $@5 member_declaration_list END
  222                 | shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR . $@7 END

    END       reduce using rule 221 ($@7)
    $default  reduce using rule 217 ($@5)

    $@5  go to state 488
    $@7  go to state 489


state 466

   31 identifier_type_specifier: IDENTIFIER .

    $default  reduce using rule 31 (identifier_type_specifier)


state 467

  211 template_def_list: IDENTIFIER COLON identifier_type_specifier .

    $default  reduce using rule 211 (template_def_list)


state 468

  210 template_def_list: template_def_list COMMA IDENTIFIER .
  212                  | template_def_list COMMA IDENTIFIER . COLON identifier_type_specifier

    COLON  shift, and go to state 490

    $default  reduce using rule 210 (template_def_list)


state 469

  234 extends_list: extends_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 491


state 470

  216 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@4 . member_declaration_list END

    PUBLIC_T     shift, and go to state 183
    PRIVATE_T    shift, and go to state 184
    VIRTUAL_T    shift, and go to state 185
    OVERRIDE_T   shift, and go to state 186
    ABSTRACT_T   shift, and go to state 187
    CONSTRUCTOR  shift, and go to state 492
    FINAL        shift, and go to state 493
    FUNCTION     shift, and go to state 494
    DIM          shift, and go to state 495
    DECLARE      shift, and go to state 496
    BSUB         shift, and go to state 497

    class_or_member_modifier_list  go to state 498
    class_or_member_modifier       go to state 189
    member_declaration_list        go to state 499
    member_declaration             go to state 500
    method_member                  go to state 501
    method_function_definition     go to state 502
    constructor_definition         go to state 503
    access_modifier                go to state 191
    field_member                   go to state 504


state 471

  220 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@6 . END

    END  shift, and go to state 505


state 472

  171 elsif: ELSIF expression THEN myblock .

    $default  reduce using rule 171 (elsif)


state 473

   59 parameter_list: parameter_list COMMA IDENTIFIER AS type_specifier .

    $default  reduce using rule 59 (parameter_list)


state 474

  270 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 506


state 475

  271 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 507


state 476

   53 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 508


state 477

   54 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 109

    myblock  go to state 509


state 478

   65 expression: expression . COMMA assignment_expression
  203 declaration_statement: DIM volatile IDENTIFIER AS shared type_specifier ASSIGN_T expression . CR

    COMMA  shift, and go to state 143
    CR     shift, and go to state 510


state 479

   49 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 511


state 480

   50 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 512


state 481

   51 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause . CR

    CR  shift, and go to state 513


state 482

   52 function_declaration: DECLARE BSUB IDENTIFIER LP apostrophe RP throws_clause CR .

    $default  reduce using rule 52 (function_declaration)


state 483

   55 function_definition: BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause myblock .

    $default  reduce using rule 55 (function_definition)


state 484

  256 exception_list: exception_list COMMA . IDENTIFIER

    IDENTIFIER  shift, and go to state 514


state 485

  184 do_while_statement: label_opt DO_T block WHILE LP expression RP CR .

    $default  reduce using rule 184 (do_while_statement)


state 486

  183 for_statement: label_opt FOR expression_opt SEMICOLON expression_opt SEMICOLON expression_opt myblock .

    $default  reduce using rule 183 (for_statement)


state 487

  185 foreach_statement: label_opt FOREACH LP IDENTIFIER COLON expression RP block .

    $default  reduce using rule 185 (foreach_statement)


state 488

  218 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 . member_declaration_list END

    PUBLIC_T     shift, and go to state 183
    PRIVATE_T    shift, and go to state 184
    VIRTUAL_T    shift, and go to state 185
    OVERRIDE_T   shift, and go to state 186
    ABSTRACT_T   shift, and go to state 187
    CONSTRUCTOR  shift, and go to state 492
    FINAL        shift, and go to state 493
    FUNCTION     shift, and go to state 494
    DIM          shift, and go to state 495
    DECLARE      shift, and go to state 496
    BSUB         shift, and go to state 497

    class_or_member_modifier_list  go to state 498
    class_or_member_modifier       go to state 189
    member_declaration_list        go to state 515
    member_declaration             go to state 500
    method_member                  go to state 501
    method_function_definition     go to state 502
    constructor_definition         go to state 503
    access_modifier                go to state 191
    field_member                   go to state 504


state 489

  222 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 . END

    END  shift, and go to state 516


state 490

  212 template_def_list: template_def_list COMMA IDENTIFIER COLON . identifier_type_specifier

    IDENTIFIER  shift, and go to state 466

    identifier_type_specifier  go to state 517


state 491

  234 extends_list: extends_list COMMA IDENTIFIER .

    $default  reduce using rule 234 (extends_list)


state 492

  257 constructor_definition: CONSTRUCTOR . IDENTIFIER LP parameter_list RP throws_clause myblock
  258                       | CONSTRUCTOR . IDENTIFIER LP RP throws_clause myblock

    IDENTIFIER  shift, and go to state 518


state 493

  267 field_member: FINAL . IDENTIFIER AS type_specifier initializer_opt CR
  269             | FINAL . class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 519
    PUBLIC_T    shift, and go to state 183
    PRIVATE_T   shift, and go to state 184
    VIRTUAL_T   shift, and go to state 185
    OVERRIDE_T  shift, and go to state 186
    ABSTRACT_T  shift, and go to state 187

    class_or_member_modifier_list  go to state 520
    class_or_member_modifier       go to state 189
    access_modifier                go to state 191


state 494

  243 method_function_definition: FUNCTION . IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock
  244                           | FUNCTION . IDENTIFIER LP RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 521


state 495

  265 field_member: DIM . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 522


state 496

  245 method_function_definition: DECLARE . FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  246                           | DECLARE . FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR
  249                           | DECLARE . BSUB IDENTIFIER LP parameter_list RP throws_clause CR
  250                           | DECLARE . BSUB IDENTIFIER LP RP throws_clause CR
  259 constructor_definition: DECLARE . CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR
  260                       | DECLARE . CONSTRUCTOR IDENTIFIER LP RP throws_clause CR

    CONSTRUCTOR  shift, and go to state 523
    FUNCTION     shift, and go to state 524
    BSUB         shift, and go to state 525


state 497

  247 method_function_definition: BSUB . IDENTIFIER LP parameter_list RP throws_clause myblock
  248                           | BSUB . IDENTIFIER LP RP throws_clause myblock

    IDENTIFIER  shift, and go to state 526


state 498

  224 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier
  240 method_member: class_or_member_modifier_list . method_function_definition
  242              | class_or_member_modifier_list . constructor_definition
  266 field_member: class_or_member_modifier_list . IDENTIFIER AS type_specifier initializer_opt CR
  268             | class_or_member_modifier_list . FINAL IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER   shift, and go to state 527
    PUBLIC_T     shift, and go to state 183
    PRIVATE_T    shift, and go to state 184
    VIRTUAL_T    shift, and go to state 185
    OVERRIDE_T   shift, and go to state 186
    ABSTRACT_T   shift, and go to state 187
    CONSTRUCTOR  shift, and go to state 492
    FINAL        shift, and go to state 528
    FUNCTION     shift, and go to state 494
    DECLARE      shift, and go to state 496
    BSUB         shift, and go to state 497

    class_or_member_modifier    go to state 269
    method_function_definition  go to state 529
    constructor_definition      go to state 530
    access_modifier             go to state 191


state 499

  216 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list . END
  236 member_declaration_list: member_declaration_list . member_declaration

    PUBLIC_T     shift, and go to state 183
    PRIVATE_T    shift, and go to state 184
    VIRTUAL_T    shift, and go to state 185
    OVERRIDE_T   shift, and go to state 186
    ABSTRACT_T   shift, and go to state 187
    CONSTRUCTOR  shift, and go to state 492
    FINAL        shift, and go to state 493
    FUNCTION     shift, and go to state 494
    DIM          shift, and go to state 495
    END          shift, and go to state 531
    DECLARE      shift, and go to state 496
    BSUB         shift, and go to state 497

    class_or_member_modifier_list  go to state 498
    class_or_member_modifier       go to state 189
    member_declaration             go to state 532
    method_member                  go to state 501
    method_function_definition     go to state 502
    constructor_definition         go to state 503
    access_modifier                go to state 191
    field_member                   go to state 504


state 500

  235 member_declaration_list: member_declaration .

    $default  reduce using rule 235 (member_declaration_list)


state 501

  237 member_declaration: method_member .

    $default  reduce using rule 237 (member_declaration)


state 502

  239 method_member: method_function_definition .

    $default  reduce using rule 239 (method_member)


state 503

  241 method_member: constructor_definition .

    $default  reduce using rule 241 (method_member)


state 504

  238 member_declaration: field_member .

    $default  reduce using rule 238 (member_declaration)


state 505

  220 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@6 END .

    $default  reduce using rule 220 (class_definition)


state 506

  270 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 533


state 507

  271 delegate_definition: DELEGATE IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 271 (delegate_definition)


state 508

   53 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 109

    myblock  go to state 534


state 509

   54 function_definition: FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 54 (function_definition)


state 510

  203 declaration_statement: DIM volatile IDENTIFIER AS shared type_specifier ASSIGN_T expression CR .

    $default  reduce using rule 203 (declaration_statement)


state 511

   49 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 535


state 512

   50 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 536


state 513

   51 function_declaration: DECLARE BSUB IDENTIFIER LP parameter_list apostrophe RP throws_clause CR .

    $default  reduce using rule 51 (function_declaration)


state 514

  256 exception_list: exception_list COMMA IDENTIFIER .

    $default  reduce using rule 256 (exception_list)


state 515

  218 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list . END
  236 member_declaration_list: member_declaration_list . member_declaration

    PUBLIC_T     shift, and go to state 183
    PRIVATE_T    shift, and go to state 184
    VIRTUAL_T    shift, and go to state 185
    OVERRIDE_T   shift, and go to state 186
    ABSTRACT_T   shift, and go to state 187
    CONSTRUCTOR  shift, and go to state 492
    FINAL        shift, and go to state 493
    FUNCTION     shift, and go to state 494
    DIM          shift, and go to state 495
    END          shift, and go to state 537
    DECLARE      shift, and go to state 496
    BSUB         shift, and go to state 497

    class_or_member_modifier_list  go to state 498
    class_or_member_modifier       go to state 189
    member_declaration             go to state 532
    method_member                  go to state 501
    method_function_definition     go to state 502
    constructor_definition         go to state 503
    access_modifier                go to state 191
    field_member                   go to state 504


state 516

  222 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@7 END .

    $default  reduce using rule 222 (class_definition)


state 517

  212 template_def_list: template_def_list COMMA IDENTIFIER COLON identifier_type_specifier .

    $default  reduce using rule 212 (template_def_list)


state 518

  257 constructor_definition: CONSTRUCTOR IDENTIFIER . LP parameter_list RP throws_clause myblock
  258                       | CONSTRUCTOR IDENTIFIER . LP RP throws_clause myblock

    LP  shift, and go to state 538


state 519

  267 field_member: FINAL IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 539


state 520

  224 class_or_member_modifier_list: class_or_member_modifier_list . class_or_member_modifier
  269 field_member: FINAL class_or_member_modifier_list . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 540
    PUBLIC_T    shift, and go to state 183
    PRIVATE_T   shift, and go to state 184
    VIRTUAL_T   shift, and go to state 185
    OVERRIDE_T  shift, and go to state 186
    ABSTRACT_T  shift, and go to state 187

    class_or_member_modifier  go to state 269
    access_modifier           go to state 191


state 521

  243 method_function_definition: FUNCTION IDENTIFIER . LP parameter_list RP AS type_specifier throws_clause myblock
  244                           | FUNCTION IDENTIFIER . LP RP AS type_specifier throws_clause myblock

    LP  shift, and go to state 541


state 522

  265 field_member: DIM IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 542


state 523

  259 constructor_definition: DECLARE CONSTRUCTOR . IDENTIFIER LP parameter_list RP throws_clause CR
  260                       | DECLARE CONSTRUCTOR . IDENTIFIER LP RP throws_clause CR

    IDENTIFIER  shift, and go to state 543


state 524

  245 method_function_definition: DECLARE FUNCTION . IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR
  246                           | DECLARE FUNCTION . IDENTIFIER LP RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 544


state 525

  249 method_function_definition: DECLARE BSUB . IDENTIFIER LP parameter_list RP throws_clause CR
  250                           | DECLARE BSUB . IDENTIFIER LP RP throws_clause CR

    IDENTIFIER  shift, and go to state 545


state 526

  247 method_function_definition: BSUB IDENTIFIER . LP parameter_list RP throws_clause myblock
  248                           | BSUB IDENTIFIER . LP RP throws_clause myblock

    LP  shift, and go to state 546


state 527

  266 field_member: class_or_member_modifier_list IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 547


state 528

  268 field_member: class_or_member_modifier_list FINAL . IDENTIFIER AS type_specifier initializer_opt CR

    IDENTIFIER  shift, and go to state 548


state 529

  240 method_member: class_or_member_modifier_list method_function_definition .

    $default  reduce using rule 240 (method_member)


state 530

  242 method_member: class_or_member_modifier_list constructor_definition .

    $default  reduce using rule 242 (method_member)


state 531

  216 class_definition: shared class_or_interface IDENTIFIER template_list extends CR $@4 member_declaration_list END .

    $default  reduce using rule 216 (class_definition)


state 532

  236 member_declaration_list: member_declaration_list member_declaration .

    $default  reduce using rule 236 (member_declaration_list)


state 533

  270 delegate_definition: DELEGATE IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 270 (delegate_definition)


state 534

   53 function_definition: FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 53 (function_definition)


state 535

   49 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 549


state 536

   50 function_declaration: DECLARE FUNCTION IDENTIFIER LP apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 50 (function_declaration)


state 537

  218 class_definition: shared class_or_member_modifier_list class_or_interface IDENTIFIER template_list extends CR $@5 member_declaration_list END .

    $default  reduce using rule 218 (class_definition)


state 538

  257 constructor_definition: CONSTRUCTOR IDENTIFIER LP . parameter_list RP throws_clause myblock
  258                       | CONSTRUCTOR IDENTIFIER LP . RP throws_clause myblock

    IDENTIFIER  shift, and go to state 303
    RP          shift, and go to state 550

    parameter_list  go to state 551


state 539

  267 field_member: FINAL IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 552


state 540

  269 field_member: FINAL class_or_member_modifier_list IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 553


state 541

  243 method_function_definition: FUNCTION IDENTIFIER LP . parameter_list RP AS type_specifier throws_clause myblock
  244                           | FUNCTION IDENTIFIER LP . RP AS type_specifier throws_clause myblock

    IDENTIFIER  shift, and go to state 303
    RP          shift, and go to state 554

    parameter_list  go to state 555


state 542

  265 field_member: DIM IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 556


state 543

  259 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER . LP parameter_list RP throws_clause CR
  260                       | DECLARE CONSTRUCTOR IDENTIFIER . LP RP throws_clause CR

    LP  shift, and go to state 557


state 544

  245 method_function_definition: DECLARE FUNCTION IDENTIFIER . LP parameter_list RP AS type_specifier throws_clause CR
  246                           | DECLARE FUNCTION IDENTIFIER . LP RP AS type_specifier throws_clause CR

    LP  shift, and go to state 558


state 545

  249 method_function_definition: DECLARE BSUB IDENTIFIER . LP parameter_list RP throws_clause CR
  250                           | DECLARE BSUB IDENTIFIER . LP RP throws_clause CR

    LP  shift, and go to state 559


state 546

  247 method_function_definition: BSUB IDENTIFIER LP . parameter_list RP throws_clause myblock
  248                           | BSUB IDENTIFIER LP . RP throws_clause myblock

    IDENTIFIER  shift, and go to state 303
    RP          shift, and go to state 560

    parameter_list  go to state 561


state 547

  266 field_member: class_or_member_modifier_list IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 562


state 548

  268 field_member: class_or_member_modifier_list FINAL IDENTIFIER . AS type_specifier initializer_opt CR

    AS  shift, and go to state 563


state 549

   49 function_declaration: DECLARE FUNCTION IDENTIFIER LP parameter_list apostrophe RP AS type_specifier throws_clause CR .

    $default  reduce using rule 49 (function_declaration)


state 550

  258 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP . throws_clause myblock

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 564


state 551

   59 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  257 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list . RP throws_clause myblock

    RP     shift, and go to state 565
    COMMA  shift, and go to state 566


state 552

  267 field_member: FINAL IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 567

    $default  reduce using rule 263 (initializer_opt)

    initializer_opt  go to state 568


state 553

  269 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 569


state 554

  244 method_function_definition: FUNCTION IDENTIFIER LP RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 570


state 555

   59 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  243 method_function_definition: FUNCTION IDENTIFIER LP parameter_list . RP AS type_specifier throws_clause myblock

    RP     shift, and go to state 571
    COMMA  shift, and go to state 566


state 556

  265 field_member: DIM IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 567

    $default  reduce using rule 263 (initializer_opt)

    initializer_opt  go to state 572


state 557

  259 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP . parameter_list RP throws_clause CR
  260                       | DECLARE CONSTRUCTOR IDENTIFIER LP . RP throws_clause CR

    IDENTIFIER  shift, and go to state 303
    RP          shift, and go to state 573

    parameter_list  go to state 574


state 558

  245 method_function_definition: DECLARE FUNCTION IDENTIFIER LP . parameter_list RP AS type_specifier throws_clause CR
  246                           | DECLARE FUNCTION IDENTIFIER LP . RP AS type_specifier throws_clause CR

    IDENTIFIER  shift, and go to state 303
    RP          shift, and go to state 575

    parameter_list  go to state 576


state 559

  249 method_function_definition: DECLARE BSUB IDENTIFIER LP . parameter_list RP throws_clause CR
  250                           | DECLARE BSUB IDENTIFIER LP . RP throws_clause CR

    IDENTIFIER  shift, and go to state 303
    RP          shift, and go to state 577

    parameter_list  go to state 578


state 560

  248 method_function_definition: BSUB IDENTIFIER LP RP . throws_clause myblock

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 579


state 561

   59 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  247 method_function_definition: BSUB IDENTIFIER LP parameter_list . RP throws_clause myblock

    RP     shift, and go to state 580
    COMMA  shift, and go to state 566


state 562

  266 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 567

    $default  reduce using rule 263 (initializer_opt)

    initializer_opt  go to state 581


state 563

  268 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS . type_specifier initializer_opt CR

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 582


state 564

  258 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP throws_clause . myblock

    CR  shift, and go to state 109

    myblock  go to state 583


state 565

  257 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP . throws_clause myblock

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 584


state 566

   59 parameter_list: parameter_list COMMA . IDENTIFIER AS type_specifier

    IDENTIFIER  shift, and go to state 410


state 567

  264 initializer_opt: ASSIGN_T . expression

    INT_LITERAL     shift, and go to state 13
    DOUBLE_LITERAL  shift, and go to state 14
    FLOAT_LITERAL   shift, and go to state 15
    STRING_LITERAL  shift, and go to state 16
    REGEXP_LITERAL  shift, and go to state 17
    IDENTIFIER      shift, and go to state 94
    AUTOVAR         shift, and go to state 19
    NULL_T          shift, and go to state 25
    LP              shift, and go to state 26
    LC              shift, and go to state 27
    SUB             shift, and go to state 28
    BIT_NOT         shift, and go to state 29
    TRUE_T          shift, and go to state 30
    FALSE_T         shift, and go to state 31
    EXCLAMATION     shift, and go to state 32
    NEW             shift, and go to state 35
    THIS_T          shift, and go to state 36
    SUPER_T         shift, and go to state 37

    expression                 go to state 585
    assignment_expression      go to state 52
    logical_or_expression      go to state 53
    logical_and_expression     go to state 54
    equality_expression        go to state 55
    relational_expression      go to state 56
    additive_expression        go to state 57
    multiplicative_expression  go to state 58
    unary_expression           go to state 59
    postfix_expression         go to state 60
    primary_expression         go to state 61
    primary_no_new_array       go to state 62
    array_literal              go to state 63
    array_creation             go to state 64


state 568

  267 field_member: FINAL IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 586


state 569

  269 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 567

    $default  reduce using rule 263 (initializer_opt)

    initializer_opt  go to state 587


state 570

  244 method_function_definition: FUNCTION IDENTIFIER LP RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 588


state 571

  243 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP . AS type_specifier throws_clause myblock

    AS  shift, and go to state 589


state 572

  265 field_member: DIM IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 590


state 573

  260 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP . throws_clause CR

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 591


state 574

   59 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  259 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list . RP throws_clause CR

    RP     shift, and go to state 592
    COMMA  shift, and go to state 566


state 575

  246 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 593


state 576

   59 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  245 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list . RP AS type_specifier throws_clause CR

    RP     shift, and go to state 594
    COMMA  shift, and go to state 566


state 577

  250 method_function_definition: DECLARE BSUB IDENTIFIER LP RP . throws_clause CR

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 595


state 578

   59 parameter_list: parameter_list . COMMA IDENTIFIER AS type_specifier
  249 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list . RP throws_clause CR

    RP     shift, and go to state 596
    COMMA  shift, and go to state 566


state 579

  248 method_function_definition: BSUB IDENTIFIER LP RP throws_clause . myblock

    CR  shift, and go to state 109

    myblock  go to state 597


state 580

  247 method_function_definition: BSUB IDENTIFIER LP parameter_list RP . throws_clause myblock

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 598


state 581

  266 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 599


state 582

  268 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier . initializer_opt CR

    ASSIGN_T  shift, and go to state 567

    $default  reduce using rule 263 (initializer_opt)

    initializer_opt  go to state 600


state 583

  258 constructor_definition: CONSTRUCTOR IDENTIFIER LP RP throws_clause myblock .

    $default  reduce using rule 258 (constructor_definition)


state 584

  257 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause . myblock

    CR  shift, and go to state 109

    myblock  go to state 601


state 585

   65 expression: expression . COMMA assignment_expression
  264 initializer_opt: ASSIGN_T expression .

    COMMA  shift, and go to state 143

    $default  reduce using rule 264 (initializer_opt)


state 586

  267 field_member: FINAL IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 267 (field_member)


state 587

  269 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 602


state 588

  244 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 603


state 589

  243 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS . type_specifier throws_clause myblock

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 604


state 590

  265 field_member: DIM IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 265 (field_member)


state 591

  260 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause . CR

    CR  shift, and go to state 605


state 592

  259 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP . throws_clause CR

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 606


state 593

  246 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 607


state 594

  245 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP . AS type_specifier throws_clause CR

    AS  shift, and go to state 608


state 595

  250 method_function_definition: DECLARE BSUB IDENTIFIER LP RP throws_clause . CR

    CR  shift, and go to state 609


state 596

  249 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP . throws_clause CR

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 610


state 597

  248 method_function_definition: BSUB IDENTIFIER LP RP throws_clause myblock .

    $default  reduce using rule 248 (method_function_definition)


state 598

  247 method_function_definition: BSUB IDENTIFIER LP parameter_list RP throws_clause . myblock

    CR  shift, and go to state 109

    myblock  go to state 611


state 599

  266 field_member: class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 266 (field_member)


state 600

  268 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt . CR

    CR  shift, and go to state 612


state 601

  257 constructor_definition: CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause myblock .

    $default  reduce using rule 257 (constructor_definition)


state 602

  269 field_member: FINAL class_or_member_modifier_list IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 269 (field_member)


state 603

  244 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 109

    myblock  go to state 613


state 604

  243 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier . throws_clause myblock

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 614


state 605

  260 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP RP throws_clause CR .

    $default  reduce using rule 260 (constructor_definition)


state 606

  259 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause . CR

    CR  shift, and go to state 615


state 607

  246 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 616


state 608

  245 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS . type_specifier throws_clause CR

    IDENTIFIER        shift, and go to state 259
    VOID_T            shift, and go to state 114
    BOOLEAN_T         shift, and go to state 115
    INT_T             shift, and go to state 116
    DOUBLE_T          shift, and go to state 117
    STRING_T          shift, and go to state 118
    VARIENT_T         shift, and go to state 119
    FLOAT_T           shift, and go to state 120
    NATIVE_POINTER_T  shift, and go to state 121
    DELEGATE          shift, and go to state 130

    basic_type_specifier       go to state 131
    identifier_type_specifier  go to state 132
    array_type_specifier_sub   go to state 133
    array_type_specifier       go to state 134
    template_type_specifier    go to state 135
    type_specifier             go to state 617


state 609

  250 method_function_definition: DECLARE BSUB IDENTIFIER LP RP throws_clause CR .

    $default  reduce using rule 250 (method_function_definition)


state 610

  249 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause . CR

    CR  shift, and go to state 618


state 611

  247 method_function_definition: BSUB IDENTIFIER LP parameter_list RP throws_clause myblock .

    $default  reduce using rule 247 (method_function_definition)


state 612

  268 field_member: class_or_member_modifier_list FINAL IDENTIFIER AS type_specifier initializer_opt CR .

    $default  reduce using rule 268 (field_member)


state 613

  244 method_function_definition: FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 244 (method_function_definition)


state 614

  243 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause . myblock

    CR  shift, and go to state 109

    myblock  go to state 619


state 615

  259 constructor_definition: DECLARE CONSTRUCTOR IDENTIFIER LP parameter_list RP throws_clause CR .

    $default  reduce using rule 259 (constructor_definition)


state 616

  246 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 620


state 617

  245 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier . throws_clause CR

    THROWS  shift, and go to state 424

    $default  reduce using rule 253 (throws_clause)

    throws_clause  go to state 621


state 618

  249 method_function_definition: DECLARE BSUB IDENTIFIER LP parameter_list RP throws_clause CR .

    $default  reduce using rule 249 (method_function_definition)


state 619

  243 method_function_definition: FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause myblock .

    $default  reduce using rule 243 (method_function_definition)


state 620

  246 method_function_definition: DECLARE FUNCTION IDENTIFIER LP RP AS type_specifier throws_clause CR .

    $default  reduce using rule 246 (method_function_definition)


state 621

  245 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause . CR

    CR  shift, and go to state 622


state 622

  245 method_function_definition: DECLARE FUNCTION IDENTIFIER LP parameter_list RP AS type_specifier throws_clause CR .

    $default  reduce using rule 245 (method_function_definition)
